package types

import (
	"encoding/json"
	"fmt"
	scale "github.com/centrifuge/go-substrate-rpc-client/v4/scale"
	types "github.com/centrifuge/go-substrate-rpc-client/v4/types"
	codec "github.com/centrifuge/go-substrate-rpc-client/v4/types/codec"
)

const encMeta = ""

var Meta types.Metadata
var _ = codec.DecodeFromHex(encMeta, &Meta)

// Generated pallet_balances_types_AccountData with id={{false [5]}}
type AccountData struct {
	// Field 0 with TypeId=6
	Free types.U128
	// Field 1 with TypeId=6
	Reserved types.U128
	// Field 2 with TypeId=6
	Frozen types.U128
	// Field 3 with TypeId=7
	Flags types.U128
}

// Generated frame_system_AccountInfo with id={{false [3]}}
type AccountInfo struct {
	// Field 0 with TypeId=4
	Nonce uint32
	// Field 1 with TypeId=4
	Consumers uint32
	// Field 2 with TypeId=4
	Providers uint32
	// Field 3 with TypeId=4
	Sufficients uint32
	// Field 4 with TypeId=5
	Data AccountData
}

// Generated sp_weights_weight_v2_Weight with id={{false [10]}}
type Weight struct {
	// Field 0 with TypeId=11
	RefTime types.UCompact
	// Field 1 with TypeId=11
	ProofSize types.UCompact
}

// Generated frame_support_dispatch_PerDispatchClass with id={{false [9]}}
type PerDispatchClass struct {
	// Field 0 with TypeId=10
	Normal Weight
	// Field 1 with TypeId=10
	Operational Weight
	// Field 2 with TypeId=10
	Mandatory Weight
}

// Generated SpRuntimeGenericDigestDigestItem with id=17
type DigestItem struct {
	IsPreRuntime                   bool
	AsPreRuntimeConsensusEngineId0 [4]byte
	AsPreRuntimeVecu81             []byte
	IsConsensus                    bool
	AsConsensusConsensusEngineId0  [4]byte
	AsConsensusVecu81              []byte
	IsSeal                         bool
	AsSealConsensusEngineId0       [4]byte
	AsSealVecu81                   []byte
	IsOther                        bool
	AsOtherField0                  []byte
	IsRuntimeEnvironmentUpdated    bool
}

func (ty DigestItem) Encode(encoder scale.Encoder) (err error) {
	if ty.IsPreRuntime {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPreRuntimeConsensusEngineId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPreRuntimeVecu81)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsConsensus {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsConsensusConsensusEngineId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsConsensusVecu81)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSeal {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSealConsensusEngineId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSealVecu81)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOther {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOtherField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRuntimeEnvironmentUpdated {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *DigestItem) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 6:
		ty.IsPreRuntime = true
		err = decoder.Decode(&ty.AsPreRuntimeConsensusEngineId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPreRuntimeVecu81)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsConsensus = true
		err = decoder.Decode(&ty.AsConsensusConsensusEngineId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsConsensusVecu81)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsSeal = true
		err = decoder.Decode(&ty.AsSealConsensusEngineId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSealVecu81)
		if err != nil {
			return err
		}
		return
	case 0:
		ty.IsOther = true
		err = decoder.Decode(&ty.AsOtherField0)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsRuntimeEnvironmentUpdated = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *DigestItem) Variant() (uint8, error) {
	if ty.IsPreRuntime {
		return 6, nil
	}
	if ty.IsConsensus {
		return 4, nil
	}
	if ty.IsSeal {
		return 5, nil
	}
	if ty.IsOther {
		return 0, nil
	}
	if ty.IsRuntimeEnvironmentUpdated {
		return 8, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty DigestItem) MarshalJSON() ([]byte, error) {
	if ty.IsPreRuntime {
		m := map[string]interface{}{"DigestItem::PreRuntime": map[string]interface{}{
			"AsPreRuntimeConsensusEngineId0": ty.AsPreRuntimeConsensusEngineId0,
			"AsPreRuntimeVecu81":             ty.AsPreRuntimeVecu81,
		}}
		return json.Marshal(m)
	}
	if ty.IsConsensus {
		m := map[string]interface{}{"DigestItem::Consensus": map[string]interface{}{
			"AsConsensusConsensusEngineId0": ty.AsConsensusConsensusEngineId0,
			"AsConsensusVecu81":             ty.AsConsensusVecu81,
		}}
		return json.Marshal(m)
	}
	if ty.IsSeal {
		m := map[string]interface{}{"DigestItem::Seal": map[string]interface{}{
			"AsSealConsensusEngineId0": ty.AsSealConsensusEngineId0,
			"AsSealVecu81":             ty.AsSealVecu81,
		}}
		return json.Marshal(m)
	}
	if ty.IsOther {
		m := map[string]interface{}{"DigestItem::Other": ty.AsOtherField0}
		return json.Marshal(m)
	}
	if ty.IsRuntimeEnvironmentUpdated {
		return json.Marshal("DigestItem::RuntimeEnvironmentUpdated")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSystemPhase with id=85
type Phase struct {
	IsApplyExtrinsic       bool
	AsApplyExtrinsicField0 uint32
	IsFinalization         bool
	IsInitialization       bool
}

func (ty Phase) Encode(encoder scale.Encoder) (err error) {
	if ty.IsApplyExtrinsic {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsApplyExtrinsicField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFinalization {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInitialization {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Phase) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsApplyExtrinsic = true
		err = decoder.Decode(&ty.AsApplyExtrinsicField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsFinalization = true
		return
	case 2:
		ty.IsInitialization = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Phase) Variant() (uint8, error) {
	if ty.IsApplyExtrinsic {
		return 0, nil
	}
	if ty.IsFinalization {
		return 1, nil
	}
	if ty.IsInitialization {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Phase) MarshalJSON() ([]byte, error) {
	if ty.IsApplyExtrinsic {
		m := map[string]interface{}{"Phase::ApplyExtrinsic": ty.AsApplyExtrinsicField0}
		return json.Marshal(m)
	}
	if ty.IsFinalization {
		return json.Marshal("Phase::Finalization")
	}
	if ty.IsInitialization {
		return json.Marshal("Phase::Initialization")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSupportDispatchDispatchClass with id=24
type DispatchClass struct {
	IsNormal      bool
	IsOperational bool
	IsMandatory   bool
}

func (ty DispatchClass) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNormal {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOperational {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMandatory {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *DispatchClass) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNormal = true
		return
	case 1:
		ty.IsOperational = true
		return
	case 2:
		ty.IsMandatory = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *DispatchClass) Variant() (uint8, error) {
	if ty.IsNormal {
		return 0, nil
	}
	if ty.IsOperational {
		return 1, nil
	}
	if ty.IsMandatory {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty DispatchClass) MarshalJSON() ([]byte, error) {
	if ty.IsNormal {
		return json.Marshal("DispatchClass::Normal")
	}
	if ty.IsOperational {
		return json.Marshal("DispatchClass::Operational")
	}
	if ty.IsMandatory {
		return json.Marshal("DispatchClass::Mandatory")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSupportDispatchPays with id=25
type Pays struct {
	IsYes bool
	IsNo  bool
}

func (ty Pays) Encode(encoder scale.Encoder) (err error) {
	if ty.IsYes {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNo {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Pays) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsYes = true
		return
	case 1:
		ty.IsNo = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Pays) Variant() (uint8, error) {
	if ty.IsYes {
		return 0, nil
	}
	if ty.IsNo {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Pays) MarshalJSON() ([]byte, error) {
	if ty.IsYes {
		return json.Marshal("Pays::Yes")
	}
	if ty.IsNo {
		return json.Marshal("Pays::No")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated frame_system_DispatchEventInfo with id={{false [23]}}
type DispatchEventInfo struct {
	// Field 0 with TypeId=10
	Weight Weight
	// Field 1 with TypeId=24
	Class DispatchClass
	// Field 2 with TypeId=25
	PaysFee Pays
}

// Generated sp_runtime_ModuleError with id={{false [27]}}
type ModuleError struct {
	// Field 0 with TypeId=2
	Index byte
	// Field 1 with TypeId=18
	Error [4]byte
}

// Generated SpRuntimeTokenError with id=28
type TokenError struct {
	IsFundsUnavailable bool
	IsOnlyProvider     bool
	IsBelowMinimum     bool
	IsCannotCreate     bool
	IsUnknownAsset     bool
	IsFrozen           bool
	IsUnsupported      bool
	IsCannotCreateHold bool
	IsNotExpendable    bool
	IsBlocked          bool
}

func (ty TokenError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsFundsUnavailable {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOnlyProvider {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBelowMinimum {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCannotCreate {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnknownAsset {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFrozen {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnsupported {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCannotCreateHold {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNotExpendable {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBlocked {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *TokenError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsFundsUnavailable = true
		return
	case 1:
		ty.IsOnlyProvider = true
		return
	case 2:
		ty.IsBelowMinimum = true
		return
	case 3:
		ty.IsCannotCreate = true
		return
	case 4:
		ty.IsUnknownAsset = true
		return
	case 5:
		ty.IsFrozen = true
		return
	case 6:
		ty.IsUnsupported = true
		return
	case 7:
		ty.IsCannotCreateHold = true
		return
	case 8:
		ty.IsNotExpendable = true
		return
	case 9:
		ty.IsBlocked = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *TokenError) Variant() (uint8, error) {
	if ty.IsFundsUnavailable {
		return 0, nil
	}
	if ty.IsOnlyProvider {
		return 1, nil
	}
	if ty.IsBelowMinimum {
		return 2, nil
	}
	if ty.IsCannotCreate {
		return 3, nil
	}
	if ty.IsUnknownAsset {
		return 4, nil
	}
	if ty.IsFrozen {
		return 5, nil
	}
	if ty.IsUnsupported {
		return 6, nil
	}
	if ty.IsCannotCreateHold {
		return 7, nil
	}
	if ty.IsNotExpendable {
		return 8, nil
	}
	if ty.IsBlocked {
		return 9, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty TokenError) MarshalJSON() ([]byte, error) {
	if ty.IsFundsUnavailable {
		return json.Marshal("TokenError::FundsUnavailable")
	}
	if ty.IsOnlyProvider {
		return json.Marshal("TokenError::OnlyProvider")
	}
	if ty.IsBelowMinimum {
		return json.Marshal("TokenError::BelowMinimum")
	}
	if ty.IsCannotCreate {
		return json.Marshal("TokenError::CannotCreate")
	}
	if ty.IsUnknownAsset {
		return json.Marshal("TokenError::UnknownAsset")
	}
	if ty.IsFrozen {
		return json.Marshal("TokenError::Frozen")
	}
	if ty.IsUnsupported {
		return json.Marshal("TokenError::Unsupported")
	}
	if ty.IsCannotCreateHold {
		return json.Marshal("TokenError::CannotCreateHold")
	}
	if ty.IsNotExpendable {
		return json.Marshal("TokenError::NotExpendable")
	}
	if ty.IsBlocked {
		return json.Marshal("TokenError::Blocked")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpArithmeticArithmeticError with id=29
type ArithmeticError struct {
	IsUnderflow      bool
	IsOverflow       bool
	IsDivisionByZero bool
}

func (ty ArithmeticError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsUnderflow {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOverflow {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDivisionByZero {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *ArithmeticError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsUnderflow = true
		return
	case 1:
		ty.IsOverflow = true
		return
	case 2:
		ty.IsDivisionByZero = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *ArithmeticError) Variant() (uint8, error) {
	if ty.IsUnderflow {
		return 0, nil
	}
	if ty.IsOverflow {
		return 1, nil
	}
	if ty.IsDivisionByZero {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty ArithmeticError) MarshalJSON() ([]byte, error) {
	if ty.IsUnderflow {
		return json.Marshal("ArithmeticError::Underflow")
	}
	if ty.IsOverflow {
		return json.Marshal("ArithmeticError::Overflow")
	}
	if ty.IsDivisionByZero {
		return json.Marshal("ArithmeticError::DivisionByZero")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpRuntimeTransactionalError with id=30
type TransactionalError struct {
	IsLimitReached bool
	IsNoLayer      bool
}

func (ty TransactionalError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsLimitReached {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNoLayer {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *TransactionalError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsLimitReached = true
		return
	case 1:
		ty.IsNoLayer = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *TransactionalError) Variant() (uint8, error) {
	if ty.IsLimitReached {
		return 0, nil
	}
	if ty.IsNoLayer {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty TransactionalError) MarshalJSON() ([]byte, error) {
	if ty.IsLimitReached {
		return json.Marshal("TransactionalError::LimitReached")
	}
	if ty.IsNoLayer {
		return json.Marshal("TransactionalError::NoLayer")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpRuntimeProvingTrieTrieError with id=31
type TrieError struct {
	IsInvalidStateRoot        bool
	IsIncompleteDatabase      bool
	IsValueAtIncompleteKey    bool
	IsDecoderError            bool
	IsInvalidHash             bool
	IsDuplicateKey            bool
	IsExtraneousNode          bool
	IsExtraneousValue         bool
	IsExtraneousHashReference bool
	IsInvalidChildReference   bool
	IsValueMismatch           bool
	IsIncompleteProof         bool
	IsRootMismatch            bool
	IsDecodeError             bool
}

func (ty TrieError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsInvalidStateRoot {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIncompleteDatabase {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsValueAtIncompleteKey {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDecoderError {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInvalidHash {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDuplicateKey {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsExtraneousNode {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsExtraneousValue {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsExtraneousHashReference {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInvalidChildReference {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsValueMismatch {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIncompleteProof {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRootMismatch {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDecodeError {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *TrieError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsInvalidStateRoot = true
		return
	case 1:
		ty.IsIncompleteDatabase = true
		return
	case 2:
		ty.IsValueAtIncompleteKey = true
		return
	case 3:
		ty.IsDecoderError = true
		return
	case 4:
		ty.IsInvalidHash = true
		return
	case 5:
		ty.IsDuplicateKey = true
		return
	case 6:
		ty.IsExtraneousNode = true
		return
	case 7:
		ty.IsExtraneousValue = true
		return
	case 8:
		ty.IsExtraneousHashReference = true
		return
	case 9:
		ty.IsInvalidChildReference = true
		return
	case 10:
		ty.IsValueMismatch = true
		return
	case 11:
		ty.IsIncompleteProof = true
		return
	case 12:
		ty.IsRootMismatch = true
		return
	case 13:
		ty.IsDecodeError = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *TrieError) Variant() (uint8, error) {
	if ty.IsInvalidStateRoot {
		return 0, nil
	}
	if ty.IsIncompleteDatabase {
		return 1, nil
	}
	if ty.IsValueAtIncompleteKey {
		return 2, nil
	}
	if ty.IsDecoderError {
		return 3, nil
	}
	if ty.IsInvalidHash {
		return 4, nil
	}
	if ty.IsDuplicateKey {
		return 5, nil
	}
	if ty.IsExtraneousNode {
		return 6, nil
	}
	if ty.IsExtraneousValue {
		return 7, nil
	}
	if ty.IsExtraneousHashReference {
		return 8, nil
	}
	if ty.IsInvalidChildReference {
		return 9, nil
	}
	if ty.IsValueMismatch {
		return 10, nil
	}
	if ty.IsIncompleteProof {
		return 11, nil
	}
	if ty.IsRootMismatch {
		return 12, nil
	}
	if ty.IsDecodeError {
		return 13, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty TrieError) MarshalJSON() ([]byte, error) {
	if ty.IsInvalidStateRoot {
		return json.Marshal("TrieError::InvalidStateRoot")
	}
	if ty.IsIncompleteDatabase {
		return json.Marshal("TrieError::IncompleteDatabase")
	}
	if ty.IsValueAtIncompleteKey {
		return json.Marshal("TrieError::ValueAtIncompleteKey")
	}
	if ty.IsDecoderError {
		return json.Marshal("TrieError::DecoderError")
	}
	if ty.IsInvalidHash {
		return json.Marshal("TrieError::InvalidHash")
	}
	if ty.IsDuplicateKey {
		return json.Marshal("TrieError::DuplicateKey")
	}
	if ty.IsExtraneousNode {
		return json.Marshal("TrieError::ExtraneousNode")
	}
	if ty.IsExtraneousValue {
		return json.Marshal("TrieError::ExtraneousValue")
	}
	if ty.IsExtraneousHashReference {
		return json.Marshal("TrieError::ExtraneousHashReference")
	}
	if ty.IsInvalidChildReference {
		return json.Marshal("TrieError::InvalidChildReference")
	}
	if ty.IsValueMismatch {
		return json.Marshal("TrieError::ValueMismatch")
	}
	if ty.IsIncompleteProof {
		return json.Marshal("TrieError::IncompleteProof")
	}
	if ty.IsRootMismatch {
		return json.Marshal("TrieError::RootMismatch")
	}
	if ty.IsDecodeError {
		return json.Marshal("TrieError::DecodeError")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpRuntimeDispatchError with id=26
type DispatchError struct {
	IsOther               bool
	IsCannotLookup        bool
	IsBadOrigin           bool
	IsModule              bool
	AsModuleField0        ModuleError
	IsConsumerRemaining   bool
	IsNoProviders         bool
	IsTooManyConsumers    bool
	IsToken               bool
	AsTokenField0         *TokenError
	IsArithmetic          bool
	AsArithmeticField0    *ArithmeticError
	IsTransactional       bool
	AsTransactionalField0 *TransactionalError
	IsExhausted           bool
	IsCorruption          bool
	IsUnavailable         bool
	IsRootNotAllowed      bool
	IsTrie                bool
	AsTrieField0          *TrieError
}

func (ty DispatchError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsOther {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCannotLookup {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBadOrigin {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsModule {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsModuleField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsConsumerRemaining {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNoProviders {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTooManyConsumers {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsToken {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTokenField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsArithmetic {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsArithmeticField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransactional {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionalField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsExhausted {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCorruption {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnavailable {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRootNotAllowed {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTrie {
		err = encoder.PushByte(14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTrieField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *DispatchError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsOther = true
		return
	case 1:
		ty.IsCannotLookup = true
		return
	case 2:
		ty.IsBadOrigin = true
		return
	case 3:
		ty.IsModule = true
		err = decoder.Decode(&ty.AsModuleField0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsConsumerRemaining = true
		return
	case 5:
		ty.IsNoProviders = true
		return
	case 6:
		ty.IsTooManyConsumers = true
		return
	case 7:
		ty.IsToken = true
		var tmp TokenError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTokenField0 = &tmp
		return
	case 8:
		ty.IsArithmetic = true
		var tmp ArithmeticError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsArithmeticField0 = &tmp
		return
	case 9:
		ty.IsTransactional = true
		var tmp TransactionalError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTransactionalField0 = &tmp
		return
	case 10:
		ty.IsExhausted = true
		return
	case 11:
		ty.IsCorruption = true
		return
	case 12:
		ty.IsUnavailable = true
		return
	case 13:
		ty.IsRootNotAllowed = true
		return
	case 14:
		ty.IsTrie = true
		var tmp TrieError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTrieField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *DispatchError) Variant() (uint8, error) {
	if ty.IsOther {
		return 0, nil
	}
	if ty.IsCannotLookup {
		return 1, nil
	}
	if ty.IsBadOrigin {
		return 2, nil
	}
	if ty.IsModule {
		return 3, nil
	}
	if ty.IsConsumerRemaining {
		return 4, nil
	}
	if ty.IsNoProviders {
		return 5, nil
	}
	if ty.IsTooManyConsumers {
		return 6, nil
	}
	if ty.IsToken {
		return 7, nil
	}
	if ty.IsArithmetic {
		return 8, nil
	}
	if ty.IsTransactional {
		return 9, nil
	}
	if ty.IsExhausted {
		return 10, nil
	}
	if ty.IsCorruption {
		return 11, nil
	}
	if ty.IsUnavailable {
		return 12, nil
	}
	if ty.IsRootNotAllowed {
		return 13, nil
	}
	if ty.IsTrie {
		return 14, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty DispatchError) MarshalJSON() ([]byte, error) {
	if ty.IsOther {
		return json.Marshal("DispatchError::Other")
	}
	if ty.IsCannotLookup {
		return json.Marshal("DispatchError::CannotLookup")
	}
	if ty.IsBadOrigin {
		return json.Marshal("DispatchError::BadOrigin")
	}
	if ty.IsModule {
		m := map[string]interface{}{"DispatchError::Module": ty.AsModuleField0}
		return json.Marshal(m)
	}
	if ty.IsConsumerRemaining {
		return json.Marshal("DispatchError::ConsumerRemaining")
	}
	if ty.IsNoProviders {
		return json.Marshal("DispatchError::NoProviders")
	}
	if ty.IsTooManyConsumers {
		return json.Marshal("DispatchError::TooManyConsumers")
	}
	if ty.IsToken {
		m := map[string]interface{}{"DispatchError::Token": ty.AsTokenField0}
		return json.Marshal(m)
	}
	if ty.IsArithmetic {
		m := map[string]interface{}{"DispatchError::Arithmetic": ty.AsArithmeticField0}
		return json.Marshal(m)
	}
	if ty.IsTransactional {
		m := map[string]interface{}{"DispatchError::Transactional": ty.AsTransactionalField0}
		return json.Marshal(m)
	}
	if ty.IsExhausted {
		return json.Marshal("DispatchError::Exhausted")
	}
	if ty.IsCorruption {
		return json.Marshal("DispatchError::Corruption")
	}
	if ty.IsUnavailable {
		return json.Marshal("DispatchError::Unavailable")
	}
	if ty.IsRootNotAllowed {
		return json.Marshal("DispatchError::RootNotAllowed")
	}
	if ty.IsTrie {
		m := map[string]interface{}{"DispatchError::Trie": ty.AsTrieField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSystemPalletEvent with id=22
type FrameSystemPalletEvent struct {
	IsExtrinsicSuccess                          bool
	AsExtrinsicSuccessDispatchInfo0             DispatchEventInfo
	IsExtrinsicFailed                           bool
	AsExtrinsicFailedDispatchError0             DispatchError
	AsExtrinsicFailedDispatchInfo1              DispatchEventInfo
	IsCodeUpdated                               bool
	IsNewAccount                                bool
	AsNewAccountAccount0                        [32]byte
	IsKilledAccount                             bool
	AsKilledAccountAccount0                     [32]byte
	IsRemarked                                  bool
	AsRemarkedSender0                           [32]byte
	AsRemarkedHash1                             [32]byte
	IsUpgradeAuthorized                         bool
	AsUpgradeAuthorizedCodeHash0                [32]byte
	AsUpgradeAuthorizedCheckVersion1            bool
	IsRejectedInvalidAuthorizedUpgrade          bool
	AsRejectedInvalidAuthorizedUpgradeCodeHash0 [32]byte
	AsRejectedInvalidAuthorizedUpgradeError1    DispatchError
}

func (ty FrameSystemPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsExtrinsicSuccess {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExtrinsicSuccessDispatchInfo0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsExtrinsicFailed {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExtrinsicFailedDispatchError0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExtrinsicFailedDispatchInfo1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCodeUpdated {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNewAccount {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNewAccountAccount0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsKilledAccount {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKilledAccountAccount0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRemarked {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRemarkedSender0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRemarkedHash1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpgradeAuthorized {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpgradeAuthorizedCodeHash0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpgradeAuthorizedCheckVersion1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRejectedInvalidAuthorizedUpgrade {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRejectedInvalidAuthorizedUpgradeCodeHash0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRejectedInvalidAuthorizedUpgradeError1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *FrameSystemPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsExtrinsicSuccess = true
		err = decoder.Decode(&ty.AsExtrinsicSuccessDispatchInfo0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsExtrinsicFailed = true
		err = decoder.Decode(&ty.AsExtrinsicFailedDispatchError0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsExtrinsicFailedDispatchInfo1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCodeUpdated = true
		return
	case 3:
		ty.IsNewAccount = true
		err = decoder.Decode(&ty.AsNewAccountAccount0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsKilledAccount = true
		err = decoder.Decode(&ty.AsKilledAccountAccount0)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsRemarked = true
		err = decoder.Decode(&ty.AsRemarkedSender0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRemarkedHash1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsUpgradeAuthorized = true
		err = decoder.Decode(&ty.AsUpgradeAuthorizedCodeHash0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpgradeAuthorizedCheckVersion1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsRejectedInvalidAuthorizedUpgrade = true
		err = decoder.Decode(&ty.AsRejectedInvalidAuthorizedUpgradeCodeHash0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRejectedInvalidAuthorizedUpgradeError1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *FrameSystemPalletEvent) Variant() (uint8, error) {
	if ty.IsExtrinsicSuccess {
		return 0, nil
	}
	if ty.IsExtrinsicFailed {
		return 1, nil
	}
	if ty.IsCodeUpdated {
		return 2, nil
	}
	if ty.IsNewAccount {
		return 3, nil
	}
	if ty.IsKilledAccount {
		return 4, nil
	}
	if ty.IsRemarked {
		return 5, nil
	}
	if ty.IsUpgradeAuthorized {
		return 6, nil
	}
	if ty.IsRejectedInvalidAuthorizedUpgrade {
		return 7, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty FrameSystemPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsExtrinsicSuccess {
		m := map[string]interface{}{"FrameSystemPalletEvent::ExtrinsicSuccess": ty.AsExtrinsicSuccessDispatchInfo0}
		return json.Marshal(m)
	}
	if ty.IsExtrinsicFailed {
		m := map[string]interface{}{"FrameSystemPalletEvent::ExtrinsicFailed": map[string]interface{}{
			"AsExtrinsicFailedDispatchError0": ty.AsExtrinsicFailedDispatchError0,
			"AsExtrinsicFailedDispatchInfo1":  ty.AsExtrinsicFailedDispatchInfo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCodeUpdated {
		return json.Marshal("FrameSystemPalletEvent::CodeUpdated")
	}
	if ty.IsNewAccount {
		m := map[string]interface{}{"FrameSystemPalletEvent::NewAccount": ty.AsNewAccountAccount0}
		return json.Marshal(m)
	}
	if ty.IsKilledAccount {
		m := map[string]interface{}{"FrameSystemPalletEvent::KilledAccount": ty.AsKilledAccountAccount0}
		return json.Marshal(m)
	}
	if ty.IsRemarked {
		m := map[string]interface{}{"FrameSystemPalletEvent::Remarked": map[string]interface{}{
			"AsRemarkedHash1":   ty.AsRemarkedHash1,
			"AsRemarkedSender0": ty.AsRemarkedSender0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpgradeAuthorized {
		m := map[string]interface{}{"FrameSystemPalletEvent::UpgradeAuthorized": map[string]interface{}{
			"AsUpgradeAuthorizedCheckVersion1": ty.AsUpgradeAuthorizedCheckVersion1,
			"AsUpgradeAuthorizedCodeHash0":     ty.AsUpgradeAuthorizedCodeHash0,
		}}
		return json.Marshal(m)
	}
	if ty.IsRejectedInvalidAuthorizedUpgrade {
		m := map[string]interface{}{"FrameSystemPalletEvent::RejectedInvalidAuthorizedUpgrade": map[string]interface{}{
			"AsRejectedInvalidAuthorizedUpgradeCodeHash0": ty.AsRejectedInvalidAuthorizedUpgradeCodeHash0,
			"AsRejectedInvalidAuthorizedUpgradeError1":    ty.AsRejectedInvalidAuthorizedUpgradeError1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Tuple type generated from metadata id 34
type TupleOfByteArray32Uint64 struct {
	Elem0 [32]byte
	Elem1 uint64
}

// Generated PalletGrandpaPalletEvent with id=32
type PalletGrandpaPalletEvent struct {
	IsNewAuthorities              bool
	AsNewAuthoritiesAuthoritySet0 []TupleOfByteArray32Uint64
	IsPaused                      bool
	IsResumed                     bool
}

func (ty PalletGrandpaPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNewAuthorities {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNewAuthoritiesAuthoritySet0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPaused {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsResumed {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletGrandpaPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNewAuthorities = true
		err = decoder.Decode(&ty.AsNewAuthoritiesAuthoritySet0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsPaused = true
		return
	case 2:
		ty.IsResumed = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletGrandpaPalletEvent) Variant() (uint8, error) {
	if ty.IsNewAuthorities {
		return 0, nil
	}
	if ty.IsPaused {
		return 1, nil
	}
	if ty.IsResumed {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletGrandpaPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsNewAuthorities {
		m := map[string]interface{}{"PalletGrandpaPalletEvent::NewAuthorities": ty.AsNewAuthoritiesAuthoritySet0}
		return json.Marshal(m)
	}
	if ty.IsPaused {
		return json.Marshal("PalletGrandpaPalletEvent::Paused")
	}
	if ty.IsResumed {
		return json.Marshal("PalletGrandpaPalletEvent::Resumed")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSupportTraitsTokensMiscBalanceStatus with id=37
type BalanceStatus struct {
	IsFree     bool
	IsReserved bool
}

func (ty BalanceStatus) Encode(encoder scale.Encoder) (err error) {
	if ty.IsFree {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserved {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *BalanceStatus) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsFree = true
		return
	case 1:
		ty.IsReserved = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *BalanceStatus) Variant() (uint8, error) {
	if ty.IsFree {
		return 0, nil
	}
	if ty.IsReserved {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty BalanceStatus) MarshalJSON() ([]byte, error) {
	if ty.IsFree {
		return json.Marshal("BalanceStatus::Free")
	}
	if ty.IsReserved {
		return json.Marshal("BalanceStatus::Reserved")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletBalancesPalletEvent with id=36
type PalletBalancesPalletEvent struct {
	IsEndowed                              bool
	AsEndowedAccount0                      [32]byte
	AsEndowedFreeBalance1                  types.U128
	IsDustLost                             bool
	AsDustLostAccount0                     [32]byte
	AsDustLostAmount1                      types.U128
	IsTransfer                             bool
	AsTransferFrom0                        [32]byte
	AsTransferTo1                          [32]byte
	AsTransferAmount2                      types.U128
	IsBalanceSet                           bool
	AsBalanceSetWho0                       [32]byte
	AsBalanceSetFree1                      types.U128
	IsReserved                             bool
	AsReservedWho0                         [32]byte
	AsReservedAmount1                      types.U128
	IsUnreserved                           bool
	AsUnreservedWho0                       [32]byte
	AsUnreservedAmount1                    types.U128
	IsReserveRepatriated                   bool
	AsReserveRepatriatedFrom0              [32]byte
	AsReserveRepatriatedTo1                [32]byte
	AsReserveRepatriatedAmount2            types.U128
	AsReserveRepatriatedDestinationStatus3 BalanceStatus
	IsDeposit                              bool
	AsDepositWho0                          [32]byte
	AsDepositAmount1                       types.U128
	IsWithdraw                             bool
	AsWithdrawWho0                         [32]byte
	AsWithdrawAmount1                      types.U128
	IsSlashed                              bool
	AsSlashedWho0                          [32]byte
	AsSlashedAmount1                       types.U128
	IsMinted                               bool
	AsMintedWho0                           [32]byte
	AsMintedAmount1                        types.U128
	IsBurned                               bool
	AsBurnedWho0                           [32]byte
	AsBurnedAmount1                        types.U128
	IsSuspended                            bool
	AsSuspendedWho0                        [32]byte
	AsSuspendedAmount1                     types.U128
	IsRestored                             bool
	AsRestoredWho0                         [32]byte
	AsRestoredAmount1                      types.U128
	IsUpgraded                             bool
	AsUpgradedWho0                         [32]byte
	IsIssued                               bool
	AsIssuedAmount0                        types.U128
	IsRescinded                            bool
	AsRescindedAmount0                     types.U128
	IsLocked                               bool
	AsLockedWho0                           [32]byte
	AsLockedAmount1                        types.U128
	IsUnlocked                             bool
	AsUnlockedWho0                         [32]byte
	AsUnlockedAmount1                      types.U128
	IsFrozen                               bool
	AsFrozenWho0                           [32]byte
	AsFrozenAmount1                        types.U128
	IsThawed                               bool
	AsThawedWho0                           [32]byte
	AsThawedAmount1                        types.U128
	IsTotalIssuanceForced                  bool
	AsTotalIssuanceForcedOld0              types.U128
	AsTotalIssuanceForcedNew1              types.U128
}

func (ty PalletBalancesPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsEndowed {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedAccount0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedFreeBalance1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDustLost {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostAccount0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransfer {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalanceSet {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetFree1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserved {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnreserved {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserveRepatriated {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedAmount2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedDestinationStatus3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeposit {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWithdraw {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSlashed {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMinted {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMintedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMintedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBurned {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSuspended {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSuspendedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSuspendedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRestored {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRestoredWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRestoredAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpgraded {
		err = encoder.PushByte(14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpgradedWho0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIssued {
		err = encoder.PushByte(15)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIssuedAmount0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRescinded {
		err = encoder.PushByte(16)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRescindedAmount0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLocked {
		err = encoder.PushByte(17)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnlocked {
		err = encoder.PushByte(18)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFrozen {
		err = encoder.PushByte(19)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsFrozenWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsFrozenAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsThawed {
		err = encoder.PushByte(20)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsThawedWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsThawedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTotalIssuanceForced {
		err = encoder.PushByte(21)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTotalIssuanceForcedOld0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTotalIssuanceForcedNew1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletBalancesPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsEndowed = true
		err = decoder.Decode(&ty.AsEndowedAccount0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEndowedFreeBalance1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsDustLost = true
		err = decoder.Decode(&ty.AsDustLostAccount0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDustLostAmount1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTransfer = true
		err = decoder.Decode(&ty.AsTransferFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsBalanceSet = true
		err = decoder.Decode(&ty.AsBalanceSetWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceSetFree1)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsReserved = true
		err = decoder.Decode(&ty.AsReservedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReservedAmount1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsUnreserved = true
		err = decoder.Decode(&ty.AsUnreservedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnreservedAmount1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsReserveRepatriated = true
		err = decoder.Decode(&ty.AsReserveRepatriatedFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedAmount2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedDestinationStatus3)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsDeposit = true
		err = decoder.Decode(&ty.AsDepositWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositAmount1)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsWithdraw = true
		err = decoder.Decode(&ty.AsWithdrawWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawAmount1)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsSlashed = true
		err = decoder.Decode(&ty.AsSlashedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSlashedAmount1)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsMinted = true
		err = decoder.Decode(&ty.AsMintedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMintedAmount1)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsBurned = true
		err = decoder.Decode(&ty.AsBurnedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBurnedAmount1)
		if err != nil {
			return err
		}
		return
	case 12:
		ty.IsSuspended = true
		err = decoder.Decode(&ty.AsSuspendedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSuspendedAmount1)
		if err != nil {
			return err
		}
		return
	case 13:
		ty.IsRestored = true
		err = decoder.Decode(&ty.AsRestoredWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRestoredAmount1)
		if err != nil {
			return err
		}
		return
	case 14:
		ty.IsUpgraded = true
		err = decoder.Decode(&ty.AsUpgradedWho0)
		if err != nil {
			return err
		}
		return
	case 15:
		ty.IsIssued = true
		err = decoder.Decode(&ty.AsIssuedAmount0)
		if err != nil {
			return err
		}
		return
	case 16:
		ty.IsRescinded = true
		err = decoder.Decode(&ty.AsRescindedAmount0)
		if err != nil {
			return err
		}
		return
	case 17:
		ty.IsLocked = true
		err = decoder.Decode(&ty.AsLockedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockedAmount1)
		if err != nil {
			return err
		}
		return
	case 18:
		ty.IsUnlocked = true
		err = decoder.Decode(&ty.AsUnlockedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockedAmount1)
		if err != nil {
			return err
		}
		return
	case 19:
		ty.IsFrozen = true
		err = decoder.Decode(&ty.AsFrozenWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsFrozenAmount1)
		if err != nil {
			return err
		}
		return
	case 20:
		ty.IsThawed = true
		err = decoder.Decode(&ty.AsThawedWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsThawedAmount1)
		if err != nil {
			return err
		}
		return
	case 21:
		ty.IsTotalIssuanceForced = true
		err = decoder.Decode(&ty.AsTotalIssuanceForcedOld0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTotalIssuanceForcedNew1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletBalancesPalletEvent) Variant() (uint8, error) {
	if ty.IsEndowed {
		return 0, nil
	}
	if ty.IsDustLost {
		return 1, nil
	}
	if ty.IsTransfer {
		return 2, nil
	}
	if ty.IsBalanceSet {
		return 3, nil
	}
	if ty.IsReserved {
		return 4, nil
	}
	if ty.IsUnreserved {
		return 5, nil
	}
	if ty.IsReserveRepatriated {
		return 6, nil
	}
	if ty.IsDeposit {
		return 7, nil
	}
	if ty.IsWithdraw {
		return 8, nil
	}
	if ty.IsSlashed {
		return 9, nil
	}
	if ty.IsMinted {
		return 10, nil
	}
	if ty.IsBurned {
		return 11, nil
	}
	if ty.IsSuspended {
		return 12, nil
	}
	if ty.IsRestored {
		return 13, nil
	}
	if ty.IsUpgraded {
		return 14, nil
	}
	if ty.IsIssued {
		return 15, nil
	}
	if ty.IsRescinded {
		return 16, nil
	}
	if ty.IsLocked {
		return 17, nil
	}
	if ty.IsUnlocked {
		return 18, nil
	}
	if ty.IsFrozen {
		return 19, nil
	}
	if ty.IsThawed {
		return 20, nil
	}
	if ty.IsTotalIssuanceForced {
		return 21, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletBalancesPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsEndowed {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Endowed": map[string]interface{}{
			"AsEndowedAccount0":     ty.AsEndowedAccount0,
			"AsEndowedFreeBalance1": ty.AsEndowedFreeBalance1,
		}}
		return json.Marshal(m)
	}
	if ty.IsDustLost {
		m := map[string]interface{}{"PalletBalancesPalletEvent::DustLost": map[string]interface{}{
			"AsDustLostAccount0": ty.AsDustLostAccount0,
			"AsDustLostAmount1":  ty.AsDustLostAmount1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransfer {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Transfer": map[string]interface{}{
			"AsTransferAmount2": ty.AsTransferAmount2,
			"AsTransferFrom0":   ty.AsTransferFrom0,
			"AsTransferTo1":     ty.AsTransferTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsBalanceSet {
		m := map[string]interface{}{"PalletBalancesPalletEvent::BalanceSet": map[string]interface{}{
			"AsBalanceSetFree1": ty.AsBalanceSetFree1,
			"AsBalanceSetWho0":  ty.AsBalanceSetWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsReserved {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Reserved": map[string]interface{}{
			"AsReservedAmount1": ty.AsReservedAmount1,
			"AsReservedWho0":    ty.AsReservedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnreserved {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Unreserved": map[string]interface{}{
			"AsUnreservedAmount1": ty.AsUnreservedAmount1,
			"AsUnreservedWho0":    ty.AsUnreservedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsReserveRepatriated {
		m := map[string]interface{}{"PalletBalancesPalletEvent::ReserveRepatriated": map[string]interface{}{
			"AsReserveRepatriatedAmount2":            ty.AsReserveRepatriatedAmount2,
			"AsReserveRepatriatedDestinationStatus3": ty.AsReserveRepatriatedDestinationStatus3,
			"AsReserveRepatriatedFrom0":              ty.AsReserveRepatriatedFrom0,
			"AsReserveRepatriatedTo1":                ty.AsReserveRepatriatedTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsDeposit {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Deposit": map[string]interface{}{
			"AsDepositAmount1": ty.AsDepositAmount1,
			"AsDepositWho0":    ty.AsDepositWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsWithdraw {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Withdraw": map[string]interface{}{
			"AsWithdrawAmount1": ty.AsWithdrawAmount1,
			"AsWithdrawWho0":    ty.AsWithdrawWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSlashed {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Slashed": map[string]interface{}{
			"AsSlashedAmount1": ty.AsSlashedAmount1,
			"AsSlashedWho0":    ty.AsSlashedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsMinted {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Minted": map[string]interface{}{
			"AsMintedAmount1": ty.AsMintedAmount1,
			"AsMintedWho0":    ty.AsMintedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsBurned {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Burned": map[string]interface{}{
			"AsBurnedAmount1": ty.AsBurnedAmount1,
			"AsBurnedWho0":    ty.AsBurnedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSuspended {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Suspended": map[string]interface{}{
			"AsSuspendedAmount1": ty.AsSuspendedAmount1,
			"AsSuspendedWho0":    ty.AsSuspendedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsRestored {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Restored": map[string]interface{}{
			"AsRestoredAmount1": ty.AsRestoredAmount1,
			"AsRestoredWho0":    ty.AsRestoredWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpgraded {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Upgraded": ty.AsUpgradedWho0}
		return json.Marshal(m)
	}
	if ty.IsIssued {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Issued": ty.AsIssuedAmount0}
		return json.Marshal(m)
	}
	if ty.IsRescinded {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Rescinded": ty.AsRescindedAmount0}
		return json.Marshal(m)
	}
	if ty.IsLocked {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Locked": map[string]interface{}{
			"AsLockedAmount1": ty.AsLockedAmount1,
			"AsLockedWho0":    ty.AsLockedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnlocked {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Unlocked": map[string]interface{}{
			"AsUnlockedAmount1": ty.AsUnlockedAmount1,
			"AsUnlockedWho0":    ty.AsUnlockedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsFrozen {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Frozen": map[string]interface{}{
			"AsFrozenAmount1": ty.AsFrozenAmount1,
			"AsFrozenWho0":    ty.AsFrozenWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsThawed {
		m := map[string]interface{}{"PalletBalancesPalletEvent::Thawed": map[string]interface{}{
			"AsThawedAmount1": ty.AsThawedAmount1,
			"AsThawedWho0":    ty.AsThawedWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTotalIssuanceForced {
		m := map[string]interface{}{"PalletBalancesPalletEvent::TotalIssuanceForced": map[string]interface{}{
			"AsTotalIssuanceForcedNew1": ty.AsTotalIssuanceForcedNew1,
			"AsTotalIssuanceForcedOld0": ty.AsTotalIssuanceForcedOld0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletTransactionPaymentPalletEvent with id=38
type PalletTransactionPaymentPalletEvent struct {
	IsTransactionFeePaid           bool
	AsTransactionFeePaidWho0       [32]byte
	AsTransactionFeePaidActualFee1 types.U128
	AsTransactionFeePaidTip2       types.U128
}

func (ty PalletTransactionPaymentPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTransactionFeePaid {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionFeePaidWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionFeePaidActualFee1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionFeePaidTip2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletTransactionPaymentPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTransactionFeePaid = true
		err = decoder.Decode(&ty.AsTransactionFeePaidWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransactionFeePaidActualFee1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransactionFeePaidTip2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletTransactionPaymentPalletEvent) Variant() (uint8, error) {
	if ty.IsTransactionFeePaid {
		return 0, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletTransactionPaymentPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsTransactionFeePaid {
		m := map[string]interface{}{"PalletTransactionPaymentPalletEvent::TransactionFeePaid": map[string]interface{}{
			"AsTransactionFeePaidActualFee1": ty.AsTransactionFeePaidActualFee1,
			"AsTransactionFeePaidTip2":       ty.AsTransactionFeePaidTip2,
			"AsTransactionFeePaidWho0":       ty.AsTransactionFeePaidWho0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Result with id=40
type Result struct {
	IsOk        bool
	AsOkField0  struct{}
	IsErr       bool
	AsErrField0 *DispatchError
}

func (ty Result) Encode(encoder scale.Encoder) (err error) {
	if ty.IsOk {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOkField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsErr {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsErrField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Result) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsOk = true
		err = decoder.Decode(&ty.AsOkField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsErr = true
		var tmp DispatchError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsErrField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Result) Variant() (uint8, error) {
	if ty.IsOk {
		return 0, nil
	}
	if ty.IsErr {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Result) MarshalJSON() ([]byte, error) {
	if ty.IsOk {
		m := map[string]interface{}{"Result::Ok": ty.AsOkField0}
		return json.Marshal(m)
	}
	if ty.IsErr {
		m := map[string]interface{}{"Result::Err": ty.AsErrField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=42
type OptionTByteArray32 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 [32]byte
}

func (ty OptionTByteArray32) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTByteArray32) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTByteArray32) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTByteArray32) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTByteArray32::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTByteArray32::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletSudoPalletEvent with id=39
type PalletSudoPalletEvent struct {
	IsSudid bool
	// The result of the call made by the sudo user.
	AsSudidSudoResult0 *Result
	IsKeyChanged       bool
	// The old sudo key (if one was previously set).
	AsKeyChangedOld0 OptionTByteArray32
	// The new sudo key (if one was set).
	AsKeyChangedNew1 [32]byte
	IsKeyRemoved     bool
	IsSudoAsDone     bool
	// The result of the call made by the sudo user.
	AsSudoAsDoneSudoResult0 *Result
}

func (ty PalletSudoPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSudid {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudidSudoResult0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsKeyChanged {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKeyChangedOld0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKeyChangedNew1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsKeyRemoved {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudoAsDone {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoAsDoneSudoResult0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletSudoPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSudid = true
		var tmp Result
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudidSudoResult0 = &tmp
		return
	case 1:
		ty.IsKeyChanged = true
		err = decoder.Decode(&ty.AsKeyChangedOld0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsKeyChangedNew1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsKeyRemoved = true
		return
	case 3:
		ty.IsSudoAsDone = true
		var tmp Result
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudoAsDoneSudoResult0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletSudoPalletEvent) Variant() (uint8, error) {
	if ty.IsSudid {
		return 0, nil
	}
	if ty.IsKeyChanged {
		return 1, nil
	}
	if ty.IsKeyRemoved {
		return 2, nil
	}
	if ty.IsSudoAsDone {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletSudoPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsSudid {
		m := map[string]interface{}{"PalletSudoPalletEvent::Sudid": ty.AsSudidSudoResult0}
		return json.Marshal(m)
	}
	if ty.IsKeyChanged {
		m := map[string]interface{}{"PalletSudoPalletEvent::KeyChanged": map[string]interface{}{
			"AsKeyChangedNew1": ty.AsKeyChangedNew1,
			"AsKeyChangedOld0": ty.AsKeyChangedOld0,
		}}
		return json.Marshal(m)
	}
	if ty.IsKeyRemoved {
		return json.Marshal("PalletSudoPalletEvent::KeyRemoved")
	}
	if ty.IsSudoAsDone {
		m := map[string]interface{}{"PalletSudoPalletEvent::SudoAsDone": ty.AsSudoAsDoneSudoResult0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletRevivePalletEvent with id=43
type PalletRevivePalletEvent struct {
	IsContractEmitted bool
	// The contract that emitted the event.
	AsContractEmittedContract0 [20]byte
	// Data supplied by the contract. Metadata generated during contract compilation
	// is needed to decode it.
	AsContractEmittedData1 []byte
	// A list of topics used to index the event.
	// Number of topics is capped by [`limits::NUM_EVENT_TOPICS`].
	AsContractEmittedTopics2 [][32]byte
}

func (ty PalletRevivePalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsContractEmitted {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsContractEmittedContract0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsContractEmittedData1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsContractEmittedTopics2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletRevivePalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsContractEmitted = true
		err = decoder.Decode(&ty.AsContractEmittedContract0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsContractEmittedData1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsContractEmittedTopics2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletRevivePalletEvent) Variant() (uint8, error) {
	if ty.IsContractEmitted {
		return 0, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletRevivePalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsContractEmitted {
		m := map[string]interface{}{"PalletRevivePalletEvent::ContractEmitted": map[string]interface{}{
			"AsContractEmittedContract0": ty.AsContractEmittedContract0,
			"AsContractEmittedData1":     ty.AsContractEmittedData1,
			"AsContractEmittedTopics2":   ty.AsContractEmittedTopics2,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated OrmlTokensModuleEvent with id=47
type OrmlTokensModuleEvent struct {
	IsEndowed                       bool
	AsEndowedCurrencyId0            uint64
	AsEndowedWho1                   [32]byte
	AsEndowedAmount2                types.U128
	IsDustLost                      bool
	AsDustLostCurrencyId0           uint64
	AsDustLostWho1                  [32]byte
	AsDustLostAmount2               types.U128
	IsTransfer                      bool
	AsTransferCurrencyId0           uint64
	AsTransferFrom1                 [32]byte
	AsTransferTo2                   [32]byte
	AsTransferAmount3               types.U128
	IsReserved                      bool
	AsReservedCurrencyId0           uint64
	AsReservedWho1                  [32]byte
	AsReservedAmount2               types.U128
	IsUnreserved                    bool
	AsUnreservedCurrencyId0         uint64
	AsUnreservedWho1                [32]byte
	AsUnreservedAmount2             types.U128
	IsReserveRepatriated            bool
	AsReserveRepatriatedCurrencyId0 uint64
	AsReserveRepatriatedFrom1       [32]byte
	AsReserveRepatriatedTo2         [32]byte
	AsReserveRepatriatedAmount3     types.U128
	AsReserveRepatriatedStatus4     BalanceStatus
	IsBalanceSet                    bool
	AsBalanceSetCurrencyId0         uint64
	AsBalanceSetWho1                [32]byte
	AsBalanceSetFree2               types.U128
	AsBalanceSetReserved3           types.U128
	IsTotalIssuanceSet              bool
	AsTotalIssuanceSetCurrencyId0   uint64
	AsTotalIssuanceSetAmount1       types.U128
	IsWithdrawn                     bool
	AsWithdrawnCurrencyId0          uint64
	AsWithdrawnWho1                 [32]byte
	AsWithdrawnAmount2              types.U128
	IsSlashed                       bool
	AsSlashedCurrencyId0            uint64
	AsSlashedWho1                   [32]byte
	AsSlashedFreeAmount2            types.U128
	AsSlashedReservedAmount3        types.U128
	IsDeposited                     bool
	AsDepositedCurrencyId0          uint64
	AsDepositedWho1                 [32]byte
	AsDepositedAmount2              types.U128
	IsLockSet                       bool
	AsLockSetLockId0                [8]byte
	AsLockSetCurrencyId1            uint64
	AsLockSetWho2                   [32]byte
	AsLockSetAmount3                types.U128
	IsLockRemoved                   bool
	AsLockRemovedLockId0            [8]byte
	AsLockRemovedCurrencyId1        uint64
	AsLockRemovedWho2               [32]byte
	IsLocked                        bool
	AsLockedCurrencyId0             uint64
	AsLockedWho1                    [32]byte
	AsLockedAmount2                 types.U128
	IsUnlocked                      bool
	AsUnlockedCurrencyId0           uint64
	AsUnlockedWho1                  [32]byte
	AsUnlockedAmount2               types.U128
	IsIssued                        bool
	AsIssuedCurrencyId0             uint64
	AsIssuedAmount1                 types.U128
	IsRescinded                     bool
	AsRescindedCurrencyId0          uint64
	AsRescindedAmount1              types.U128
}

func (ty OrmlTokensModuleEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsEndowed {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEndowedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDustLost {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDustLostAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransfer {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferFrom1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferTo2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAmount3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserved {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReservedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnreserved {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReserveRepatriated {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedFrom1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedTo2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedAmount3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReserveRepatriatedStatus4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalanceSet {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetFree2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceSetReserved3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTotalIssuanceSet {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTotalIssuanceSetCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTotalIssuanceSetAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWithdrawn {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSlashed {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedFreeAmount2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSlashedReservedAmount3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeposited {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLockSet {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockSetLockId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockSetCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockSetWho2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockSetAmount3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLockRemoved {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockRemovedLockId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockRemovedCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockRemovedWho2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLocked {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLockedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnlocked {
		err = encoder.PushByte(14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedWho1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockedAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIssued {
		err = encoder.PushByte(15)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIssuedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIssuedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRescinded {
		err = encoder.PushByte(16)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRescindedCurrencyId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRescindedAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OrmlTokensModuleEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsEndowed = true
		err = decoder.Decode(&ty.AsEndowedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEndowedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEndowedAmount2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsDustLost = true
		err = decoder.Decode(&ty.AsDustLostCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDustLostWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDustLostAmount2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTransfer = true
		err = decoder.Decode(&ty.AsTransferCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferFrom1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferTo2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAmount3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsReserved = true
		err = decoder.Decode(&ty.AsReservedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReservedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReservedAmount2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsUnreserved = true
		err = decoder.Decode(&ty.AsUnreservedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnreservedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnreservedAmount2)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsReserveRepatriated = true
		err = decoder.Decode(&ty.AsReserveRepatriatedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedFrom1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedTo2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedAmount3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReserveRepatriatedStatus4)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsBalanceSet = true
		err = decoder.Decode(&ty.AsBalanceSetCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceSetWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceSetFree2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceSetReserved3)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsTotalIssuanceSet = true
		err = decoder.Decode(&ty.AsTotalIssuanceSetCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTotalIssuanceSetAmount1)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsWithdrawn = true
		err = decoder.Decode(&ty.AsWithdrawnCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawnWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawnAmount2)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsSlashed = true
		err = decoder.Decode(&ty.AsSlashedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSlashedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSlashedFreeAmount2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSlashedReservedAmount3)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsDeposited = true
		err = decoder.Decode(&ty.AsDepositedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositedAmount2)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsLockSet = true
		err = decoder.Decode(&ty.AsLockSetLockId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockSetCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockSetWho2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockSetAmount3)
		if err != nil {
			return err
		}
		return
	case 12:
		ty.IsLockRemoved = true
		err = decoder.Decode(&ty.AsLockRemovedLockId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockRemovedCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockRemovedWho2)
		if err != nil {
			return err
		}
		return
	case 13:
		ty.IsLocked = true
		err = decoder.Decode(&ty.AsLockedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLockedAmount2)
		if err != nil {
			return err
		}
		return
	case 14:
		ty.IsUnlocked = true
		err = decoder.Decode(&ty.AsUnlockedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockedWho1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockedAmount2)
		if err != nil {
			return err
		}
		return
	case 15:
		ty.IsIssued = true
		err = decoder.Decode(&ty.AsIssuedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsIssuedAmount1)
		if err != nil {
			return err
		}
		return
	case 16:
		ty.IsRescinded = true
		err = decoder.Decode(&ty.AsRescindedCurrencyId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRescindedAmount1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OrmlTokensModuleEvent) Variant() (uint8, error) {
	if ty.IsEndowed {
		return 0, nil
	}
	if ty.IsDustLost {
		return 1, nil
	}
	if ty.IsTransfer {
		return 2, nil
	}
	if ty.IsReserved {
		return 3, nil
	}
	if ty.IsUnreserved {
		return 4, nil
	}
	if ty.IsReserveRepatriated {
		return 5, nil
	}
	if ty.IsBalanceSet {
		return 6, nil
	}
	if ty.IsTotalIssuanceSet {
		return 7, nil
	}
	if ty.IsWithdrawn {
		return 8, nil
	}
	if ty.IsSlashed {
		return 9, nil
	}
	if ty.IsDeposited {
		return 10, nil
	}
	if ty.IsLockSet {
		return 11, nil
	}
	if ty.IsLockRemoved {
		return 12, nil
	}
	if ty.IsLocked {
		return 13, nil
	}
	if ty.IsUnlocked {
		return 14, nil
	}
	if ty.IsIssued {
		return 15, nil
	}
	if ty.IsRescinded {
		return 16, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OrmlTokensModuleEvent) MarshalJSON() ([]byte, error) {
	if ty.IsEndowed {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Endowed": map[string]interface{}{
			"AsEndowedAmount2":     ty.AsEndowedAmount2,
			"AsEndowedCurrencyId0": ty.AsEndowedCurrencyId0,
			"AsEndowedWho1":        ty.AsEndowedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsDustLost {
		m := map[string]interface{}{"OrmlTokensModuleEvent::DustLost": map[string]interface{}{
			"AsDustLostAmount2":     ty.AsDustLostAmount2,
			"AsDustLostCurrencyId0": ty.AsDustLostCurrencyId0,
			"AsDustLostWho1":        ty.AsDustLostWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransfer {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Transfer": map[string]interface{}{
			"AsTransferAmount3":     ty.AsTransferAmount3,
			"AsTransferCurrencyId0": ty.AsTransferCurrencyId0,
			"AsTransferFrom1":       ty.AsTransferFrom1,
			"AsTransferTo2":         ty.AsTransferTo2,
		}}
		return json.Marshal(m)
	}
	if ty.IsReserved {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Reserved": map[string]interface{}{
			"AsReservedAmount2":     ty.AsReservedAmount2,
			"AsReservedCurrencyId0": ty.AsReservedCurrencyId0,
			"AsReservedWho1":        ty.AsReservedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnreserved {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Unreserved": map[string]interface{}{
			"AsUnreservedAmount2":     ty.AsUnreservedAmount2,
			"AsUnreservedCurrencyId0": ty.AsUnreservedCurrencyId0,
			"AsUnreservedWho1":        ty.AsUnreservedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsReserveRepatriated {
		m := map[string]interface{}{"OrmlTokensModuleEvent::ReserveRepatriated": map[string]interface{}{
			"AsReserveRepatriatedAmount3":     ty.AsReserveRepatriatedAmount3,
			"AsReserveRepatriatedCurrencyId0": ty.AsReserveRepatriatedCurrencyId0,
			"AsReserveRepatriatedFrom1":       ty.AsReserveRepatriatedFrom1,
			"AsReserveRepatriatedStatus4":     ty.AsReserveRepatriatedStatus4,
			"AsReserveRepatriatedTo2":         ty.AsReserveRepatriatedTo2,
		}}
		return json.Marshal(m)
	}
	if ty.IsBalanceSet {
		m := map[string]interface{}{"OrmlTokensModuleEvent::BalanceSet": map[string]interface{}{
			"AsBalanceSetCurrencyId0": ty.AsBalanceSetCurrencyId0,
			"AsBalanceSetFree2":       ty.AsBalanceSetFree2,
			"AsBalanceSetReserved3":   ty.AsBalanceSetReserved3,
			"AsBalanceSetWho1":        ty.AsBalanceSetWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTotalIssuanceSet {
		m := map[string]interface{}{"OrmlTokensModuleEvent::TotalIssuanceSet": map[string]interface{}{
			"AsTotalIssuanceSetAmount1":     ty.AsTotalIssuanceSetAmount1,
			"AsTotalIssuanceSetCurrencyId0": ty.AsTotalIssuanceSetCurrencyId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsWithdrawn {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Withdrawn": map[string]interface{}{
			"AsWithdrawnAmount2":     ty.AsWithdrawnAmount2,
			"AsWithdrawnCurrencyId0": ty.AsWithdrawnCurrencyId0,
			"AsWithdrawnWho1":        ty.AsWithdrawnWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSlashed {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Slashed": map[string]interface{}{
			"AsSlashedCurrencyId0":     ty.AsSlashedCurrencyId0,
			"AsSlashedFreeAmount2":     ty.AsSlashedFreeAmount2,
			"AsSlashedReservedAmount3": ty.AsSlashedReservedAmount3,
			"AsSlashedWho1":            ty.AsSlashedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsDeposited {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Deposited": map[string]interface{}{
			"AsDepositedAmount2":     ty.AsDepositedAmount2,
			"AsDepositedCurrencyId0": ty.AsDepositedCurrencyId0,
			"AsDepositedWho1":        ty.AsDepositedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsLockSet {
		m := map[string]interface{}{"OrmlTokensModuleEvent::LockSet": map[string]interface{}{
			"AsLockSetAmount3":     ty.AsLockSetAmount3,
			"AsLockSetCurrencyId1": ty.AsLockSetCurrencyId1,
			"AsLockSetLockId0":     ty.AsLockSetLockId0,
			"AsLockSetWho2":        ty.AsLockSetWho2,
		}}
		return json.Marshal(m)
	}
	if ty.IsLockRemoved {
		m := map[string]interface{}{"OrmlTokensModuleEvent::LockRemoved": map[string]interface{}{
			"AsLockRemovedCurrencyId1": ty.AsLockRemovedCurrencyId1,
			"AsLockRemovedLockId0":     ty.AsLockRemovedLockId0,
			"AsLockRemovedWho2":        ty.AsLockRemovedWho2,
		}}
		return json.Marshal(m)
	}
	if ty.IsLocked {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Locked": map[string]interface{}{
			"AsLockedAmount2":     ty.AsLockedAmount2,
			"AsLockedCurrencyId0": ty.AsLockedCurrencyId0,
			"AsLockedWho1":        ty.AsLockedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnlocked {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Unlocked": map[string]interface{}{
			"AsUnlockedAmount2":     ty.AsUnlockedAmount2,
			"AsUnlockedCurrencyId0": ty.AsUnlockedCurrencyId0,
			"AsUnlockedWho1":        ty.AsUnlockedWho1,
		}}
		return json.Marshal(m)
	}
	if ty.IsIssued {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Issued": map[string]interface{}{
			"AsIssuedAmount1":     ty.AsIssuedAmount1,
			"AsIssuedCurrencyId0": ty.AsIssuedCurrencyId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsRescinded {
		m := map[string]interface{}{"OrmlTokensModuleEvent::Rescinded": map[string]interface{}{
			"AsRescindedAmount1":     ty.AsRescindedAmount1,
			"AsRescindedCurrencyId0": ty.AsRescindedCurrencyId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeRuntimeWorkerMessageOrigin with id=50
type MessageOrigin struct {
	IsWork       bool
	IsFairLaunch bool
}

func (ty MessageOrigin) Encode(encoder scale.Encoder) (err error) {
	if ty.IsWork {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFairLaunch {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *MessageOrigin) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsWork = true
		return
	case 1:
		ty.IsFairLaunch = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *MessageOrigin) Variant() (uint8, error) {
	if ty.IsWork {
		return 0, nil
	}
	if ty.IsFairLaunch {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty MessageOrigin) MarshalJSON() ([]byte, error) {
	if ty.IsWork {
		return json.Marshal("MessageOrigin::Work")
	}
	if ty.IsFairLaunch {
		return json.Marshal("MessageOrigin::FairLaunch")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSupportTraitsMessagesProcessMessageError with id=51
type ProcessMessageError struct {
	IsBadFormat         bool
	IsCorrupt           bool
	IsUnsupported       bool
	IsOverweight        bool
	AsOverweightField0  Weight
	IsYield             bool
	IsStackLimitReached bool
}

func (ty ProcessMessageError) Encode(encoder scale.Encoder) (err error) {
	if ty.IsBadFormat {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCorrupt {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnsupported {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOverweight {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsYield {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStackLimitReached {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *ProcessMessageError) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsBadFormat = true
		return
	case 1:
		ty.IsCorrupt = true
		return
	case 2:
		ty.IsUnsupported = true
		return
	case 3:
		ty.IsOverweight = true
		err = decoder.Decode(&ty.AsOverweightField0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsYield = true
		return
	case 5:
		ty.IsStackLimitReached = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *ProcessMessageError) Variant() (uint8, error) {
	if ty.IsBadFormat {
		return 0, nil
	}
	if ty.IsCorrupt {
		return 1, nil
	}
	if ty.IsUnsupported {
		return 2, nil
	}
	if ty.IsOverweight {
		return 3, nil
	}
	if ty.IsYield {
		return 4, nil
	}
	if ty.IsStackLimitReached {
		return 5, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty ProcessMessageError) MarshalJSON() ([]byte, error) {
	if ty.IsBadFormat {
		return json.Marshal("ProcessMessageError::BadFormat")
	}
	if ty.IsCorrupt {
		return json.Marshal("ProcessMessageError::Corrupt")
	}
	if ty.IsUnsupported {
		return json.Marshal("ProcessMessageError::Unsupported")
	}
	if ty.IsOverweight {
		m := map[string]interface{}{"ProcessMessageError::Overweight": ty.AsOverweightField0}
		return json.Marshal(m)
	}
	if ty.IsYield {
		return json.Marshal("ProcessMessageError::Yield")
	}
	if ty.IsStackLimitReached {
		return json.Marshal("ProcessMessageError::StackLimitReached")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeMessageQueuePalletEvent with id=49
type WeteeMessageQueuePalletEvent struct {
	IsProcessingFailed bool
	// The `blake2_256` hash of the message.
	AsProcessingFailedId0 [32]byte
	// The queue of the message.
	AsProcessingFailedOrigin1 MessageOrigin
	// The error that occurred.
	//
	// This error is pretty opaque. More fine-grained errors need to be emitted as events
	// by the `MessageProcessor`.
	AsProcessingFailedError2 ProcessMessageError
	IsProcessed              bool
	// The `blake2_256` hash of the message.
	AsProcessedId0 [32]byte
	// The queue of the message.
	AsProcessedOrigin1 MessageOrigin
	// How much weight was used to process the message.
	AsProcessedWeightUsed2 Weight
	// Whether the message was processed.
	//
	// Note that this does not mean that the underlying `MessageProcessor` was internally
	// successful. It *solely* means that the MQ pallet will treat this as a success
	// condition and discard the message. Any internal error needs to be emitted as events
	// by the `MessageProcessor`.
	AsProcessedSuccess3  bool
	IsOverweightEnqueued bool
	// The `blake2_256` hash of the message.
	AsOverweightEnqueuedId0 [32]byte
	// The queue of the message.
	AsOverweightEnqueuedOrigin1 MessageOrigin
	// The page of the message.
	AsOverweightEnqueuedPageIndex2 uint32
	// The index of the message within the page.
	AsOverweightEnqueuedMessageIndex3 uint32
	IsPageReaped                      bool
	// The queue of the page.
	AsPageReapedOrigin0 MessageOrigin
	// The index of the page.
	AsPageReapedIndex1 uint32
}

func (ty WeteeMessageQueuePalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsProcessingFailed {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessingFailedId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessingFailedOrigin1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessingFailedError2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProcessed {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessedId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessedOrigin1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessedWeightUsed2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProcessedSuccess3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOverweightEnqueued {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightEnqueuedId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightEnqueuedOrigin1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightEnqueuedPageIndex2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOverweightEnqueuedMessageIndex3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPageReaped {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPageReapedOrigin0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPageReapedIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeMessageQueuePalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsProcessingFailed = true
		err = decoder.Decode(&ty.AsProcessingFailedId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessingFailedOrigin1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessingFailedError2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsProcessed = true
		err = decoder.Decode(&ty.AsProcessedId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessedOrigin1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessedWeightUsed2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProcessedSuccess3)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsOverweightEnqueued = true
		err = decoder.Decode(&ty.AsOverweightEnqueuedId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsOverweightEnqueuedOrigin1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsOverweightEnqueuedPageIndex2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsOverweightEnqueuedMessageIndex3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsPageReaped = true
		err = decoder.Decode(&ty.AsPageReapedOrigin0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPageReapedIndex1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeMessageQueuePalletEvent) Variant() (uint8, error) {
	if ty.IsProcessingFailed {
		return 0, nil
	}
	if ty.IsProcessed {
		return 1, nil
	}
	if ty.IsOverweightEnqueued {
		return 2, nil
	}
	if ty.IsPageReaped {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeMessageQueuePalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsProcessingFailed {
		m := map[string]interface{}{"WeteeMessageQueuePalletEvent::ProcessingFailed": map[string]interface{}{
			"AsProcessingFailedError2":  ty.AsProcessingFailedError2,
			"AsProcessingFailedId0":     ty.AsProcessingFailedId0,
			"AsProcessingFailedOrigin1": ty.AsProcessingFailedOrigin1,
		}}
		return json.Marshal(m)
	}
	if ty.IsProcessed {
		m := map[string]interface{}{"WeteeMessageQueuePalletEvent::Processed": map[string]interface{}{
			"AsProcessedId0":         ty.AsProcessedId0,
			"AsProcessedOrigin1":     ty.AsProcessedOrigin1,
			"AsProcessedSuccess3":    ty.AsProcessedSuccess3,
			"AsProcessedWeightUsed2": ty.AsProcessedWeightUsed2,
		}}
		return json.Marshal(m)
	}
	if ty.IsOverweightEnqueued {
		m := map[string]interface{}{"WeteeMessageQueuePalletEvent::OverweightEnqueued": map[string]interface{}{
			"AsOverweightEnqueuedId0":           ty.AsOverweightEnqueuedId0,
			"AsOverweightEnqueuedMessageIndex3": ty.AsOverweightEnqueuedMessageIndex3,
			"AsOverweightEnqueuedOrigin1":       ty.AsOverweightEnqueuedOrigin1,
			"AsOverweightEnqueuedPageIndex2":    ty.AsOverweightEnqueuedPageIndex2,
		}}
		return json.Marshal(m)
	}
	if ty.IsPageReaped {
		m := map[string]interface{}{"WeteeMessageQueuePalletEvent::PageReaped": map[string]interface{}{
			"AsPageReapedIndex1":  ty.AsPageReapedIndex1,
			"AsPageReapedOrigin0": ty.AsPageReapedOrigin0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletUtilityPalletEvent with id=52
type PalletUtilityPalletEvent struct {
	IsBatchInterrupted               bool
	AsBatchInterruptedIndex0         uint32
	AsBatchInterruptedError1         DispatchError
	IsBatchCompleted                 bool
	IsBatchCompletedWithErrors       bool
	IsItemCompleted                  bool
	IsItemFailed                     bool
	AsItemFailedError0               *DispatchError
	IsDispatchedAs                   bool
	AsDispatchedAsResult0            *Result
	IsIfElseMainSuccess              bool
	IsIfElseFallbackCalled           bool
	AsIfElseFallbackCalledMainError0 *DispatchError
}

func (ty PalletUtilityPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsBatchInterrupted {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBatchInterruptedIndex0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBatchInterruptedError1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBatchCompleted {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBatchCompletedWithErrors {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsItemCompleted {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsItemFailed {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsItemFailedError0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDispatchedAs {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDispatchedAsResult0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIfElseMainSuccess {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIfElseFallbackCalled {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIfElseFallbackCalledMainError0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletUtilityPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsBatchInterrupted = true
		err = decoder.Decode(&ty.AsBatchInterruptedIndex0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBatchInterruptedError1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsBatchCompleted = true
		return
	case 2:
		ty.IsBatchCompletedWithErrors = true
		return
	case 3:
		ty.IsItemCompleted = true
		return
	case 4:
		ty.IsItemFailed = true
		var tmp DispatchError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsItemFailedError0 = &tmp
		return
	case 5:
		ty.IsDispatchedAs = true
		var tmp Result
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsDispatchedAsResult0 = &tmp
		return
	case 6:
		ty.IsIfElseMainSuccess = true
		return
	case 7:
		ty.IsIfElseFallbackCalled = true
		var tmp DispatchError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsIfElseFallbackCalledMainError0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletUtilityPalletEvent) Variant() (uint8, error) {
	if ty.IsBatchInterrupted {
		return 0, nil
	}
	if ty.IsBatchCompleted {
		return 1, nil
	}
	if ty.IsBatchCompletedWithErrors {
		return 2, nil
	}
	if ty.IsItemCompleted {
		return 3, nil
	}
	if ty.IsItemFailed {
		return 4, nil
	}
	if ty.IsDispatchedAs {
		return 5, nil
	}
	if ty.IsIfElseMainSuccess {
		return 6, nil
	}
	if ty.IsIfElseFallbackCalled {
		return 7, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletUtilityPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsBatchInterrupted {
		m := map[string]interface{}{"PalletUtilityPalletEvent::BatchInterrupted": map[string]interface{}{
			"AsBatchInterruptedError1": ty.AsBatchInterruptedError1,
			"AsBatchInterruptedIndex0": ty.AsBatchInterruptedIndex0,
		}}
		return json.Marshal(m)
	}
	if ty.IsBatchCompleted {
		return json.Marshal("PalletUtilityPalletEvent::BatchCompleted")
	}
	if ty.IsBatchCompletedWithErrors {
		return json.Marshal("PalletUtilityPalletEvent::BatchCompletedWithErrors")
	}
	if ty.IsItemCompleted {
		return json.Marshal("PalletUtilityPalletEvent::ItemCompleted")
	}
	if ty.IsItemFailed {
		m := map[string]interface{}{"PalletUtilityPalletEvent::ItemFailed": ty.AsItemFailedError0}
		return json.Marshal(m)
	}
	if ty.IsDispatchedAs {
		m := map[string]interface{}{"PalletUtilityPalletEvent::DispatchedAs": ty.AsDispatchedAsResult0}
		return json.Marshal(m)
	}
	if ty.IsIfElseMainSuccess {
		return json.Marshal("PalletUtilityPalletEvent::IfElseMainSuccess")
	}
	if ty.IsIfElseFallbackCalled {
		m := map[string]interface{}{"PalletUtilityPalletEvent::IfElseFallbackCalled": ty.AsIfElseFallbackCalledMainError0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeDaoPalletEvent with id=53
type WeteeDaoPalletEvent struct {
	IsCreatedDao             bool
	AsCreatedDaoTAccountId0  [32]byte
	AsCreatedDaoWeAssetId1   uint64
	IsSuccess                bool
	IsTaskCreated            bool
	AsTaskCreatedWeAssetId0  uint64
	AsTaskCreatedU321        uint32
	AsTaskCreatedU642        uint64
	AsTaskCreatedTAccountId3 [32]byte
	IsTaskUpdated            bool
	AsTaskUpdatedWeAssetId0  uint64
	AsTaskUpdatedU321        uint32
	AsTaskUpdatedU642        uint64
	AsTaskUpdatedTAccountId3 [32]byte
}

func (ty WeteeDaoPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreatedDao {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedDaoTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedDaoWeAssetId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSuccess {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskCreated {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedU321)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskUpdated {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskUpdatedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskUpdatedU321)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskUpdatedU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskUpdatedTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeDaoPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsCreatedDao = true
		err = decoder.Decode(&ty.AsCreatedDaoTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatedDaoWeAssetId1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSuccess = true
		return
	case 2:
		ty.IsTaskCreated = true
		err = decoder.Decode(&ty.AsTaskCreatedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedU321)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedTAccountId3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsTaskUpdated = true
		err = decoder.Decode(&ty.AsTaskUpdatedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskUpdatedU321)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskUpdatedU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskUpdatedTAccountId3)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeDaoPalletEvent) Variant() (uint8, error) {
	if ty.IsCreatedDao {
		return 0, nil
	}
	if ty.IsSuccess {
		return 1, nil
	}
	if ty.IsTaskCreated {
		return 2, nil
	}
	if ty.IsTaskUpdated {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeDaoPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsCreatedDao {
		m := map[string]interface{}{"WeteeDaoPalletEvent::CreatedDao": map[string]interface{}{
			"AsCreatedDaoTAccountId0": ty.AsCreatedDaoTAccountId0,
			"AsCreatedDaoWeAssetId1":  ty.AsCreatedDaoWeAssetId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSuccess {
		return json.Marshal("WeteeDaoPalletEvent::Success")
	}
	if ty.IsTaskCreated {
		m := map[string]interface{}{"WeteeDaoPalletEvent::TaskCreated": map[string]interface{}{
			"AsTaskCreatedTAccountId3": ty.AsTaskCreatedTAccountId3,
			"AsTaskCreatedU321":        ty.AsTaskCreatedU321,
			"AsTaskCreatedU642":        ty.AsTaskCreatedU642,
			"AsTaskCreatedWeAssetId0":  ty.AsTaskCreatedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskUpdated {
		m := map[string]interface{}{"WeteeDaoPalletEvent::TaskUpdated": map[string]interface{}{
			"AsTaskUpdatedTAccountId3": ty.AsTaskUpdatedTAccountId3,
			"AsTaskUpdatedU321":        ty.AsTaskUpdatedU321,
			"AsTaskUpdatedU642":        ty.AsTaskUpdatedU642,
			"AsTaskUpdatedWeAssetId0":  ty.AsTaskUpdatedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_assets_AssetMeta with id={{false [56]}}
type AssetMeta struct {
	// Field 0 with TypeId=14
	Name []byte
	// Field 1 with TypeId=14
	Symbol []byte
	// Field 2 with TypeId=2
	Decimals byte
}

// Generated WeteeAssetsPalletEvent with id=54
type WeteeAssetsPalletEvent struct {
	IsTransferred                             bool
	AsTransferredWeAssetId0                   uint64
	AsTransferredTAccountId1                  [32]byte
	AsTransferredTAccountId2                  [32]byte
	AsTransferredBalanceOfT3                  types.U128
	IsBalanceUpdated                          bool
	AsBalanceUpdatedWeAssetId0                uint64
	AsBalanceUpdatedTAccountId1               [32]byte
	AsBalanceUpdatedAmountOfT2                types.I128
	IsDeposited                               bool
	AsDepositedWeAssetId0                     uint64
	AsDepositedTAccountId1                    [32]byte
	AsDepositedBalanceOfT2                    types.U128
	IsWithdrawn                               bool
	AsWithdrawnWeAssetId0                     uint64
	AsWithdrawnTAccountId1                    [32]byte
	AsWithdrawnBalanceOfT2                    types.U128
	IsCreateAsset                             bool
	AsCreateAssetTAccountId0                  [32]byte
	AsCreateAssetWeAssetId1                   uint64
	AsCreateAssetBalanceOfT2                  types.U128
	IsSetMetadata                             bool
	AsSetMetadataTAccountId0                  [32]byte
	AsSetMetadataWeAssetId1                   uint64
	AsSetMetadataAssetMeta2                   AssetMeta
	IsBurn                                    bool
	AsBurnTAccountId0                         [32]byte
	AsBurnWeAssetId1                          uint64
	AsBurnBalanceOfT2                         types.U128
	IsSetWeightRateMultiple                   bool
	AsSetWeightRateMultipleAssetId0           uint64
	AsSetWeightRateMultipleMultiple1          types.U128
	IsSetExistenialDepposit                   bool
	AsSetExistenialDeppositAssetId0           uint64
	AsSetExistenialDeppositExistenialDeposit1 types.U128
}

func (ty WeteeAssetsPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTransferred {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferredWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferredTAccountId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferredTAccountId2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferredBalanceOfT3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalanceUpdated {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceUpdatedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceUpdatedTAccountId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalanceUpdatedAmountOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeposited {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedTAccountId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositedBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWithdrawn {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnTAccountId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithdrawnBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateAsset {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetWeAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetMetadata {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMetadataTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMetadataWeAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMetadataAssetMeta2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBurn {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnWeAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetWeightRateMultiple {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetWeightRateMultipleAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetWeightRateMultipleMultiple1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetExistenialDepposit {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetExistenialDeppositAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetExistenialDeppositExistenialDeposit1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeAssetsPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTransferred = true
		err = decoder.Decode(&ty.AsTransferredWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferredTAccountId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferredTAccountId2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferredBalanceOfT3)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsBalanceUpdated = true
		err = decoder.Decode(&ty.AsBalanceUpdatedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceUpdatedTAccountId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBalanceUpdatedAmountOfT2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsDeposited = true
		err = decoder.Decode(&ty.AsDepositedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositedTAccountId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositedBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsWithdrawn = true
		err = decoder.Decode(&ty.AsWithdrawnWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawnTAccountId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithdrawnBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsCreateAsset = true
		err = decoder.Decode(&ty.AsCreateAssetTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAssetWeAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAssetBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsSetMetadata = true
		err = decoder.Decode(&ty.AsSetMetadataTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMetadataWeAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMetadataAssetMeta2)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsBurn = true
		err = decoder.Decode(&ty.AsBurnTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBurnWeAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBurnBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsSetWeightRateMultiple = true
		err = decoder.Decode(&ty.AsSetWeightRateMultipleAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetWeightRateMultipleMultiple1)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsSetExistenialDepposit = true
		err = decoder.Decode(&ty.AsSetExistenialDeppositAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetExistenialDeppositExistenialDeposit1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeAssetsPalletEvent) Variant() (uint8, error) {
	if ty.IsTransferred {
		return 0, nil
	}
	if ty.IsBalanceUpdated {
		return 1, nil
	}
	if ty.IsDeposited {
		return 2, nil
	}
	if ty.IsWithdrawn {
		return 3, nil
	}
	if ty.IsCreateAsset {
		return 4, nil
	}
	if ty.IsSetMetadata {
		return 5, nil
	}
	if ty.IsBurn {
		return 6, nil
	}
	if ty.IsSetWeightRateMultiple {
		return 7, nil
	}
	if ty.IsSetExistenialDepposit {
		return 8, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeAssetsPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsTransferred {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::Transferred": map[string]interface{}{
			"AsTransferredBalanceOfT3": ty.AsTransferredBalanceOfT3,
			"AsTransferredTAccountId1": ty.AsTransferredTAccountId1,
			"AsTransferredTAccountId2": ty.AsTransferredTAccountId2,
			"AsTransferredWeAssetId0":  ty.AsTransferredWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsBalanceUpdated {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::BalanceUpdated": map[string]interface{}{
			"AsBalanceUpdatedAmountOfT2":  ty.AsBalanceUpdatedAmountOfT2,
			"AsBalanceUpdatedTAccountId1": ty.AsBalanceUpdatedTAccountId1,
			"AsBalanceUpdatedWeAssetId0":  ty.AsBalanceUpdatedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsDeposited {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::Deposited": map[string]interface{}{
			"AsDepositedBalanceOfT2": ty.AsDepositedBalanceOfT2,
			"AsDepositedTAccountId1": ty.AsDepositedTAccountId1,
			"AsDepositedWeAssetId0":  ty.AsDepositedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsWithdrawn {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::Withdrawn": map[string]interface{}{
			"AsWithdrawnBalanceOfT2": ty.AsWithdrawnBalanceOfT2,
			"AsWithdrawnTAccountId1": ty.AsWithdrawnTAccountId1,
			"AsWithdrawnWeAssetId0":  ty.AsWithdrawnWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateAsset {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::CreateAsset": map[string]interface{}{
			"AsCreateAssetBalanceOfT2": ty.AsCreateAssetBalanceOfT2,
			"AsCreateAssetTAccountId0": ty.AsCreateAssetTAccountId0,
			"AsCreateAssetWeAssetId1":  ty.AsCreateAssetWeAssetId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetMetadata {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::SetMetadata": map[string]interface{}{
			"AsSetMetadataAssetMeta2":  ty.AsSetMetadataAssetMeta2,
			"AsSetMetadataTAccountId0": ty.AsSetMetadataTAccountId0,
			"AsSetMetadataWeAssetId1":  ty.AsSetMetadataWeAssetId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsBurn {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::Burn": map[string]interface{}{
			"AsBurnBalanceOfT2": ty.AsBurnBalanceOfT2,
			"AsBurnTAccountId0": ty.AsBurnTAccountId0,
			"AsBurnWeAssetId1":  ty.AsBurnWeAssetId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetWeightRateMultiple {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::SetWeightRateMultiple": map[string]interface{}{
			"AsSetWeightRateMultipleAssetId0":  ty.AsSetWeightRateMultipleAssetId0,
			"AsSetWeightRateMultipleMultiple1": ty.AsSetWeightRateMultipleMultiple1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetExistenialDepposit {
		m := map[string]interface{}{"WeteeAssetsPalletEvent::SetExistenialDepposit": map[string]interface{}{
			"AsSetExistenialDeppositAssetId0":           ty.AsSetExistenialDeppositAssetId0,
			"AsSetExistenialDeppositExistenialDeposit1": ty.AsSetExistenialDeppositExistenialDeposit1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeSudoPalletEvent with id=57
type WeteeSudoPalletEvent struct {
	IsSudoDone            bool
	AsSudoDoneSudo0       [32]byte
	AsSudoDoneSudoResult1 Result
	IsSetSudo             bool
	AsSetSudoDaoId0       uint64
	AsSetSudoSudoAccount1 [32]byte
	IsCloseSudo           bool
	AsCloseSudoDaoId0     uint64
}

func (ty WeteeSudoPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSudoDone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoDoneSudo0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoDoneSudoResult1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetSudo {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSudoDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSudoSudoAccount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCloseSudo {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCloseSudoDaoId0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeSudoPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSudoDone = true
		err = decoder.Decode(&ty.AsSudoDoneSudo0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSudoDoneSudoResult1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSetSudo = true
		err = decoder.Decode(&ty.AsSetSudoDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetSudoSudoAccount1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCloseSudo = true
		err = decoder.Decode(&ty.AsCloseSudoDaoId0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeSudoPalletEvent) Variant() (uint8, error) {
	if ty.IsSudoDone {
		return 0, nil
	}
	if ty.IsSetSudo {
		return 1, nil
	}
	if ty.IsCloseSudo {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeSudoPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsSudoDone {
		m := map[string]interface{}{"WeteeSudoPalletEvent::SudoDone": map[string]interface{}{
			"AsSudoDoneSudo0":       ty.AsSudoDoneSudo0,
			"AsSudoDoneSudoResult1": ty.AsSudoDoneSudoResult1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetSudo {
		m := map[string]interface{}{"WeteeSudoPalletEvent::SetSudo": map[string]interface{}{
			"AsSetSudoDaoId0":       ty.AsSetSudoDaoId0,
			"AsSetSudoSudoAccount1": ty.AsSetSudoSudoAccount1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCloseSudo {
		m := map[string]interface{}{"WeteeSudoPalletEvent::CloseSudo": ty.AsCloseSudoDaoId0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGuildPalletEvent with id=58
type WeteeGuildPalletEvent struct {
	IsGuildCreated            bool
	AsGuildCreatedWeAssetId0  uint64
	AsGuildCreatedU641        uint64
	AsGuildCreatedTAccountId2 [32]byte
	IsGuildJoined             bool
	AsGuildJoinedWeAssetId0   uint64
	AsGuildJoinedU641         uint64
	AsGuildJoinedTAccountId2  [32]byte
}

func (ty WeteeGuildPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsGuildCreated {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildCreatedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildCreatedU641)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildCreatedTAccountId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGuildJoined {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinedU641)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinedTAccountId2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGuildPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsGuildCreated = true
		err = decoder.Decode(&ty.AsGuildCreatedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildCreatedU641)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildCreatedTAccountId2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsGuildJoined = true
		err = decoder.Decode(&ty.AsGuildJoinedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinedU641)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinedTAccountId2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGuildPalletEvent) Variant() (uint8, error) {
	if ty.IsGuildCreated {
		return 0, nil
	}
	if ty.IsGuildJoined {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGuildPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsGuildCreated {
		m := map[string]interface{}{"WeteeGuildPalletEvent::GuildCreated": map[string]interface{}{
			"AsGuildCreatedTAccountId2": ty.AsGuildCreatedTAccountId2,
			"AsGuildCreatedU641":        ty.AsGuildCreatedU641,
			"AsGuildCreatedWeAssetId0":  ty.AsGuildCreatedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsGuildJoined {
		m := map[string]interface{}{"WeteeGuildPalletEvent::GuildJoined": map[string]interface{}{
			"AsGuildJoinedTAccountId2": ty.AsGuildJoinedTAccountId2,
			"AsGuildJoinedU641":        ty.AsGuildJoinedU641,
			"AsGuildJoinedWeAssetId0":  ty.AsGuildJoinedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeProjectPalletEvent with id=59
type WeteeProjectPalletEvent struct {
	IsProjectJoined                  bool
	AsProjectJoinedWeAssetId0        uint64
	AsProjectJoinedProjectId1        uint64
	AsProjectJoinedTAccountId2       [32]byte
	IsProjectCreated                 bool
	AsProjectCreatedWeAssetId0       uint64
	AsProjectCreatedProjectId1       uint64
	AsProjectCreatedTAccountId2      [32]byte
	IsTaskCreated                    bool
	AsTaskCreatedWeAssetId0          uint64
	AsTaskCreatedProjectId1          uint64
	AsTaskCreatedU642                uint64
	AsTaskCreatedTAccountId3         [32]byte
	IsTaskInProgress                 bool
	AsTaskInProgressWeAssetId0       uint64
	AsTaskInProgressProjectId1       uint64
	AsTaskInProgressU642             uint64
	AsTaskInProgressTAccountId3      [32]byte
	IsTaskInReview                   bool
	AsTaskInReviewWeAssetId0         uint64
	AsTaskInReviewProjectId1         uint64
	AsTaskInReviewU642               uint64
	AsTaskInReviewTAccountId3        [32]byte
	IsProxyCallResult                bool
	AsProxyCallResultCaller0         [32]byte
	AsProxyCallResultProjectAccount1 [32]byte
	AsProxyCallResultCallResult2     Result
}

func (ty WeteeProjectPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsProjectJoined {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinedProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinedTAccountId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProjectCreated {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectCreatedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectCreatedProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectCreatedTAccountId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskCreated {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskCreatedTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskInProgress {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInProgressWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInProgressProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInProgressU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInProgressTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskInReview {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInReviewWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInReviewU642)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskInReviewTAccountId3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProxyCallResult {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProxyCallResultCaller0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProxyCallResultProjectAccount1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProxyCallResultCallResult2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeProjectPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsProjectJoined = true
		err = decoder.Decode(&ty.AsProjectJoinedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectJoinedProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectJoinedTAccountId2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsProjectCreated = true
		err = decoder.Decode(&ty.AsProjectCreatedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectCreatedProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectCreatedTAccountId2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTaskCreated = true
		err = decoder.Decode(&ty.AsTaskCreatedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskCreatedTAccountId3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsTaskInProgress = true
		err = decoder.Decode(&ty.AsTaskInProgressWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInProgressProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInProgressU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInProgressTAccountId3)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsTaskInReview = true
		err = decoder.Decode(&ty.AsTaskInReviewWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInReviewU642)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskInReviewTAccountId3)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsProxyCallResult = true
		err = decoder.Decode(&ty.AsProxyCallResultCaller0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProxyCallResultProjectAccount1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProxyCallResultCallResult2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeProjectPalletEvent) Variant() (uint8, error) {
	if ty.IsProjectJoined {
		return 0, nil
	}
	if ty.IsProjectCreated {
		return 1, nil
	}
	if ty.IsTaskCreated {
		return 2, nil
	}
	if ty.IsTaskInProgress {
		return 3, nil
	}
	if ty.IsTaskInReview {
		return 4, nil
	}
	if ty.IsProxyCallResult {
		return 5, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeProjectPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsProjectJoined {
		m := map[string]interface{}{"WeteeProjectPalletEvent::ProjectJoined": map[string]interface{}{
			"AsProjectJoinedProjectId1":  ty.AsProjectJoinedProjectId1,
			"AsProjectJoinedTAccountId2": ty.AsProjectJoinedTAccountId2,
			"AsProjectJoinedWeAssetId0":  ty.AsProjectJoinedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsProjectCreated {
		m := map[string]interface{}{"WeteeProjectPalletEvent::ProjectCreated": map[string]interface{}{
			"AsProjectCreatedProjectId1":  ty.AsProjectCreatedProjectId1,
			"AsProjectCreatedTAccountId2": ty.AsProjectCreatedTAccountId2,
			"AsProjectCreatedWeAssetId0":  ty.AsProjectCreatedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskCreated {
		m := map[string]interface{}{"WeteeProjectPalletEvent::TaskCreated": map[string]interface{}{
			"AsTaskCreatedProjectId1":  ty.AsTaskCreatedProjectId1,
			"AsTaskCreatedTAccountId3": ty.AsTaskCreatedTAccountId3,
			"AsTaskCreatedU642":        ty.AsTaskCreatedU642,
			"AsTaskCreatedWeAssetId0":  ty.AsTaskCreatedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskInProgress {
		m := map[string]interface{}{"WeteeProjectPalletEvent::TaskInProgress": map[string]interface{}{
			"AsTaskInProgressProjectId1":  ty.AsTaskInProgressProjectId1,
			"AsTaskInProgressTAccountId3": ty.AsTaskInProgressTAccountId3,
			"AsTaskInProgressU642":        ty.AsTaskInProgressU642,
			"AsTaskInProgressWeAssetId0":  ty.AsTaskInProgressWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskInReview {
		m := map[string]interface{}{"WeteeProjectPalletEvent::TaskInReview": map[string]interface{}{
			"AsTaskInReviewProjectId1":  ty.AsTaskInReviewProjectId1,
			"AsTaskInReviewTAccountId3": ty.AsTaskInReviewTAccountId3,
			"AsTaskInReviewU642":        ty.AsTaskInReviewU642,
			"AsTaskInReviewWeAssetId0":  ty.AsTaskInReviewWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsProxyCallResult {
		m := map[string]interface{}{"WeteeProjectPalletEvent::ProxyCallResult": map[string]interface{}{
			"AsProxyCallResultCallResult2":     ty.AsProxyCallResultCallResult2,
			"AsProxyCallResultCaller0":         ty.AsProxyCallResultCaller0,
			"AsProxyCallResultProjectAccount1": ty.AsProxyCallResultProjectAccount1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGovPalletEvent with id=60
type WeteeGovPalletEvent struct {
	IsProposed                    bool
	AsProposedWeAssetId0          uint64
	AsProposedTHash1              [32]byte
	IsRecreate                    bool
	AsRecreateWeAssetId0          uint64
	AsRecreateBalanceOfT1         types.U128
	IsStartTable                  bool
	AsStartTableWeAssetId0        uint64
	AsStartTablePropIndex1        uint32
	IsVote                        bool
	AsVoteWeAssetId0              uint64
	AsVotePropIndex1              uint32
	AsVoteBalanceOfT2             types.U128
	IsCancelVote                  bool
	AsCancelVoteWeAssetId0        uint64
	AsCancelVotePropIndex1        uint32
	IsEnactProposal               bool
	AsEnactProposalDaoId0         uint64
	AsEnactProposalIndex1         uint32
	AsEnactProposalResult2        Result
	IsUnlock                      bool
	AsUnlockTAccountId0           [32]byte
	AsUnlockWeAssetId1            uint64
	AsUnlockBalanceOfT2           types.U128
	IsUnreserved                  bool
	AsUnreservedTAccountId0       [32]byte
	AsUnreservedBalanceOfT1       types.U128
	IsSetMinVoteWeight            bool
	AsSetMinVoteWeightWeAssetId0  uint64
	AsSetMinVoteWeightTCallId1    uint32
	AsSetMinVoteWeightBalanceOfT2 types.U128
	IsSetMaxPreProps              bool
	AsSetMaxPrePropsDaoId0        uint64
	AsSetMaxPrePropsMax1          uint32
	IsVoteModelUpdate             bool
	AsVoteModelUpdateDaoId0       uint64
	AsVoteModelUpdateModel1       byte
	IsPeriodUpdate                bool
	AsPeriodUpdateDaoId0          uint64
}

func (ty WeteeGovPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsProposed {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProposedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProposedTHash1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRecreate {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRecreateWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRecreateBalanceOfT1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStartTable {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTableWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTablePropIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsVote {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVotePropIndex1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCancelVote {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCancelVoteWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCancelVotePropIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsEnactProposal {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEnactProposalDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEnactProposalIndex1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEnactProposalResult2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnlock {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockWeAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnreserved {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnreservedBalanceOfT1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetMinVoteWeight {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMinVoteWeightWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMinVoteWeightTCallId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMinVoteWeightBalanceOfT2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetMaxPreProps {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMaxPrePropsDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMaxPrePropsMax1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsVoteModelUpdate {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteModelUpdateDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteModelUpdateModel1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPeriodUpdate {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPeriodUpdateDaoId0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGovPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsProposed = true
		err = decoder.Decode(&ty.AsProposedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProposedTHash1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsRecreate = true
		err = decoder.Decode(&ty.AsRecreateWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRecreateBalanceOfT1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsStartTable = true
		err = decoder.Decode(&ty.AsStartTableWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsStartTablePropIndex1)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsVote = true
		err = decoder.Decode(&ty.AsVoteWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVotePropIndex1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsCancelVote = true
		err = decoder.Decode(&ty.AsCancelVoteWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCancelVotePropIndex1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsEnactProposal = true
		err = decoder.Decode(&ty.AsEnactProposalDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEnactProposalIndex1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsEnactProposalResult2)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsUnlock = true
		err = decoder.Decode(&ty.AsUnlockTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockWeAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnlockBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsUnreserved = true
		err = decoder.Decode(&ty.AsUnreservedTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnreservedBalanceOfT1)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsSetMinVoteWeight = true
		err = decoder.Decode(&ty.AsSetMinVoteWeightWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMinVoteWeightTCallId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMinVoteWeightBalanceOfT2)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsSetMaxPreProps = true
		err = decoder.Decode(&ty.AsSetMaxPrePropsDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMaxPrePropsMax1)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsVoteModelUpdate = true
		err = decoder.Decode(&ty.AsVoteModelUpdateDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteModelUpdateModel1)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsPeriodUpdate = true
		err = decoder.Decode(&ty.AsPeriodUpdateDaoId0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGovPalletEvent) Variant() (uint8, error) {
	if ty.IsProposed {
		return 0, nil
	}
	if ty.IsRecreate {
		return 1, nil
	}
	if ty.IsStartTable {
		return 2, nil
	}
	if ty.IsVote {
		return 3, nil
	}
	if ty.IsCancelVote {
		return 4, nil
	}
	if ty.IsEnactProposal {
		return 5, nil
	}
	if ty.IsUnlock {
		return 6, nil
	}
	if ty.IsUnreserved {
		return 7, nil
	}
	if ty.IsSetMinVoteWeight {
		return 8, nil
	}
	if ty.IsSetMaxPreProps {
		return 9, nil
	}
	if ty.IsVoteModelUpdate {
		return 10, nil
	}
	if ty.IsPeriodUpdate {
		return 11, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGovPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsProposed {
		m := map[string]interface{}{"WeteeGovPalletEvent::Proposed": map[string]interface{}{
			"AsProposedTHash1":     ty.AsProposedTHash1,
			"AsProposedWeAssetId0": ty.AsProposedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsRecreate {
		m := map[string]interface{}{"WeteeGovPalletEvent::Recreate": map[string]interface{}{
			"AsRecreateBalanceOfT1": ty.AsRecreateBalanceOfT1,
			"AsRecreateWeAssetId0":  ty.AsRecreateWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsStartTable {
		m := map[string]interface{}{"WeteeGovPalletEvent::StartTable": map[string]interface{}{
			"AsStartTablePropIndex1": ty.AsStartTablePropIndex1,
			"AsStartTableWeAssetId0": ty.AsStartTableWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsVote {
		m := map[string]interface{}{"WeteeGovPalletEvent::Vote": map[string]interface{}{
			"AsVoteBalanceOfT2": ty.AsVoteBalanceOfT2,
			"AsVotePropIndex1":  ty.AsVotePropIndex1,
			"AsVoteWeAssetId0":  ty.AsVoteWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsCancelVote {
		m := map[string]interface{}{"WeteeGovPalletEvent::CancelVote": map[string]interface{}{
			"AsCancelVotePropIndex1": ty.AsCancelVotePropIndex1,
			"AsCancelVoteWeAssetId0": ty.AsCancelVoteWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsEnactProposal {
		m := map[string]interface{}{"WeteeGovPalletEvent::EnactProposal": map[string]interface{}{
			"AsEnactProposalDaoId0":  ty.AsEnactProposalDaoId0,
			"AsEnactProposalIndex1":  ty.AsEnactProposalIndex1,
			"AsEnactProposalResult2": ty.AsEnactProposalResult2,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnlock {
		m := map[string]interface{}{"WeteeGovPalletEvent::Unlock": map[string]interface{}{
			"AsUnlockBalanceOfT2": ty.AsUnlockBalanceOfT2,
			"AsUnlockTAccountId0": ty.AsUnlockTAccountId0,
			"AsUnlockWeAssetId1":  ty.AsUnlockWeAssetId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnreserved {
		m := map[string]interface{}{"WeteeGovPalletEvent::Unreserved": map[string]interface{}{
			"AsUnreservedBalanceOfT1": ty.AsUnreservedBalanceOfT1,
			"AsUnreservedTAccountId0": ty.AsUnreservedTAccountId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetMinVoteWeight {
		m := map[string]interface{}{"WeteeGovPalletEvent::SetMinVoteWeight": map[string]interface{}{
			"AsSetMinVoteWeightBalanceOfT2": ty.AsSetMinVoteWeightBalanceOfT2,
			"AsSetMinVoteWeightTCallId1":    ty.AsSetMinVoteWeightTCallId1,
			"AsSetMinVoteWeightWeAssetId0":  ty.AsSetMinVoteWeightWeAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetMaxPreProps {
		m := map[string]interface{}{"WeteeGovPalletEvent::SetMaxPreProps": map[string]interface{}{
			"AsSetMaxPrePropsDaoId0": ty.AsSetMaxPrePropsDaoId0,
			"AsSetMaxPrePropsMax1":   ty.AsSetMaxPrePropsMax1,
		}}
		return json.Marshal(m)
	}
	if ty.IsVoteModelUpdate {
		m := map[string]interface{}{"WeteeGovPalletEvent::VoteModelUpdate": map[string]interface{}{
			"AsVoteModelUpdateDaoId0": ty.AsVoteModelUpdateDaoId0,
			"AsVoteModelUpdateModel1": ty.AsVoteModelUpdateModel1,
		}}
		return json.Marshal(m)
	}
	if ty.IsPeriodUpdate {
		m := map[string]interface{}{"WeteeGovPalletEvent::PeriodUpdate": ty.AsPeriodUpdateDaoId0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeTreasuryPalletEvent with id=61
type WeteeTreasuryPalletEvent struct {
	IsSpendApproved             bool
	AsSpendApprovedDaoId0       uint64
	AsSpendApprovedAmount1      types.U128
	AsSpendApprovedBeneficiary2 [32]byte
	IsSpendRejected             bool
	AsSpendRejectedDaoId0       uint64
	AsSpendRejectedAmount1      types.U128
	AsSpendRejectedBeneficiary2 [32]byte
}

func (ty WeteeTreasuryPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSpendApproved {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendApprovedDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendApprovedAmount1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendApprovedBeneficiary2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSpendRejected {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendRejectedDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendRejectedAmount1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendRejectedBeneficiary2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTreasuryPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSpendApproved = true
		err = decoder.Decode(&ty.AsSpendApprovedDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendApprovedAmount1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendApprovedBeneficiary2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSpendRejected = true
		err = decoder.Decode(&ty.AsSpendRejectedDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendRejectedAmount1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendRejectedBeneficiary2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTreasuryPalletEvent) Variant() (uint8, error) {
	if ty.IsSpendApproved {
		return 0, nil
	}
	if ty.IsSpendRejected {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTreasuryPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsSpendApproved {
		m := map[string]interface{}{"WeteeTreasuryPalletEvent::SpendApproved": map[string]interface{}{
			"AsSpendApprovedAmount1":      ty.AsSpendApprovedAmount1,
			"AsSpendApprovedBeneficiary2": ty.AsSpendApprovedBeneficiary2,
			"AsSpendApprovedDaoId0":       ty.AsSpendApprovedDaoId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSpendRejected {
		m := map[string]interface{}{"WeteeTreasuryPalletEvent::SpendRejected": map[string]interface{}{
			"AsSpendRejectedAmount1":      ty.AsSpendRejectedAmount1,
			"AsSpendRejectedBeneficiary2": ty.AsSpendRejectedBeneficiary2,
			"AsSpendRejectedDaoId0":       ty.AsSpendRejectedDaoId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteePrimitivesTypesWorkType with id=64
type WorkType struct {
	IsAPP  bool
	IsTASK bool
	IsGPU  bool
}

func (ty WorkType) Encode(encoder scale.Encoder) (err error) {
	if ty.IsAPP {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTASK {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGPU {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WorkType) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsAPP = true
		return
	case 1:
		ty.IsTASK = true
		return
	case 2:
		ty.IsGPU = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WorkType) Variant() (uint8, error) {
	if ty.IsAPP {
		return 0, nil
	}
	if ty.IsTASK {
		return 1, nil
	}
	if ty.IsGPU {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WorkType) MarshalJSON() ([]byte, error) {
	if ty.IsAPP {
		return json.Marshal("WorkType::APP")
	}
	if ty.IsTASK {
		return json.Marshal("WorkType::TASK")
	}
	if ty.IsGPU {
		return json.Marshal("WorkType::GPU")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_primitives_types_WorkId with id={{false [63]}}
type WorkId struct {
	// Field 0 with TypeId=64
	Wtype WorkType
	// Field 1 with TypeId=12
	Id uint64
}

// Generated WeteeAppPalletEvent with id=62
type WeteeAppPalletEvent struct {
	IsAppCreated         bool
	AsAppCreatedCreator0 [32]byte
	AsAppCreatedId1      uint64
	IsAppRuning          bool
	AsAppRuningCreator0  [32]byte
	AsAppRuningId1       uint64
	IsCharge             bool
	AsChargeFrom0        [32]byte
	AsChargeTo1          [32]byte
	AsChargeAmount2      types.U128
	IsPayRunFee          bool
	AsPayRunFeeFrom0     [32]byte
	AsPayRunFeeTo1       [32]byte
	AsPayRunFeeAmount2   types.U128
	IsWorkUpdated        bool
	AsWorkUpdatedUser0   [32]byte
	AsWorkUpdatedWorkId1 WorkId
	IsWorkStopped        bool
	AsWorkStoppedUser0   [32]byte
	AsWorkStoppedWorkId1 WorkId
}

func (ty WeteeAppPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsAppCreated {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppCreatedCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppCreatedId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAppRuning {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppRuningCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppRuningId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCharge {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPayRunFee {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkUpdated {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkUpdatedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkUpdatedWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkStopped {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStoppedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStoppedWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeAppPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsAppCreated = true
		err = decoder.Decode(&ty.AsAppCreatedCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsAppCreatedId1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsAppRuning = true
		err = decoder.Decode(&ty.AsAppRuningCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsAppRuningId1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCharge = true
		err = decoder.Decode(&ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsPayRunFee = true
		err = decoder.Decode(&ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsWorkUpdated = true
		err = decoder.Decode(&ty.AsWorkUpdatedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkUpdatedWorkId1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsWorkStopped = true
		err = decoder.Decode(&ty.AsWorkStoppedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkStoppedWorkId1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeAppPalletEvent) Variant() (uint8, error) {
	if ty.IsAppCreated {
		return 0, nil
	}
	if ty.IsAppRuning {
		return 1, nil
	}
	if ty.IsCharge {
		return 2, nil
	}
	if ty.IsPayRunFee {
		return 3, nil
	}
	if ty.IsWorkUpdated {
		return 4, nil
	}
	if ty.IsWorkStopped {
		return 5, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeAppPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsAppCreated {
		m := map[string]interface{}{"WeteeAppPalletEvent::AppCreated": map[string]interface{}{
			"AsAppCreatedCreator0": ty.AsAppCreatedCreator0,
			"AsAppCreatedId1":      ty.AsAppCreatedId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsAppRuning {
		m := map[string]interface{}{"WeteeAppPalletEvent::AppRuning": map[string]interface{}{
			"AsAppRuningCreator0": ty.AsAppRuningCreator0,
			"AsAppRuningId1":      ty.AsAppRuningId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCharge {
		m := map[string]interface{}{"WeteeAppPalletEvent::Charge": map[string]interface{}{
			"AsChargeAmount2": ty.AsChargeAmount2,
			"AsChargeFrom0":   ty.AsChargeFrom0,
			"AsChargeTo1":     ty.AsChargeTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsPayRunFee {
		m := map[string]interface{}{"WeteeAppPalletEvent::PayRunFee": map[string]interface{}{
			"AsPayRunFeeAmount2": ty.AsPayRunFeeAmount2,
			"AsPayRunFeeFrom0":   ty.AsPayRunFeeFrom0,
			"AsPayRunFeeTo1":     ty.AsPayRunFeeTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkUpdated {
		m := map[string]interface{}{"WeteeAppPalletEvent::WorkUpdated": map[string]interface{}{
			"AsWorkUpdatedUser0":   ty.AsWorkUpdatedUser0,
			"AsWorkUpdatedWorkId1": ty.AsWorkUpdatedWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkStopped {
		m := map[string]interface{}{"WeteeAppPalletEvent::WorkStopped": map[string]interface{}{
			"AsWorkStoppedUser0":   ty.AsWorkStoppedUser0,
			"AsWorkStoppedWorkId1": ty.AsWorkStoppedWorkId1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeTaskPalletEvent with id=65
type WeteeTaskPalletEvent struct {
	IsCreatedTask         bool
	AsCreatedTaskCreator0 [32]byte
	AsCreatedTaskId1      uint64
	IsTaskRuning          bool
	AsTaskRuningCreator0  [32]byte
	AsTaskRuningId1       uint64
	IsTaskStop            bool
	AsTaskStopCreator0    [32]byte
	AsTaskStopId1         uint64
	IsCharge              bool
	AsChargeFrom0         [32]byte
	AsChargeTo1           [32]byte
	AsChargeAmount2       types.U128
	IsPayRunFee           bool
	AsPayRunFeeFrom0      [32]byte
	AsPayRunFeeTo1        [32]byte
	AsPayRunFeeAmount2    types.U128
	IsWorkUpdated         bool
	AsWorkUpdatedUser0    [32]byte
	AsWorkUpdatedWorkId1  WorkId
}

func (ty WeteeTaskPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreatedTask {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedTaskCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedTaskId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskRuning {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskRuningCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskRuningId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskStop {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskStopCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskStopId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCharge {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPayRunFee {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkUpdated {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkUpdatedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkUpdatedWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTaskPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsCreatedTask = true
		err = decoder.Decode(&ty.AsCreatedTaskCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatedTaskId1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsTaskRuning = true
		err = decoder.Decode(&ty.AsTaskRuningCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskRuningId1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTaskStop = true
		err = decoder.Decode(&ty.AsTaskStopCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskStopId1)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsCharge = true
		err = decoder.Decode(&ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsPayRunFee = true
		err = decoder.Decode(&ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsWorkUpdated = true
		err = decoder.Decode(&ty.AsWorkUpdatedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkUpdatedWorkId1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTaskPalletEvent) Variant() (uint8, error) {
	if ty.IsCreatedTask {
		return 0, nil
	}
	if ty.IsTaskRuning {
		return 1, nil
	}
	if ty.IsTaskStop {
		return 2, nil
	}
	if ty.IsCharge {
		return 3, nil
	}
	if ty.IsPayRunFee {
		return 4, nil
	}
	if ty.IsWorkUpdated {
		return 5, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTaskPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsCreatedTask {
		m := map[string]interface{}{"WeteeTaskPalletEvent::CreatedTask": map[string]interface{}{
			"AsCreatedTaskCreator0": ty.AsCreatedTaskCreator0,
			"AsCreatedTaskId1":      ty.AsCreatedTaskId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskRuning {
		m := map[string]interface{}{"WeteeTaskPalletEvent::TaskRuning": map[string]interface{}{
			"AsTaskRuningCreator0": ty.AsTaskRuningCreator0,
			"AsTaskRuningId1":      ty.AsTaskRuningId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskStop {
		m := map[string]interface{}{"WeteeTaskPalletEvent::TaskStop": map[string]interface{}{
			"AsTaskStopCreator0": ty.AsTaskStopCreator0,
			"AsTaskStopId1":      ty.AsTaskStopId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCharge {
		m := map[string]interface{}{"WeteeTaskPalletEvent::Charge": map[string]interface{}{
			"AsChargeAmount2": ty.AsChargeAmount2,
			"AsChargeFrom0":   ty.AsChargeFrom0,
			"AsChargeTo1":     ty.AsChargeTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsPayRunFee {
		m := map[string]interface{}{"WeteeTaskPalletEvent::PayRunFee": map[string]interface{}{
			"AsPayRunFeeAmount2": ty.AsPayRunFeeAmount2,
			"AsPayRunFeeFrom0":   ty.AsPayRunFeeFrom0,
			"AsPayRunFeeTo1":     ty.AsPayRunFeeTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkUpdated {
		m := map[string]interface{}{"WeteeTaskPalletEvent::WorkUpdated": map[string]interface{}{
			"AsWorkUpdatedUser0":   ty.AsWorkUpdatedUser0,
			"AsWorkUpdatedWorkId1": ty.AsWorkUpdatedWorkId1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGpuPalletEvent with id=66
type WeteeGpuPalletEvent struct {
	IsCreatedApp         bool
	AsCreatedAppCreator0 [32]byte
	AsCreatedAppId1      uint64
	IsAppRuning          bool
	AsAppRuningCreator0  [32]byte
	AsAppRuningId1       uint64
	IsCharge             bool
	AsChargeFrom0        [32]byte
	AsChargeTo1          [32]byte
	AsChargeAmount2      types.U128
	IsPayRunFee          bool
	AsPayRunFeeFrom0     [32]byte
	AsPayRunFeeTo1       [32]byte
	AsPayRunFeeAmount2   types.U128
	IsWorkUpdated        bool
	AsWorkUpdatedUser0   [32]byte
	AsWorkUpdatedWorkId1 WorkId
	IsWorkStopped        bool
	AsWorkStoppedUser0   [32]byte
	AsWorkStoppedWorkId1 WorkId
}

func (ty WeteeGpuPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreatedApp {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedAppCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedAppId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAppRuning {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppRuningCreator0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppRuningId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCharge {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPayRunFee {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkUpdated {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkUpdatedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkUpdatedWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkStopped {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStoppedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStoppedWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGpuPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsCreatedApp = true
		err = decoder.Decode(&ty.AsCreatedAppCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatedAppId1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsAppRuning = true
		err = decoder.Decode(&ty.AsAppRuningCreator0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsAppRuningId1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCharge = true
		err = decoder.Decode(&ty.AsChargeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsChargeAmount2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsPayRunFee = true
		err = decoder.Decode(&ty.AsPayRunFeeFrom0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeTo1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPayRunFeeAmount2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsWorkUpdated = true
		err = decoder.Decode(&ty.AsWorkUpdatedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkUpdatedWorkId1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsWorkStopped = true
		err = decoder.Decode(&ty.AsWorkStoppedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkStoppedWorkId1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGpuPalletEvent) Variant() (uint8, error) {
	if ty.IsCreatedApp {
		return 0, nil
	}
	if ty.IsAppRuning {
		return 1, nil
	}
	if ty.IsCharge {
		return 2, nil
	}
	if ty.IsPayRunFee {
		return 3, nil
	}
	if ty.IsWorkUpdated {
		return 4, nil
	}
	if ty.IsWorkStopped {
		return 5, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGpuPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsCreatedApp {
		m := map[string]interface{}{"WeteeGpuPalletEvent::CreatedApp": map[string]interface{}{
			"AsCreatedAppCreator0": ty.AsCreatedAppCreator0,
			"AsCreatedAppId1":      ty.AsCreatedAppId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsAppRuning {
		m := map[string]interface{}{"WeteeGpuPalletEvent::AppRuning": map[string]interface{}{
			"AsAppRuningCreator0": ty.AsAppRuningCreator0,
			"AsAppRuningId1":      ty.AsAppRuningId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCharge {
		m := map[string]interface{}{"WeteeGpuPalletEvent::Charge": map[string]interface{}{
			"AsChargeAmount2": ty.AsChargeAmount2,
			"AsChargeFrom0":   ty.AsChargeFrom0,
			"AsChargeTo1":     ty.AsChargeTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsPayRunFee {
		m := map[string]interface{}{"WeteeGpuPalletEvent::PayRunFee": map[string]interface{}{
			"AsPayRunFeeAmount2": ty.AsPayRunFeeAmount2,
			"AsPayRunFeeFrom0":   ty.AsPayRunFeeFrom0,
			"AsPayRunFeeTo1":     ty.AsPayRunFeeTo1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkUpdated {
		m := map[string]interface{}{"WeteeGpuPalletEvent::WorkUpdated": map[string]interface{}{
			"AsWorkUpdatedUser0":   ty.AsWorkUpdatedUser0,
			"AsWorkUpdatedWorkId1": ty.AsWorkUpdatedWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkStopped {
		m := map[string]interface{}{"WeteeGpuPalletEvent::WorkStopped": map[string]interface{}{
			"AsWorkStoppedUser0":   ty.AsWorkStoppedUser0,
			"AsWorkStoppedWorkId1": ty.AsWorkStoppedWorkId1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeWorkerPalletEvent with id=67
type WeteeWorkerPalletEvent struct {
	IsClusterCreated                  bool
	AsClusterCreatedCreator0          [32]byte
	IsWorkAssigned                    bool
	AsWorkAssignedUser0               [32]byte
	AsWorkAssignedWorkId1             WorkId
	AsWorkAssignedClusterId2          uint64
	IsWorkRuning                      bool
	AsWorkRuningUser0                 [32]byte
	AsWorkRuningWorkId1               WorkId
	AsWorkRuningClusterId2            uint64
	IsWorkContractUpdated             bool
	AsWorkContractUpdatedUser0        [32]byte
	AsWorkContractUpdatedWorkId1      WorkId
	AsWorkContractUpdatedClusterId2   uint64
	IsWorkContractWithdrawaled        bool
	AsWorkContractWithdrawaledWorkId0 WorkId
	IsWorkStoped                      bool
	AsWorkStopedUser0                 [32]byte
	AsWorkStopedWorkId1               WorkId
	AsWorkStopedClusterId2            uint64
	IsWorkerCodeUpdated               bool
	AsWorkerCodeUpdatedSignature0     []byte
	AsWorkerCodeUpdatedSigner1        []byte
}

func (ty WeteeWorkerPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsClusterCreated {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterCreatedCreator0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkAssigned {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkAssignedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkAssignedWorkId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkAssignedClusterId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkRuning {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkRuningUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkRuningWorkId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkRuningClusterId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkContractUpdated {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkContractUpdatedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkContractUpdatedWorkId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkContractUpdatedClusterId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkContractWithdrawaled {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkContractWithdrawaledWorkId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkStoped {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStopedUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStopedWorkId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStopedClusterId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkerCodeUpdated {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkerCodeUpdatedSignature0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkerCodeUpdatedSigner1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeWorkerPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsClusterCreated = true
		err = decoder.Decode(&ty.AsClusterCreatedCreator0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsWorkAssigned = true
		err = decoder.Decode(&ty.AsWorkAssignedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkAssignedWorkId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkAssignedClusterId2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsWorkRuning = true
		err = decoder.Decode(&ty.AsWorkRuningUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkRuningWorkId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkRuningClusterId2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsWorkContractUpdated = true
		err = decoder.Decode(&ty.AsWorkContractUpdatedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkContractUpdatedWorkId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkContractUpdatedClusterId2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsWorkContractWithdrawaled = true
		err = decoder.Decode(&ty.AsWorkContractWithdrawaledWorkId0)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsWorkStoped = true
		err = decoder.Decode(&ty.AsWorkStopedUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkStopedWorkId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkStopedClusterId2)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsWorkerCodeUpdated = true
		err = decoder.Decode(&ty.AsWorkerCodeUpdatedSignature0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkerCodeUpdatedSigner1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeWorkerPalletEvent) Variant() (uint8, error) {
	if ty.IsClusterCreated {
		return 0, nil
	}
	if ty.IsWorkAssigned {
		return 1, nil
	}
	if ty.IsWorkRuning {
		return 2, nil
	}
	if ty.IsWorkContractUpdated {
		return 3, nil
	}
	if ty.IsWorkContractWithdrawaled {
		return 4, nil
	}
	if ty.IsWorkStoped {
		return 5, nil
	}
	if ty.IsWorkerCodeUpdated {
		return 6, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeWorkerPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsClusterCreated {
		m := map[string]interface{}{"WeteeWorkerPalletEvent::ClusterCreated": ty.AsClusterCreatedCreator0}
		return json.Marshal(m)
	}
	if ty.IsWorkAssigned {
		m := map[string]interface{}{"WeteeWorkerPalletEvent::WorkAssigned": map[string]interface{}{
			"AsWorkAssignedClusterId2": ty.AsWorkAssignedClusterId2,
			"AsWorkAssignedUser0":      ty.AsWorkAssignedUser0,
			"AsWorkAssignedWorkId1":    ty.AsWorkAssignedWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkRuning {
		m := map[string]interface{}{"WeteeWorkerPalletEvent::WorkRuning": map[string]interface{}{
			"AsWorkRuningClusterId2": ty.AsWorkRuningClusterId2,
			"AsWorkRuningUser0":      ty.AsWorkRuningUser0,
			"AsWorkRuningWorkId1":    ty.AsWorkRuningWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkContractUpdated {
		m := map[string]interface{}{"WeteeWorkerPalletEvent::WorkContractUpdated": map[string]interface{}{
			"AsWorkContractUpdatedClusterId2": ty.AsWorkContractUpdatedClusterId2,
			"AsWorkContractUpdatedUser0":      ty.AsWorkContractUpdatedUser0,
			"AsWorkContractUpdatedWorkId1":    ty.AsWorkContractUpdatedWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkContractWithdrawaled {
		m := map[string]interface{}{"WeteeWorkerPalletEvent::WorkContractWithdrawaled": ty.AsWorkContractWithdrawaledWorkId0}
		return json.Marshal(m)
	}
	if ty.IsWorkStoped {
		m := map[string]interface{}{"WeteeWorkerPalletEvent::WorkStoped": map[string]interface{}{
			"AsWorkStopedClusterId2": ty.AsWorkStopedClusterId2,
			"AsWorkStopedUser0":      ty.AsWorkStopedUser0,
			"AsWorkStopedWorkId1":    ty.AsWorkStopedWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkerCodeUpdated {
		m := map[string]interface{}{"WeteeWorkerPalletEvent::WorkerCodeUpdated": map[string]interface{}{
			"AsWorkerCodeUpdatedSignature0": ty.AsWorkerCodeUpdatedSignature0,
			"AsWorkerCodeUpdatedSigner1":    ty.AsWorkerCodeUpdatedSigner1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpRuntimeMultiSignature with id=71
type MultiSignature struct {
	IsEd25519       bool
	AsEd25519Field0 [64]byte
	IsSr25519       bool
	AsSr25519Field0 [64]byte
	IsEcdsa         bool
	AsEcdsaField0   [65]byte
}

func (ty MultiSignature) Encode(encoder scale.Encoder) (err error) {
	if ty.IsEd25519 {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEd25519Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSr25519 {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSr25519Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsEcdsa {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEcdsaField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *MultiSignature) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsEd25519 = true
		err = decoder.Decode(&ty.AsEd25519Field0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSr25519 = true
		err = decoder.Decode(&ty.AsSr25519Field0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsEcdsa = true
		err = decoder.Decode(&ty.AsEcdsaField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *MultiSignature) Variant() (uint8, error) {
	if ty.IsEd25519 {
		return 0, nil
	}
	if ty.IsSr25519 {
		return 1, nil
	}
	if ty.IsEcdsa {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty MultiSignature) MarshalJSON() ([]byte, error) {
	if ty.IsEd25519 {
		m := map[string]interface{}{"MultiSignature::Ed25519": ty.AsEd25519Field0}
		return json.Marshal(m)
	}
	if ty.IsSr25519 {
		m := map[string]interface{}{"MultiSignature::Sr25519": ty.AsSr25519Field0}
		return json.Marshal(m)
	}
	if ty.IsEcdsa {
		m := map[string]interface{}{"MultiSignature::Ecdsa": ty.AsEcdsaField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeDsecretPalletEvent with id=68
type WeteeDsecretPalletEvent struct {
	IsNodeRegister              bool
	AsNodeRegisterNode0         [32]byte
	IsCodeUpdated               bool
	AsCodeUpdatedSignature0     []byte
	AsCodeUpdatedSigner1        []byte
	IsClusterProofUpload        bool
	AsClusterProofUploadCid0    uint64
	AsClusterProofUploadReport1 []byte
	AsClusterProofUploadPubs2   [][32]byte
	AsClusterProofUploadSigs3   []MultiSignature
}

func (ty WeteeDsecretPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNodeRegister {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNodeRegisterNode0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCodeUpdated {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCodeUpdatedSignature0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCodeUpdatedSigner1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterProofUpload {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterProofUploadCid0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterProofUploadReport1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterProofUploadPubs2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterProofUploadSigs3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeDsecretPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNodeRegister = true
		err = decoder.Decode(&ty.AsNodeRegisterNode0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsCodeUpdated = true
		err = decoder.Decode(&ty.AsCodeUpdatedSignature0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCodeUpdatedSigner1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsClusterProofUpload = true
		err = decoder.Decode(&ty.AsClusterProofUploadCid0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterProofUploadReport1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterProofUploadPubs2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterProofUploadSigs3)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeDsecretPalletEvent) Variant() (uint8, error) {
	if ty.IsNodeRegister {
		return 0, nil
	}
	if ty.IsCodeUpdated {
		return 1, nil
	}
	if ty.IsClusterProofUpload {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeDsecretPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsNodeRegister {
		m := map[string]interface{}{"WeteeDsecretPalletEvent::NodeRegister": ty.AsNodeRegisterNode0}
		return json.Marshal(m)
	}
	if ty.IsCodeUpdated {
		m := map[string]interface{}{"WeteeDsecretPalletEvent::CodeUpdated": map[string]interface{}{
			"AsCodeUpdatedSignature0": ty.AsCodeUpdatedSignature0,
			"AsCodeUpdatedSigner1":    ty.AsCodeUpdatedSigner1,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterProofUpload {
		m := map[string]interface{}{"WeteeDsecretPalletEvent::ClusterProofUpload": map[string]interface{}{
			"AsClusterProofUploadCid0":    ty.AsClusterProofUploadCid0,
			"AsClusterProofUploadPubs2":   ty.AsClusterProofUploadPubs2,
			"AsClusterProofUploadReport1": ty.AsClusterProofUploadReport1,
			"AsClusterProofUploadSigs3":   ty.AsClusterProofUploadSigs3,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteePrimitivesTypesInkArg with id=76
type InkArg struct {
	IsTBool         bool
	AsTBoolField0   bool
	IsU8            bool
	AsU8Field0      byte
	IsI8            bool
	AsI8Field0      int8
	IsU16           bool
	AsU16Field0     uint16
	IsI16           bool
	AsI16Field0     int16
	IsU32           bool
	AsU32Field0     uint32
	IsI32           bool
	AsI32Field0     int32
	IsU64           bool
	AsU64Field0     uint64
	IsI64           bool
	AsI64Field0     int64
	IsU128          bool
	AsU128Field0    types.U128
	IsI128          bool
	AsI128Field0    types.I128
	IsTString       bool
	AsTStringField0 []byte
}

func (ty InkArg) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTBool {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTBoolField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsU8 {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsU8Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsI8 {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsI8Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsU16 {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsU16Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsI16 {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsI16Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsU32 {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsU32Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsI32 {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsI32Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsU64 {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsU64Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsI64 {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsI64Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsU128 {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsU128Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsI128 {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsI128Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTString {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTStringField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *InkArg) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTBool = true
		err = decoder.Decode(&ty.AsTBoolField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsU8 = true
		err = decoder.Decode(&ty.AsU8Field0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsI8 = true
		err = decoder.Decode(&ty.AsI8Field0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsU16 = true
		err = decoder.Decode(&ty.AsU16Field0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsI16 = true
		err = decoder.Decode(&ty.AsI16Field0)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsU32 = true
		err = decoder.Decode(&ty.AsU32Field0)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsI32 = true
		err = decoder.Decode(&ty.AsI32Field0)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsU64 = true
		err = decoder.Decode(&ty.AsU64Field0)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsI64 = true
		err = decoder.Decode(&ty.AsI64Field0)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsU128 = true
		err = decoder.Decode(&ty.AsU128Field0)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsI128 = true
		err = decoder.Decode(&ty.AsI128Field0)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsTString = true
		err = decoder.Decode(&ty.AsTStringField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *InkArg) Variant() (uint8, error) {
	if ty.IsTBool {
		return 0, nil
	}
	if ty.IsU8 {
		return 1, nil
	}
	if ty.IsI8 {
		return 2, nil
	}
	if ty.IsU16 {
		return 3, nil
	}
	if ty.IsI16 {
		return 4, nil
	}
	if ty.IsU32 {
		return 5, nil
	}
	if ty.IsI32 {
		return 6, nil
	}
	if ty.IsU64 {
		return 7, nil
	}
	if ty.IsI64 {
		return 8, nil
	}
	if ty.IsU128 {
		return 9, nil
	}
	if ty.IsI128 {
		return 10, nil
	}
	if ty.IsTString {
		return 11, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty InkArg) MarshalJSON() ([]byte, error) {
	if ty.IsTBool {
		m := map[string]interface{}{"InkArg::TBool": ty.AsTBoolField0}
		return json.Marshal(m)
	}
	if ty.IsU8 {
		m := map[string]interface{}{"InkArg::U8": ty.AsU8Field0}
		return json.Marshal(m)
	}
	if ty.IsI8 {
		m := map[string]interface{}{"InkArg::I8": ty.AsI8Field0}
		return json.Marshal(m)
	}
	if ty.IsU16 {
		m := map[string]interface{}{"InkArg::U16": ty.AsU16Field0}
		return json.Marshal(m)
	}
	if ty.IsI16 {
		m := map[string]interface{}{"InkArg::I16": ty.AsI16Field0}
		return json.Marshal(m)
	}
	if ty.IsU32 {
		m := map[string]interface{}{"InkArg::U32": ty.AsU32Field0}
		return json.Marshal(m)
	}
	if ty.IsI32 {
		m := map[string]interface{}{"InkArg::I32": ty.AsI32Field0}
		return json.Marshal(m)
	}
	if ty.IsU64 {
		m := map[string]interface{}{"InkArg::U64": ty.AsU64Field0}
		return json.Marshal(m)
	}
	if ty.IsI64 {
		m := map[string]interface{}{"InkArg::I64": ty.AsI64Field0}
		return json.Marshal(m)
	}
	if ty.IsU128 {
		m := map[string]interface{}{"InkArg::U128": ty.AsU128Field0}
		return json.Marshal(m)
	}
	if ty.IsI128 {
		m := map[string]interface{}{"InkArg::I128": ty.AsI128Field0}
		return json.Marshal(m)
	}
	if ty.IsTString {
		m := map[string]interface{}{"InkArg::TString": ty.AsTStringField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeTeeBridgePalletEvent with id=74
type WeteeTeeBridgePalletEvent struct {
	IsTEECallStarted              bool
	AsTEECallStartedClusterId0    uint64
	AsTEECallStartedCallId1       types.U128
	IsTEECallSuccessed            bool
	AsTEECallSuccessedClusterId0  uint64
	AsTEECallSuccessedCallId1     types.U128
	IsTEECallFailed               bool
	AsTEECallFailedClusterId0     uint64
	AsTEECallFailedCallId1        types.U128
	AsTEECallFailedError2         []byte
	IsTEECallBackFailed           bool
	AsTEECallBackFailedClusterId0 uint64
	AsTEECallBackFailedCallId1    types.U128
	AsTEECallBackFailedError2     []byte
	IsInkCallSuccessed            bool
	AsInkCallSuccessedWorkId0     WorkId
	AsInkCallSuccessedContract1   [20]byte
	AsInkCallSuccessedMethod2     [4]byte
	AsInkCallSuccessedArgs3       []InkArg
}

func (ty WeteeTeeBridgePalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTEECallStarted {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallStartedClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallStartedCallId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTEECallSuccessed {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallSuccessedClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallSuccessedCallId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTEECallFailed {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallFailedClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallFailedCallId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallFailedError2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTEECallBackFailed {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallBackFailedClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallBackFailedCallId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTEECallBackFailedError2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInkCallSuccessed {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInkCallSuccessedWorkId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInkCallSuccessedContract1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInkCallSuccessedMethod2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInkCallSuccessedArgs3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTeeBridgePalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTEECallStarted = true
		err = decoder.Decode(&ty.AsTEECallStartedClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTEECallStartedCallId1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsTEECallSuccessed = true
		err = decoder.Decode(&ty.AsTEECallSuccessedClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTEECallSuccessedCallId1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTEECallFailed = true
		err = decoder.Decode(&ty.AsTEECallFailedClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTEECallFailedCallId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTEECallFailedError2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsTEECallBackFailed = true
		err = decoder.Decode(&ty.AsTEECallBackFailedClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTEECallBackFailedCallId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTEECallBackFailedError2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsInkCallSuccessed = true
		err = decoder.Decode(&ty.AsInkCallSuccessedWorkId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInkCallSuccessedContract1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInkCallSuccessedMethod2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInkCallSuccessedArgs3)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTeeBridgePalletEvent) Variant() (uint8, error) {
	if ty.IsTEECallStarted {
		return 0, nil
	}
	if ty.IsTEECallSuccessed {
		return 1, nil
	}
	if ty.IsTEECallFailed {
		return 2, nil
	}
	if ty.IsTEECallBackFailed {
		return 3, nil
	}
	if ty.IsInkCallSuccessed {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTeeBridgePalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsTEECallStarted {
		m := map[string]interface{}{"WeteeTeeBridgePalletEvent::TEECallStarted": map[string]interface{}{
			"AsTEECallStartedCallId1":    ty.AsTEECallStartedCallId1,
			"AsTEECallStartedClusterId0": ty.AsTEECallStartedClusterId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTEECallSuccessed {
		m := map[string]interface{}{"WeteeTeeBridgePalletEvent::TEECallSuccessed": map[string]interface{}{
			"AsTEECallSuccessedCallId1":    ty.AsTEECallSuccessedCallId1,
			"AsTEECallSuccessedClusterId0": ty.AsTEECallSuccessedClusterId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTEECallFailed {
		m := map[string]interface{}{"WeteeTeeBridgePalletEvent::TEECallFailed": map[string]interface{}{
			"AsTEECallFailedCallId1":    ty.AsTEECallFailedCallId1,
			"AsTEECallFailedClusterId0": ty.AsTEECallFailedClusterId0,
			"AsTEECallFailedError2":     ty.AsTEECallFailedError2,
		}}
		return json.Marshal(m)
	}
	if ty.IsTEECallBackFailed {
		m := map[string]interface{}{"WeteeTeeBridgePalletEvent::TEECallBackFailed": map[string]interface{}{
			"AsTEECallBackFailedCallId1":    ty.AsTEECallBackFailedCallId1,
			"AsTEECallBackFailedClusterId0": ty.AsTEECallBackFailedClusterId0,
			"AsTEECallBackFailedError2":     ty.AsTEECallBackFailedError2,
		}}
		return json.Marshal(m)
	}
	if ty.IsInkCallSuccessed {
		m := map[string]interface{}{"WeteeTeeBridgePalletEvent::InkCallSuccessed": map[string]interface{}{
			"AsInkCallSuccessedArgs3":     ty.AsInkCallSuccessedArgs3,
			"AsInkCallSuccessedContract1": ty.AsInkCallSuccessedContract1,
			"AsInkCallSuccessedMethod2":   ty.AsInkCallSuccessedMethod2,
			"AsInkCallSuccessedWorkId0":   ty.AsInkCallSuccessedWorkId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeMatrixPalletEvent with id=82
type WeteeMatrixPalletEvent struct {
	IsCreatedNode            bool
	AsCreatedNodeTAccountId0 [32]byte
	AsCreatedNodeU1281       types.U128
	IsSuccess                bool
}

func (ty WeteeMatrixPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreatedNode {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedNodeTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatedNodeU1281)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSuccess {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeMatrixPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsCreatedNode = true
		err = decoder.Decode(&ty.AsCreatedNodeTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatedNodeU1281)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSuccess = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeMatrixPalletEvent) Variant() (uint8, error) {
	if ty.IsCreatedNode {
		return 0, nil
	}
	if ty.IsSuccess {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeMatrixPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsCreatedNode {
		m := map[string]interface{}{"WeteeMatrixPalletEvent::CreatedNode": map[string]interface{}{
			"AsCreatedNodeTAccountId0": ty.AsCreatedNodeTAccountId0,
			"AsCreatedNodeU1281":       ty.AsCreatedNodeU1281,
		}}
		return json.Marshal(m)
	}
	if ty.IsSuccess {
		return json.Marshal("WeteeMatrixPalletEvent::Success")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeFairlanchPalletEvent with id=83
type WeteeFairlanchPalletEvent struct {
	IsStaking           bool
	AsStakingUser0      [32]byte
	AsStakingAssetId1   uint64
	AsStakingAmount2    types.U128
	IsUnStaking         bool
	AsUnStakingUser0    [32]byte
	AsUnStakingAssetId1 uint64
	AsUnStakingAmount2  types.U128
	IsNewEpoch          bool
	AsNewEpochEpoch0    types.U128
	AsNewEpochReward1   types.U128
}

func (ty WeteeFairlanchPalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsStaking {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStakingUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStakingAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStakingAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnStaking {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnStakingUser0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnStakingAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnStakingAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNewEpoch {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNewEpochEpoch0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNewEpochReward1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeFairlanchPalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsStaking = true
		err = decoder.Decode(&ty.AsStakingUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsStakingAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsStakingAmount2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsUnStaking = true
		err = decoder.Decode(&ty.AsUnStakingUser0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnStakingAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUnStakingAmount2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsNewEpoch = true
		err = decoder.Decode(&ty.AsNewEpochEpoch0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsNewEpochReward1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeFairlanchPalletEvent) Variant() (uint8, error) {
	if ty.IsStaking {
		return 0, nil
	}
	if ty.IsUnStaking {
		return 1, nil
	}
	if ty.IsNewEpoch {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeFairlanchPalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsStaking {
		m := map[string]interface{}{"WeteeFairlanchPalletEvent::Staking": map[string]interface{}{
			"AsStakingAmount2":  ty.AsStakingAmount2,
			"AsStakingAssetId1": ty.AsStakingAssetId1,
			"AsStakingUser0":    ty.AsStakingUser0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnStaking {
		m := map[string]interface{}{"WeteeFairlanchPalletEvent::UnStaking": map[string]interface{}{
			"AsUnStakingAmount2":  ty.AsUnStakingAmount2,
			"AsUnStakingAssetId1": ty.AsUnStakingAssetId1,
			"AsUnStakingUser0":    ty.AsUnStakingUser0,
		}}
		return json.Marshal(m)
	}
	if ty.IsNewEpoch {
		m := map[string]interface{}{"WeteeFairlanchPalletEvent::NewEpoch": map[string]interface{}{
			"AsNewEpochEpoch0":  ty.AsNewEpochEpoch0,
			"AsNewEpochReward1": ty.AsNewEpochReward1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeStorePalletEvent with id=84
type WeteeStorePalletEvent struct {
	IsAppCreated             bool
	AsAppCreatedTAccountId0  [32]byte
	AsAppCreatedU1281        types.U128
	IsGuildJoined            bool
	AsGuildJoinedWeAssetId0  uint64
	AsGuildJoinedU641        uint64
	AsGuildJoinedTAccountId2 [32]byte
}

func (ty WeteeStorePalletEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsAppCreated {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppCreatedTAccountId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppCreatedU1281)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGuildJoined {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinedWeAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinedU641)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinedTAccountId2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeStorePalletEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsAppCreated = true
		err = decoder.Decode(&ty.AsAppCreatedTAccountId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsAppCreatedU1281)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsGuildJoined = true
		err = decoder.Decode(&ty.AsGuildJoinedWeAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinedU641)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinedTAccountId2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeStorePalletEvent) Variant() (uint8, error) {
	if ty.IsAppCreated {
		return 0, nil
	}
	if ty.IsGuildJoined {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeStorePalletEvent) MarshalJSON() ([]byte, error) {
	if ty.IsAppCreated {
		m := map[string]interface{}{"WeteeStorePalletEvent::AppCreated": map[string]interface{}{
			"AsAppCreatedTAccountId0": ty.AsAppCreatedTAccountId0,
			"AsAppCreatedU1281":       ty.AsAppCreatedU1281,
		}}
		return json.Marshal(m)
	}
	if ty.IsGuildJoined {
		m := map[string]interface{}{"WeteeStorePalletEvent::GuildJoined": map[string]interface{}{
			"AsGuildJoinedTAccountId2": ty.AsGuildJoinedTAccountId2,
			"AsGuildJoinedU641":        ty.AsGuildJoinedU641,
			"AsGuildJoinedWeAssetId0":  ty.AsGuildJoinedWeAssetId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeRuntimeRuntimeEvent with id=21
type RuntimeEvent struct {
	IsSystem                   bool
	AsSystemField0             *FrameSystemPalletEvent
	IsGrandpa                  bool
	AsGrandpaField0            *PalletGrandpaPalletEvent
	IsBalances                 bool
	AsBalancesField0           *PalletBalancesPalletEvent
	IsTransactionPayment       bool
	AsTransactionPaymentField0 *PalletTransactionPaymentPalletEvent
	IsSudo                     bool
	AsSudoField0               *PalletSudoPalletEvent
	IsRevive                   bool
	AsReviveField0             *PalletRevivePalletEvent
	IsTokens                   bool
	AsTokensField0             *OrmlTokensModuleEvent
	IsWeMessageQueue           bool
	AsWeMessageQueueField0     *WeteeMessageQueuePalletEvent
	IsUtility                  bool
	AsUtilityField0            *PalletUtilityPalletEvent
	IsDao                      bool
	AsDaoField0                *WeteeDaoPalletEvent
	IsAsset                    bool
	AsAssetField0              *WeteeAssetsPalletEvent
	IsWeSudo                   bool
	AsWeSudoField0             *WeteeSudoPalletEvent
	IsGuild                    bool
	AsGuildField0              *WeteeGuildPalletEvent
	IsProject                  bool
	AsProjectField0            *WeteeProjectPalletEvent
	IsGov                      bool
	AsGovField0                *WeteeGovPalletEvent
	IsTreasury                 bool
	AsTreasuryField0           *WeteeTreasuryPalletEvent
	IsApp                      bool
	AsAppField0                *WeteeAppPalletEvent
	IsTask                     bool
	AsTaskField0               *WeteeTaskPalletEvent
	IsGpu                      bool
	AsGpuField0                *WeteeGpuPalletEvent
	IsWorker                   bool
	AsWorkerField0             *WeteeWorkerPalletEvent
	IsDSecret                  bool
	AsDSecretField0            *WeteeDsecretPalletEvent
	IsBridge                   bool
	AsBridgeField0             *WeteeTeeBridgePalletEvent
	IsMatrix                   bool
	AsMatrixField0             *WeteeMatrixPalletEvent
	IsFairlanch                bool
	AsFairlanchField0          *WeteeFairlanchPalletEvent
	IsStore                    bool
	AsStoreField0              *WeteeStorePalletEvent
}

func (ty RuntimeEvent) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSystem {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSystemField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGrandpa {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGrandpaField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalances {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalancesField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransactionPayment {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransactionPaymentField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudo {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRevive {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReviveField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTokens {
		err = encoder.PushByte(101)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTokensField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeMessageQueue {
		err = encoder.PushByte(103)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeMessageQueueField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUtility {
		err = encoder.PushByte(104)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUtilityField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDao {
		err = encoder.PushByte(105)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDaoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAsset {
		err = encoder.PushByte(106)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAssetField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeSudo {
		err = encoder.PushByte(107)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeSudoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGuild {
		err = encoder.PushByte(108)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProject {
		err = encoder.PushByte(109)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGov {
		err = encoder.PushByte(110)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGovField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTreasury {
		err = encoder.PushByte(111)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTreasuryField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsApp {
		err = encoder.PushByte(112)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTask {
		err = encoder.PushByte(113)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGpu {
		err = encoder.PushByte(114)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGpuField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorker {
		err = encoder.PushByte(115)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkerField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDSecret {
		err = encoder.PushByte(117)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDSecretField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBridge {
		err = encoder.PushByte(118)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBridgeField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMatrix {
		err = encoder.PushByte(119)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMatrixField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFairlanch {
		err = encoder.PushByte(120)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsFairlanchField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStore {
		err = encoder.PushByte(124)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStoreField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *RuntimeEvent) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSystem = true
		var tmp FrameSystemPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSystemField0 = &tmp
		return
	case 3:
		ty.IsGrandpa = true
		var tmp PalletGrandpaPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGrandpaField0 = &tmp
		return
	case 4:
		ty.IsBalances = true
		var tmp PalletBalancesPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsBalancesField0 = &tmp
		return
	case 5:
		ty.IsTransactionPayment = true
		var tmp PalletTransactionPaymentPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTransactionPaymentField0 = &tmp
		return
	case 6:
		ty.IsSudo = true
		var tmp PalletSudoPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudoField0 = &tmp
		return
	case 8:
		ty.IsRevive = true
		var tmp PalletRevivePalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsReviveField0 = &tmp
		return
	case 101:
		ty.IsTokens = true
		var tmp OrmlTokensModuleEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTokensField0 = &tmp
		return
	case 103:
		ty.IsWeMessageQueue = true
		var tmp WeteeMessageQueuePalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeMessageQueueField0 = &tmp
		return
	case 104:
		ty.IsUtility = true
		var tmp PalletUtilityPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsUtilityField0 = &tmp
		return
	case 105:
		ty.IsDao = true
		var tmp WeteeDaoPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsDaoField0 = &tmp
		return
	case 106:
		ty.IsAsset = true
		var tmp WeteeAssetsPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsAssetField0 = &tmp
		return
	case 107:
		ty.IsWeSudo = true
		var tmp WeteeSudoPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeSudoField0 = &tmp
		return
	case 108:
		ty.IsGuild = true
		var tmp WeteeGuildPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGuildField0 = &tmp
		return
	case 109:
		ty.IsProject = true
		var tmp WeteeProjectPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsProjectField0 = &tmp
		return
	case 110:
		ty.IsGov = true
		var tmp WeteeGovPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGovField0 = &tmp
		return
	case 111:
		ty.IsTreasury = true
		var tmp WeteeTreasuryPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTreasuryField0 = &tmp
		return
	case 112:
		ty.IsApp = true
		var tmp WeteeAppPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsAppField0 = &tmp
		return
	case 113:
		ty.IsTask = true
		var tmp WeteeTaskPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTaskField0 = &tmp
		return
	case 114:
		ty.IsGpu = true
		var tmp WeteeGpuPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGpuField0 = &tmp
		return
	case 115:
		ty.IsWorker = true
		var tmp WeteeWorkerPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWorkerField0 = &tmp
		return
	case 117:
		ty.IsDSecret = true
		var tmp WeteeDsecretPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsDSecretField0 = &tmp
		return
	case 118:
		ty.IsBridge = true
		var tmp WeteeTeeBridgePalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsBridgeField0 = &tmp
		return
	case 119:
		ty.IsMatrix = true
		var tmp WeteeMatrixPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsMatrixField0 = &tmp
		return
	case 120:
		ty.IsFairlanch = true
		var tmp WeteeFairlanchPalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsFairlanchField0 = &tmp
		return
	case 124:
		ty.IsStore = true
		var tmp WeteeStorePalletEvent
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsStoreField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *RuntimeEvent) Variant() (uint8, error) {
	if ty.IsSystem {
		return 0, nil
	}
	if ty.IsGrandpa {
		return 3, nil
	}
	if ty.IsBalances {
		return 4, nil
	}
	if ty.IsTransactionPayment {
		return 5, nil
	}
	if ty.IsSudo {
		return 6, nil
	}
	if ty.IsRevive {
		return 8, nil
	}
	if ty.IsTokens {
		return 101, nil
	}
	if ty.IsWeMessageQueue {
		return 103, nil
	}
	if ty.IsUtility {
		return 104, nil
	}
	if ty.IsDao {
		return 105, nil
	}
	if ty.IsAsset {
		return 106, nil
	}
	if ty.IsWeSudo {
		return 107, nil
	}
	if ty.IsGuild {
		return 108, nil
	}
	if ty.IsProject {
		return 109, nil
	}
	if ty.IsGov {
		return 110, nil
	}
	if ty.IsTreasury {
		return 111, nil
	}
	if ty.IsApp {
		return 112, nil
	}
	if ty.IsTask {
		return 113, nil
	}
	if ty.IsGpu {
		return 114, nil
	}
	if ty.IsWorker {
		return 115, nil
	}
	if ty.IsDSecret {
		return 117, nil
	}
	if ty.IsBridge {
		return 118, nil
	}
	if ty.IsMatrix {
		return 119, nil
	}
	if ty.IsFairlanch {
		return 120, nil
	}
	if ty.IsStore {
		return 124, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty RuntimeEvent) MarshalJSON() ([]byte, error) {
	if ty.IsSystem {
		m := map[string]interface{}{"RuntimeEvent::System": ty.AsSystemField0}
		return json.Marshal(m)
	}
	if ty.IsGrandpa {
		m := map[string]interface{}{"RuntimeEvent::Grandpa": ty.AsGrandpaField0}
		return json.Marshal(m)
	}
	if ty.IsBalances {
		m := map[string]interface{}{"RuntimeEvent::Balances": ty.AsBalancesField0}
		return json.Marshal(m)
	}
	if ty.IsTransactionPayment {
		m := map[string]interface{}{"RuntimeEvent::TransactionPayment": ty.AsTransactionPaymentField0}
		return json.Marshal(m)
	}
	if ty.IsSudo {
		m := map[string]interface{}{"RuntimeEvent::Sudo": ty.AsSudoField0}
		return json.Marshal(m)
	}
	if ty.IsRevive {
		m := map[string]interface{}{"RuntimeEvent::Revive": ty.AsReviveField0}
		return json.Marshal(m)
	}
	if ty.IsTokens {
		m := map[string]interface{}{"RuntimeEvent::Tokens": ty.AsTokensField0}
		return json.Marshal(m)
	}
	if ty.IsWeMessageQueue {
		m := map[string]interface{}{"RuntimeEvent::WeMessageQueue": ty.AsWeMessageQueueField0}
		return json.Marshal(m)
	}
	if ty.IsUtility {
		m := map[string]interface{}{"RuntimeEvent::Utility": ty.AsUtilityField0}
		return json.Marshal(m)
	}
	if ty.IsDao {
		m := map[string]interface{}{"RuntimeEvent::Dao": ty.AsDaoField0}
		return json.Marshal(m)
	}
	if ty.IsAsset {
		m := map[string]interface{}{"RuntimeEvent::Asset": ty.AsAssetField0}
		return json.Marshal(m)
	}
	if ty.IsWeSudo {
		m := map[string]interface{}{"RuntimeEvent::WeSudo": ty.AsWeSudoField0}
		return json.Marshal(m)
	}
	if ty.IsGuild {
		m := map[string]interface{}{"RuntimeEvent::Guild": ty.AsGuildField0}
		return json.Marshal(m)
	}
	if ty.IsProject {
		m := map[string]interface{}{"RuntimeEvent::Project": ty.AsProjectField0}
		return json.Marshal(m)
	}
	if ty.IsGov {
		m := map[string]interface{}{"RuntimeEvent::Gov": ty.AsGovField0}
		return json.Marshal(m)
	}
	if ty.IsTreasury {
		m := map[string]interface{}{"RuntimeEvent::Treasury": ty.AsTreasuryField0}
		return json.Marshal(m)
	}
	if ty.IsApp {
		m := map[string]interface{}{"RuntimeEvent::App": ty.AsAppField0}
		return json.Marshal(m)
	}
	if ty.IsTask {
		m := map[string]interface{}{"RuntimeEvent::Task": ty.AsTaskField0}
		return json.Marshal(m)
	}
	if ty.IsGpu {
		m := map[string]interface{}{"RuntimeEvent::Gpu": ty.AsGpuField0}
		return json.Marshal(m)
	}
	if ty.IsWorker {
		m := map[string]interface{}{"RuntimeEvent::Worker": ty.AsWorkerField0}
		return json.Marshal(m)
	}
	if ty.IsDSecret {
		m := map[string]interface{}{"RuntimeEvent::DSecret": ty.AsDSecretField0}
		return json.Marshal(m)
	}
	if ty.IsBridge {
		m := map[string]interface{}{"RuntimeEvent::Bridge": ty.AsBridgeField0}
		return json.Marshal(m)
	}
	if ty.IsMatrix {
		m := map[string]interface{}{"RuntimeEvent::Matrix": ty.AsMatrixField0}
		return json.Marshal(m)
	}
	if ty.IsFairlanch {
		m := map[string]interface{}{"RuntimeEvent::Fairlanch": ty.AsFairlanchField0}
		return json.Marshal(m)
	}
	if ty.IsStore {
		m := map[string]interface{}{"RuntimeEvent::Store": ty.AsStoreField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated frame_system_EventRecord with id={{false [20]}}
type EventRecord struct {
	// Field 0 with TypeId=85
	Phase Phase
	// Field 1 with TypeId=21
	Event RuntimeEvent
	// Field 2 with TypeId=46
	Topics [][32]byte
}

// Tuple type generated from metadata id 87
type TupleOfUint32Uint32 struct {
	Elem0 uint32
	Elem1 uint32
}

// Generated frame_system_LastRuntimeUpgradeInfo with id={{false [88]}}
type LastRuntimeUpgradeInfo struct {
	// Field 0 with TypeId=89
	SpecVersion types.UCompact
	// Field 1 with TypeId=90
	SpecName string
}

// Generated frame_system_CodeUpgradeAuthorization with id={{false [92]}}
type CodeUpgradeAuthorization struct {
	// Field 0 with TypeId=13
	CodeHash [32]byte
	// Field 1 with TypeId=8
	CheckVersion bool
}

// Tuple type generated from metadata id 95
type TupleOfByteSliceByteSlice struct {
	Elem0 []byte
	Elem1 []byte
}

// Generated FrameSystemPalletCall with id=93
type FrameSystemPalletCall struct {
	IsRemark                                 bool
	AsRemarkRemark0                          []byte
	IsSetHeapPages                           bool
	AsSetHeapPagesPages0                     uint64
	IsSetCode                                bool
	AsSetCodeCode0                           []byte
	IsSetCodeWithoutChecks                   bool
	AsSetCodeWithoutChecksCode0              []byte
	IsSetStorage                             bool
	AsSetStorageItems0                       []TupleOfByteSliceByteSlice
	IsKillStorage                            bool
	AsKillStorageKeys0                       [][]byte
	IsKillPrefix                             bool
	AsKillPrefixPrefix0                      []byte
	AsKillPrefixSubkeys1                     uint32
	IsRemarkWithEvent                        bool
	AsRemarkWithEventRemark0                 []byte
	IsAuthorizeUpgrade                       bool
	AsAuthorizeUpgradeCodeHash0              [32]byte
	IsAuthorizeUpgradeWithoutChecks          bool
	AsAuthorizeUpgradeWithoutChecksCodeHash0 [32]byte
	IsApplyAuthorizedUpgrade                 bool
	AsApplyAuthorizedUpgradeCode0            []byte
}

func (ty FrameSystemPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsRemark {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRemarkRemark0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetHeapPages {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetHeapPagesPages0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetCode {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetCodeCode0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetCodeWithoutChecks {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetCodeWithoutChecksCode0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetStorage {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetStorageItems0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsKillStorage {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKillStorageKeys0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsKillPrefix {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKillPrefixPrefix0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsKillPrefixSubkeys1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRemarkWithEvent {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRemarkWithEventRemark0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAuthorizeUpgrade {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAuthorizeUpgradeCodeHash0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAuthorizeUpgradeWithoutChecks {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAuthorizeUpgradeWithoutChecksCodeHash0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsApplyAuthorizedUpgrade {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsApplyAuthorizedUpgradeCode0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *FrameSystemPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsRemark = true
		err = decoder.Decode(&ty.AsRemarkRemark0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsSetHeapPages = true
		err = decoder.Decode(&ty.AsSetHeapPagesPages0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsSetCode = true
		err = decoder.Decode(&ty.AsSetCodeCode0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsSetCodeWithoutChecks = true
		err = decoder.Decode(&ty.AsSetCodeWithoutChecksCode0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsSetStorage = true
		err = decoder.Decode(&ty.AsSetStorageItems0)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsKillStorage = true
		err = decoder.Decode(&ty.AsKillStorageKeys0)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsKillPrefix = true
		err = decoder.Decode(&ty.AsKillPrefixPrefix0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsKillPrefixSubkeys1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsRemarkWithEvent = true
		err = decoder.Decode(&ty.AsRemarkWithEventRemark0)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsAuthorizeUpgrade = true
		err = decoder.Decode(&ty.AsAuthorizeUpgradeCodeHash0)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsAuthorizeUpgradeWithoutChecks = true
		err = decoder.Decode(&ty.AsAuthorizeUpgradeWithoutChecksCodeHash0)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsApplyAuthorizedUpgrade = true
		err = decoder.Decode(&ty.AsApplyAuthorizedUpgradeCode0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *FrameSystemPalletCall) Variant() (uint8, error) {
	if ty.IsRemark {
		return 0, nil
	}
	if ty.IsSetHeapPages {
		return 1, nil
	}
	if ty.IsSetCode {
		return 2, nil
	}
	if ty.IsSetCodeWithoutChecks {
		return 3, nil
	}
	if ty.IsSetStorage {
		return 4, nil
	}
	if ty.IsKillStorage {
		return 5, nil
	}
	if ty.IsKillPrefix {
		return 6, nil
	}
	if ty.IsRemarkWithEvent {
		return 7, nil
	}
	if ty.IsAuthorizeUpgrade {
		return 9, nil
	}
	if ty.IsAuthorizeUpgradeWithoutChecks {
		return 10, nil
	}
	if ty.IsApplyAuthorizedUpgrade {
		return 11, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty FrameSystemPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsRemark {
		m := map[string]interface{}{"FrameSystemPalletCall::remark": ty.AsRemarkRemark0}
		return json.Marshal(m)
	}
	if ty.IsSetHeapPages {
		m := map[string]interface{}{"FrameSystemPalletCall::set_heap_pages": ty.AsSetHeapPagesPages0}
		return json.Marshal(m)
	}
	if ty.IsSetCode {
		m := map[string]interface{}{"FrameSystemPalletCall::set_code": ty.AsSetCodeCode0}
		return json.Marshal(m)
	}
	if ty.IsSetCodeWithoutChecks {
		m := map[string]interface{}{"FrameSystemPalletCall::set_code_without_checks": ty.AsSetCodeWithoutChecksCode0}
		return json.Marshal(m)
	}
	if ty.IsSetStorage {
		m := map[string]interface{}{"FrameSystemPalletCall::set_storage": ty.AsSetStorageItems0}
		return json.Marshal(m)
	}
	if ty.IsKillStorage {
		m := map[string]interface{}{"FrameSystemPalletCall::kill_storage": ty.AsKillStorageKeys0}
		return json.Marshal(m)
	}
	if ty.IsKillPrefix {
		m := map[string]interface{}{"FrameSystemPalletCall::kill_prefix": map[string]interface{}{
			"AsKillPrefixPrefix0":  ty.AsKillPrefixPrefix0,
			"AsKillPrefixSubkeys1": ty.AsKillPrefixSubkeys1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRemarkWithEvent {
		m := map[string]interface{}{"FrameSystemPalletCall::remark_with_event": ty.AsRemarkWithEventRemark0}
		return json.Marshal(m)
	}
	if ty.IsAuthorizeUpgrade {
		m := map[string]interface{}{"FrameSystemPalletCall::authorize_upgrade": ty.AsAuthorizeUpgradeCodeHash0}
		return json.Marshal(m)
	}
	if ty.IsAuthorizeUpgradeWithoutChecks {
		m := map[string]interface{}{"FrameSystemPalletCall::authorize_upgrade_without_checks": ty.AsAuthorizeUpgradeWithoutChecksCodeHash0}
		return json.Marshal(m)
	}
	if ty.IsApplyAuthorizedUpgrade {
		m := map[string]interface{}{"FrameSystemPalletCall::apply_authorized_upgrade": ty.AsApplyAuthorizedUpgradeCode0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletTimestampPalletCall with id=109
type PalletTimestampPalletCall struct {
	IsSet     bool
	AsSetNow0 types.UCompact
}

func (ty PalletTimestampPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSet {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetNow0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletTimestampPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSet = true
		err = decoder.Decode(&ty.AsSetNow0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletTimestampPalletCall) Variant() (uint8, error) {
	if ty.IsSet {
		return 0, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletTimestampPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSet {
		m := map[string]interface{}{"PalletTimestampPalletCall::set": ty.AsSetNow0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated finality_grandpa_Prevote with id={{false [122]}}
type Prevote struct {
	// Field 0 with TypeId=13
	TargetHash [32]byte
	// Field 1 with TypeId=4
	TargetNumber uint32
}

// Tuple type generated from metadata id 124
type TupleOfPrevoteByteArray64 struct {
	Elem0 Prevote
	Elem1 [64]byte
}

// Generated finality_grandpa_Equivocation with id={{false [121]}}
type EquivocationIdByteArray32 struct {
	// Field 0 with TypeId=12
	RoundNumber uint64
	// Field 1 with TypeId=35
	Identity [32]byte
	// Field 2 with TypeId=124
	First TupleOfPrevoteByteArray64
	// Field 3 with TypeId=124
	Second TupleOfPrevoteByteArray64
}

// Generated finality_grandpa_Precommit with id={{false [126]}}
type Precommit struct {
	// Field 0 with TypeId=13
	TargetHash [32]byte
	// Field 1 with TypeId=4
	TargetNumber uint32
}

// Tuple type generated from metadata id 127
type TupleOfPrecommitByteArray64 struct {
	Elem0 Precommit
	Elem1 [64]byte
}

// Generated finality_grandpa_Equivocation with id={{false [125]}}
type EquivocationIdByteArray32VPrecommit struct {
	// Field 0 with TypeId=12
	RoundNumber uint64
	// Field 1 with TypeId=35
	Identity [32]byte
	// Field 2 with TypeId=127
	First TupleOfPrecommitByteArray64
	// Field 3 with TypeId=127
	Second TupleOfPrecommitByteArray64
}

// Generated SpConsensusGrandpaEquivocation with id=120
type Equivocation struct {
	IsPrevote         bool
	AsPrevoteField0   EquivocationIdByteArray32
	IsPrecommit       bool
	AsPrecommitField0 EquivocationIdByteArray32VPrecommit
}

func (ty Equivocation) Encode(encoder scale.Encoder) (err error) {
	if ty.IsPrevote {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPrevoteField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPrecommit {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPrecommitField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Equivocation) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsPrevote = true
		err = decoder.Decode(&ty.AsPrevoteField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsPrecommit = true
		err = decoder.Decode(&ty.AsPrecommitField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Equivocation) Variant() (uint8, error) {
	if ty.IsPrevote {
		return 0, nil
	}
	if ty.IsPrecommit {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Equivocation) MarshalJSON() ([]byte, error) {
	if ty.IsPrevote {
		m := map[string]interface{}{"Equivocation::Prevote": ty.AsPrevoteField0}
		return json.Marshal(m)
	}
	if ty.IsPrecommit {
		m := map[string]interface{}{"Equivocation::Precommit": ty.AsPrecommitField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated sp_consensus_grandpa_EquivocationProof with id={{false [119]}}
type EquivocationProof struct {
	// Field 0 with TypeId=12
	SetId uint64
	// Field 1 with TypeId=120
	Equivocation Equivocation
}

// Generated PalletGrandpaPalletCall with id=118
type PalletGrandpaPalletCall struct {
	IsReportEquivocation                           bool
	AsReportEquivocationEquivocationProof0         *EquivocationProof
	AsReportEquivocationKeyOwnerProof1             struct{}
	IsReportEquivocationUnsigned                   bool
	AsReportEquivocationUnsignedEquivocationProof0 *EquivocationProof
	AsReportEquivocationUnsignedKeyOwnerProof1     struct{}
	IsNoteStalled                                  bool
	AsNoteStalledDelay0                            uint32
	AsNoteStalledBestFinalizedBlockNumber1         uint32
}

func (ty PalletGrandpaPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsReportEquivocation {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportEquivocationEquivocationProof0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportEquivocationKeyOwnerProof1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReportEquivocationUnsigned {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportEquivocationUnsignedEquivocationProof0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportEquivocationUnsignedKeyOwnerProof1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNoteStalled {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNoteStalledDelay0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsNoteStalledBestFinalizedBlockNumber1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletGrandpaPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsReportEquivocation = true
		err = decoder.Decode(&ty.AsReportEquivocationEquivocationProof0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReportEquivocationKeyOwnerProof1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsReportEquivocationUnsigned = true
		err = decoder.Decode(&ty.AsReportEquivocationUnsignedEquivocationProof0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReportEquivocationUnsignedKeyOwnerProof1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsNoteStalled = true
		err = decoder.Decode(&ty.AsNoteStalledDelay0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsNoteStalledBestFinalizedBlockNumber1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletGrandpaPalletCall) Variant() (uint8, error) {
	if ty.IsReportEquivocation {
		return 0, nil
	}
	if ty.IsReportEquivocationUnsigned {
		return 1, nil
	}
	if ty.IsNoteStalled {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletGrandpaPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsReportEquivocation {
		m := map[string]interface{}{"PalletGrandpaPalletCall::report_equivocation": map[string]interface{}{
			"AsReportEquivocationEquivocationProof0": ty.AsReportEquivocationEquivocationProof0,
			"AsReportEquivocationKeyOwnerProof1":     ty.AsReportEquivocationKeyOwnerProof1,
		}}
		return json.Marshal(m)
	}
	if ty.IsReportEquivocationUnsigned {
		m := map[string]interface{}{"PalletGrandpaPalletCall::report_equivocation_unsigned": map[string]interface{}{
			"AsReportEquivocationUnsignedEquivocationProof0": ty.AsReportEquivocationUnsignedEquivocationProof0,
			"AsReportEquivocationUnsignedKeyOwnerProof1":     ty.AsReportEquivocationUnsignedKeyOwnerProof1,
		}}
		return json.Marshal(m)
	}
	if ty.IsNoteStalled {
		m := map[string]interface{}{"PalletGrandpaPalletCall::note_stalled": map[string]interface{}{
			"AsNoteStalledBestFinalizedBlockNumber1": ty.AsNoteStalledBestFinalizedBlockNumber1,
			"AsNoteStalledDelay0":                    ty.AsNoteStalledDelay0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated SpRuntimeMultiaddressMultiAddress with id=147
type MultiAddress struct {
	IsId              bool
	AsIdField0        [32]byte
	IsIndex           bool
	AsIndexField0     struct{}
	IsRaw             bool
	AsRawField0       []byte
	IsAddress32       bool
	AsAddress32Field0 [32]byte
	IsAddress20       bool
	AsAddress20Field0 [20]byte
}

func (ty MultiAddress) Encode(encoder scale.Encoder) (err error) {
	if ty.IsId {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIdField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIndex {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIndexField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRaw {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRawField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAddress32 {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAddress32Field0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAddress20 {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAddress20Field0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *MultiAddress) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsId = true
		err = decoder.Decode(&ty.AsIdField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsIndex = true
		err = decoder.Decode(&ty.AsIndexField0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsRaw = true
		err = decoder.Decode(&ty.AsRawField0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsAddress32 = true
		err = decoder.Decode(&ty.AsAddress32Field0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsAddress20 = true
		err = decoder.Decode(&ty.AsAddress20Field0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *MultiAddress) Variant() (uint8, error) {
	if ty.IsId {
		return 0, nil
	}
	if ty.IsIndex {
		return 1, nil
	}
	if ty.IsRaw {
		return 2, nil
	}
	if ty.IsAddress32 {
		return 3, nil
	}
	if ty.IsAddress20 {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty MultiAddress) MarshalJSON() ([]byte, error) {
	if ty.IsId {
		m := map[string]interface{}{"MultiAddress::Id": ty.AsIdField0}
		return json.Marshal(m)
	}
	if ty.IsIndex {
		m := map[string]interface{}{"MultiAddress::Index": ty.AsIndexField0}
		return json.Marshal(m)
	}
	if ty.IsRaw {
		m := map[string]interface{}{"MultiAddress::Raw": ty.AsRawField0}
		return json.Marshal(m)
	}
	if ty.IsAddress32 {
		m := map[string]interface{}{"MultiAddress::Address32": ty.AsAddress32Field0}
		return json.Marshal(m)
	}
	if ty.IsAddress20 {
		m := map[string]interface{}{"MultiAddress::Address20": ty.AsAddress20Field0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletBalancesTypesAdjustmentDirection with id=150
type AdjustmentDirection struct {
	IsIncrease bool
	IsDecrease bool
}

func (ty AdjustmentDirection) Encode(encoder scale.Encoder) (err error) {
	if ty.IsIncrease {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDecrease {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *AdjustmentDirection) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsIncrease = true
		return
	case 1:
		ty.IsDecrease = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *AdjustmentDirection) Variant() (uint8, error) {
	if ty.IsIncrease {
		return 0, nil
	}
	if ty.IsDecrease {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty AdjustmentDirection) MarshalJSON() ([]byte, error) {
	if ty.IsIncrease {
		return json.Marshal("AdjustmentDirection::Increase")
	}
	if ty.IsDecrease {
		return json.Marshal("AdjustmentDirection::Decrease")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletBalancesPalletCall with id=146
type PalletBalancesPalletCall struct {
	IsTransferAllowDeath                 bool
	AsTransferAllowDeathDest0            MultiAddress
	AsTransferAllowDeathValue1           types.UCompact
	IsForceTransfer                      bool
	AsForceTransferSource0               MultiAddress
	AsForceTransferDest1                 MultiAddress
	AsForceTransferValue2                types.UCompact
	IsTransferKeepAlive                  bool
	AsTransferKeepAliveDest0             MultiAddress
	AsTransferKeepAliveValue1            types.UCompact
	IsTransferAll                        bool
	AsTransferAllDest0                   MultiAddress
	AsTransferAllKeepAlive1              bool
	IsForceUnreserve                     bool
	AsForceUnreserveWho0                 MultiAddress
	AsForceUnreserveAmount1              types.U128
	IsUpgradeAccounts                    bool
	AsUpgradeAccountsWho0                [][32]byte
	IsForceSetBalance                    bool
	AsForceSetBalanceWho0                MultiAddress
	AsForceSetBalanceNewFree1            types.UCompact
	IsForceAdjustTotalIssuance           bool
	AsForceAdjustTotalIssuanceDirection0 AdjustmentDirection
	AsForceAdjustTotalIssuanceDelta1     types.UCompact
	IsBurn                               bool
	AsBurnValue0                         types.UCompact
	AsBurnKeepAlive1                     bool
}

func (ty PalletBalancesPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTransferAllowDeath {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllowDeathDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllowDeathValue1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceTransfer {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferSource0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferDest1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferValue2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransferKeepAlive {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveValue1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransferAll {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllKeepAlive1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceUnreserve {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceUnreserveWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceUnreserveAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpgradeAccounts {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpgradeAccountsWho0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceSetBalance {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceSetBalanceWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceSetBalanceNewFree1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceAdjustTotalIssuance {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceAdjustTotalIssuanceDirection0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceAdjustTotalIssuanceDelta1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBurn {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnValue0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnKeepAlive1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletBalancesPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTransferAllowDeath = true
		err = decoder.Decode(&ty.AsTransferAllowDeathDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAllowDeathValue1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsForceTransfer = true
		err = decoder.Decode(&ty.AsForceTransferSource0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferDest1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferValue2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsTransferKeepAlive = true
		err = decoder.Decode(&ty.AsTransferKeepAliveDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferKeepAliveValue1)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsTransferAll = true
		err = decoder.Decode(&ty.AsTransferAllDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAllKeepAlive1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsForceUnreserve = true
		err = decoder.Decode(&ty.AsForceUnreserveWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceUnreserveAmount1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsUpgradeAccounts = true
		err = decoder.Decode(&ty.AsUpgradeAccountsWho0)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsForceSetBalance = true
		err = decoder.Decode(&ty.AsForceSetBalanceWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceSetBalanceNewFree1)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsForceAdjustTotalIssuance = true
		err = decoder.Decode(&ty.AsForceAdjustTotalIssuanceDirection0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceAdjustTotalIssuanceDelta1)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsBurn = true
		err = decoder.Decode(&ty.AsBurnValue0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBurnKeepAlive1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletBalancesPalletCall) Variant() (uint8, error) {
	if ty.IsTransferAllowDeath {
		return 0, nil
	}
	if ty.IsForceTransfer {
		return 2, nil
	}
	if ty.IsTransferKeepAlive {
		return 3, nil
	}
	if ty.IsTransferAll {
		return 4, nil
	}
	if ty.IsForceUnreserve {
		return 5, nil
	}
	if ty.IsUpgradeAccounts {
		return 6, nil
	}
	if ty.IsForceSetBalance {
		return 8, nil
	}
	if ty.IsForceAdjustTotalIssuance {
		return 9, nil
	}
	if ty.IsBurn {
		return 10, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletBalancesPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsTransferAllowDeath {
		m := map[string]interface{}{"PalletBalancesPalletCall::transfer_allow_death": map[string]interface{}{
			"AsTransferAllowDeathDest0":  ty.AsTransferAllowDeathDest0,
			"AsTransferAllowDeathValue1": ty.AsTransferAllowDeathValue1,
		}}
		return json.Marshal(m)
	}
	if ty.IsForceTransfer {
		m := map[string]interface{}{"PalletBalancesPalletCall::force_transfer": map[string]interface{}{
			"AsForceTransferDest1":   ty.AsForceTransferDest1,
			"AsForceTransferSource0": ty.AsForceTransferSource0,
			"AsForceTransferValue2":  ty.AsForceTransferValue2,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransferKeepAlive {
		m := map[string]interface{}{"PalletBalancesPalletCall::transfer_keep_alive": map[string]interface{}{
			"AsTransferKeepAliveDest0":  ty.AsTransferKeepAliveDest0,
			"AsTransferKeepAliveValue1": ty.AsTransferKeepAliveValue1,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransferAll {
		m := map[string]interface{}{"PalletBalancesPalletCall::transfer_all": map[string]interface{}{
			"AsTransferAllDest0":      ty.AsTransferAllDest0,
			"AsTransferAllKeepAlive1": ty.AsTransferAllKeepAlive1,
		}}
		return json.Marshal(m)
	}
	if ty.IsForceUnreserve {
		m := map[string]interface{}{"PalletBalancesPalletCall::force_unreserve": map[string]interface{}{
			"AsForceUnreserveAmount1": ty.AsForceUnreserveAmount1,
			"AsForceUnreserveWho0":    ty.AsForceUnreserveWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpgradeAccounts {
		m := map[string]interface{}{"PalletBalancesPalletCall::upgrade_accounts": ty.AsUpgradeAccountsWho0}
		return json.Marshal(m)
	}
	if ty.IsForceSetBalance {
		m := map[string]interface{}{"PalletBalancesPalletCall::force_set_balance": map[string]interface{}{
			"AsForceSetBalanceNewFree1": ty.AsForceSetBalanceNewFree1,
			"AsForceSetBalanceWho0":     ty.AsForceSetBalanceWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsForceAdjustTotalIssuance {
		m := map[string]interface{}{"PalletBalancesPalletCall::force_adjust_total_issuance": map[string]interface{}{
			"AsForceAdjustTotalIssuanceDelta1":     ty.AsForceAdjustTotalIssuanceDelta1,
			"AsForceAdjustTotalIssuanceDirection0": ty.AsForceAdjustTotalIssuanceDirection0,
		}}
		return json.Marshal(m)
	}
	if ty.IsBurn {
		m := map[string]interface{}{"PalletBalancesPalletCall::burn": map[string]interface{}{
			"AsBurnKeepAlive1": ty.AsBurnKeepAlive1,
			"AsBurnValue0":     ty.AsBurnValue0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletSudoPalletCall with id=154
type PalletSudoPalletCall struct {
	IsSudo                       bool
	AsSudoCall0                  *RuntimeCall
	IsSudoUncheckedWeight        bool
	AsSudoUncheckedWeightCall0   *RuntimeCall
	AsSudoUncheckedWeightWeight1 Weight
	IsSetKey                     bool
	AsSetKeyNew0                 *MultiAddress
	IsSudoAs                     bool
	AsSudoAsWho0                 MultiAddress
	AsSudoAsCall1                *RuntimeCall
	IsRemoveKey                  bool
}

func (ty PalletSudoPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSudo {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoCall0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudoUncheckedWeight {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoUncheckedWeightCall0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoUncheckedWeightWeight1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetKey {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetKeyNew0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudoAs {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoAsWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoAsCall1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRemoveKey {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletSudoPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSudo = true
		var tmp RuntimeCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudoCall0 = &tmp
		return
	case 1:
		ty.IsSudoUncheckedWeight = true
		err = decoder.Decode(&ty.AsSudoUncheckedWeightCall0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSudoUncheckedWeightWeight1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsSetKey = true
		var tmp MultiAddress
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSetKeyNew0 = &tmp
		return
	case 3:
		ty.IsSudoAs = true
		err = decoder.Decode(&ty.AsSudoAsWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSudoAsCall1)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsRemoveKey = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletSudoPalletCall) Variant() (uint8, error) {
	if ty.IsSudo {
		return 0, nil
	}
	if ty.IsSudoUncheckedWeight {
		return 1, nil
	}
	if ty.IsSetKey {
		return 2, nil
	}
	if ty.IsSudoAs {
		return 3, nil
	}
	if ty.IsRemoveKey {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletSudoPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSudo {
		m := map[string]interface{}{"PalletSudoPalletCall::sudo": ty.AsSudoCall0}
		return json.Marshal(m)
	}
	if ty.IsSudoUncheckedWeight {
		m := map[string]interface{}{"PalletSudoPalletCall::sudo_unchecked_weight": map[string]interface{}{
			"AsSudoUncheckedWeightCall0":   ty.AsSudoUncheckedWeightCall0,
			"AsSudoUncheckedWeightWeight1": ty.AsSudoUncheckedWeightWeight1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetKey {
		m := map[string]interface{}{"PalletSudoPalletCall::set_key": ty.AsSetKeyNew0}
		return json.Marshal(m)
	}
	if ty.IsSudoAs {
		m := map[string]interface{}{"PalletSudoPalletCall::sudo_as": map[string]interface{}{
			"AsSudoAsCall1": ty.AsSudoAsCall1,
			"AsSudoAsWho0":  ty.AsSudoAsWho0,
		}}
		return json.Marshal(m)
	}
	if ty.IsRemoveKey {
		return json.Marshal("PalletSudoPalletCall::remove_key")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=157
type OptionTByteArray321 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 [32]byte
}

func (ty OptionTByteArray321) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTByteArray321) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTByteArray321) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTByteArray321) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTByteArray321::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTByteArray321::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletRevivePalletCall with id=156
type PalletRevivePalletCall struct {
	IsEthTransact                             bool
	AsEthTransactPayload0                     []byte
	IsCall                                    bool
	AsCallDest0                               [20]byte
	AsCallValue1                              types.UCompact
	AsCallGasLimit2                           Weight
	AsCallStorageDepositLimit3                types.UCompact
	AsCallData4                               []byte
	IsInstantiate                             bool
	AsInstantiateValue0                       types.UCompact
	AsInstantiateGasLimit1                    Weight
	AsInstantiateStorageDepositLimit2         types.UCompact
	AsInstantiateCodeHash3                    [32]byte
	AsInstantiateData4                        []byte
	AsInstantiateSalt5                        OptionTByteArray321
	IsInstantiateWithCode                     bool
	AsInstantiateWithCodeValue0               types.UCompact
	AsInstantiateWithCodeGasLimit1            Weight
	AsInstantiateWithCodeStorageDepositLimit2 types.UCompact
	AsInstantiateWithCodeCode3                []byte
	AsInstantiateWithCodeData4                []byte
	AsInstantiateWithCodeSalt5                OptionTByteArray321
	IsUploadCode                              bool
	AsUploadCodeCode0                         []byte
	AsUploadCodeStorageDepositLimit1          types.UCompact
	IsRemoveCode                              bool
	AsRemoveCodeCodeHash0                     [32]byte
	IsSetCode                                 bool
	AsSetCodeDest0                            [20]byte
	AsSetCodeCodeHash1                        [32]byte
	IsMapAccount                              bool
	IsUnmapAccount                            bool
	IsDispatchAsFallbackAccount               bool
	AsDispatchAsFallbackAccountCall0          *RuntimeCall
}

func (ty PalletRevivePalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsEthTransact {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEthTransactPayload0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCall {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallValue1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallGasLimit2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallStorageDepositLimit3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallData4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInstantiate {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateValue0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateGasLimit1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateStorageDepositLimit2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateCodeHash3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateData4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateSalt5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInstantiateWithCode {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateWithCodeValue0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateWithCodeGasLimit1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateWithCodeStorageDepositLimit2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateWithCodeCode3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateWithCodeData4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInstantiateWithCodeSalt5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUploadCode {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadCodeCode0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadCodeStorageDepositLimit1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRemoveCode {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRemoveCodeCodeHash0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetCode {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetCodeDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetCodeCodeHash1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMapAccount {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnmapAccount {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDispatchAsFallbackAccount {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDispatchAsFallbackAccountCall0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletRevivePalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsEthTransact = true
		err = decoder.Decode(&ty.AsEthTransactPayload0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsCall = true
		err = decoder.Decode(&ty.AsCallDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCallValue1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCallGasLimit2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCallStorageDepositLimit3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCallData4)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsInstantiate = true
		err = decoder.Decode(&ty.AsInstantiateValue0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateGasLimit1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateStorageDepositLimit2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateCodeHash3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateData4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateSalt5)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsInstantiateWithCode = true
		err = decoder.Decode(&ty.AsInstantiateWithCodeValue0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateWithCodeGasLimit1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateWithCodeStorageDepositLimit2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateWithCodeCode3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateWithCodeData4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInstantiateWithCodeSalt5)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsUploadCode = true
		err = decoder.Decode(&ty.AsUploadCodeCode0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUploadCodeStorageDepositLimit1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsRemoveCode = true
		err = decoder.Decode(&ty.AsRemoveCodeCodeHash0)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsSetCode = true
		err = decoder.Decode(&ty.AsSetCodeDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetCodeCodeHash1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsMapAccount = true
		return
	case 8:
		ty.IsUnmapAccount = true
		return
	case 9:
		ty.IsDispatchAsFallbackAccount = true
		var tmp RuntimeCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsDispatchAsFallbackAccountCall0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletRevivePalletCall) Variant() (uint8, error) {
	if ty.IsEthTransact {
		return 0, nil
	}
	if ty.IsCall {
		return 1, nil
	}
	if ty.IsInstantiate {
		return 2, nil
	}
	if ty.IsInstantiateWithCode {
		return 3, nil
	}
	if ty.IsUploadCode {
		return 4, nil
	}
	if ty.IsRemoveCode {
		return 5, nil
	}
	if ty.IsSetCode {
		return 6, nil
	}
	if ty.IsMapAccount {
		return 7, nil
	}
	if ty.IsUnmapAccount {
		return 8, nil
	}
	if ty.IsDispatchAsFallbackAccount {
		return 9, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletRevivePalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsEthTransact {
		m := map[string]interface{}{"PalletRevivePalletCall::eth_transact": ty.AsEthTransactPayload0}
		return json.Marshal(m)
	}
	if ty.IsCall {
		m := map[string]interface{}{"PalletRevivePalletCall::call": map[string]interface{}{
			"AsCallData4":                ty.AsCallData4,
			"AsCallDest0":                ty.AsCallDest0,
			"AsCallGasLimit2":            ty.AsCallGasLimit2,
			"AsCallStorageDepositLimit3": ty.AsCallStorageDepositLimit3,
			"AsCallValue1":               ty.AsCallValue1,
		}}
		return json.Marshal(m)
	}
	if ty.IsInstantiate {
		m := map[string]interface{}{"PalletRevivePalletCall::instantiate": map[string]interface{}{
			"AsInstantiateCodeHash3":            ty.AsInstantiateCodeHash3,
			"AsInstantiateData4":                ty.AsInstantiateData4,
			"AsInstantiateGasLimit1":            ty.AsInstantiateGasLimit1,
			"AsInstantiateSalt5":                ty.AsInstantiateSalt5,
			"AsInstantiateStorageDepositLimit2": ty.AsInstantiateStorageDepositLimit2,
			"AsInstantiateValue0":               ty.AsInstantiateValue0,
		}}
		return json.Marshal(m)
	}
	if ty.IsInstantiateWithCode {
		m := map[string]interface{}{"PalletRevivePalletCall::instantiate_with_code": map[string]interface{}{
			"AsInstantiateWithCodeCode3":                ty.AsInstantiateWithCodeCode3,
			"AsInstantiateWithCodeData4":                ty.AsInstantiateWithCodeData4,
			"AsInstantiateWithCodeGasLimit1":            ty.AsInstantiateWithCodeGasLimit1,
			"AsInstantiateWithCodeSalt5":                ty.AsInstantiateWithCodeSalt5,
			"AsInstantiateWithCodeStorageDepositLimit2": ty.AsInstantiateWithCodeStorageDepositLimit2,
			"AsInstantiateWithCodeValue0":               ty.AsInstantiateWithCodeValue0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUploadCode {
		m := map[string]interface{}{"PalletRevivePalletCall::upload_code": map[string]interface{}{
			"AsUploadCodeCode0":                ty.AsUploadCodeCode0,
			"AsUploadCodeStorageDepositLimit1": ty.AsUploadCodeStorageDepositLimit1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRemoveCode {
		m := map[string]interface{}{"PalletRevivePalletCall::remove_code": ty.AsRemoveCodeCodeHash0}
		return json.Marshal(m)
	}
	if ty.IsSetCode {
		m := map[string]interface{}{"PalletRevivePalletCall::set_code": map[string]interface{}{
			"AsSetCodeCodeHash1": ty.AsSetCodeCodeHash1,
			"AsSetCodeDest0":     ty.AsSetCodeDest0,
		}}
		return json.Marshal(m)
	}
	if ty.IsMapAccount {
		return json.Marshal("PalletRevivePalletCall::map_account")
	}
	if ty.IsUnmapAccount {
		return json.Marshal("PalletRevivePalletCall::unmap_account")
	}
	if ty.IsDispatchAsFallbackAccount {
		m := map[string]interface{}{"PalletRevivePalletCall::dispatch_as_fallback_account": ty.AsDispatchAsFallbackAccountCall0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated OrmlTokensModuleCall with id=158
type OrmlTokensModuleCall struct {
	IsTransfer                     bool
	AsTransferDest0                MultiAddress
	AsTransferCurrencyId1          uint64
	AsTransferAmount2              types.UCompact
	IsTransferAll                  bool
	AsTransferAllDest0             MultiAddress
	AsTransferAllCurrencyId1       uint64
	AsTransferAllKeepAlive2        bool
	IsTransferKeepAlive            bool
	AsTransferKeepAliveDest0       MultiAddress
	AsTransferKeepAliveCurrencyId1 uint64
	AsTransferKeepAliveAmount2     types.UCompact
	IsForceTransfer                bool
	AsForceTransferSource0         MultiAddress
	AsForceTransferDest1           MultiAddress
	AsForceTransferCurrencyId2     uint64
	AsForceTransferAmount3         types.UCompact
	IsSetBalance                   bool
	AsSetBalanceWho0               MultiAddress
	AsSetBalanceCurrencyId1        uint64
	AsSetBalanceNewFree2           types.UCompact
	AsSetBalanceNewReserved3       types.UCompact
}

func (ty OrmlTokensModuleCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTransfer {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransferAll {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAllKeepAlive2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransferKeepAlive {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferKeepAliveAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceTransfer {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferSource0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferDest1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferCurrencyId2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceTransferAmount3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetBalance {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceWho0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceCurrencyId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceNewFree2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBalanceNewReserved3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OrmlTokensModuleCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTransfer = true
		err = decoder.Decode(&ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsTransferAll = true
		err = decoder.Decode(&ty.AsTransferAllDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAllCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAllKeepAlive2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsTransferKeepAlive = true
		err = decoder.Decode(&ty.AsTransferKeepAliveDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferKeepAliveCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferKeepAliveAmount2)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsForceTransfer = true
		err = decoder.Decode(&ty.AsForceTransferSource0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferDest1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferCurrencyId2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsForceTransferAmount3)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsSetBalance = true
		err = decoder.Decode(&ty.AsSetBalanceWho0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetBalanceCurrencyId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetBalanceNewFree2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetBalanceNewReserved3)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OrmlTokensModuleCall) Variant() (uint8, error) {
	if ty.IsTransfer {
		return 0, nil
	}
	if ty.IsTransferAll {
		return 1, nil
	}
	if ty.IsTransferKeepAlive {
		return 2, nil
	}
	if ty.IsForceTransfer {
		return 3, nil
	}
	if ty.IsSetBalance {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OrmlTokensModuleCall) MarshalJSON() ([]byte, error) {
	if ty.IsTransfer {
		m := map[string]interface{}{"OrmlTokensModuleCall::transfer": map[string]interface{}{
			"AsTransferAmount2":     ty.AsTransferAmount2,
			"AsTransferCurrencyId1": ty.AsTransferCurrencyId1,
			"AsTransferDest0":       ty.AsTransferDest0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransferAll {
		m := map[string]interface{}{"OrmlTokensModuleCall::transfer_all": map[string]interface{}{
			"AsTransferAllCurrencyId1": ty.AsTransferAllCurrencyId1,
			"AsTransferAllDest0":       ty.AsTransferAllDest0,
			"AsTransferAllKeepAlive2":  ty.AsTransferAllKeepAlive2,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransferKeepAlive {
		m := map[string]interface{}{"OrmlTokensModuleCall::transfer_keep_alive": map[string]interface{}{
			"AsTransferKeepAliveAmount2":     ty.AsTransferKeepAliveAmount2,
			"AsTransferKeepAliveCurrencyId1": ty.AsTransferKeepAliveCurrencyId1,
			"AsTransferKeepAliveDest0":       ty.AsTransferKeepAliveDest0,
		}}
		return json.Marshal(m)
	}
	if ty.IsForceTransfer {
		m := map[string]interface{}{"OrmlTokensModuleCall::force_transfer": map[string]interface{}{
			"AsForceTransferAmount3":     ty.AsForceTransferAmount3,
			"AsForceTransferCurrencyId2": ty.AsForceTransferCurrencyId2,
			"AsForceTransferDest1":       ty.AsForceTransferDest1,
			"AsForceTransferSource0":     ty.AsForceTransferSource0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetBalance {
		m := map[string]interface{}{"OrmlTokensModuleCall::set_balance": map[string]interface{}{
			"AsSetBalanceCurrencyId1":  ty.AsSetBalanceCurrencyId1,
			"AsSetBalanceNewFree2":     ty.AsSetBalanceNewFree2,
			"AsSetBalanceNewReserved3": ty.AsSetBalanceNewReserved3,
			"AsSetBalanceWho0":         ty.AsSetBalanceWho0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeMessageQueuePalletCall with id=159
type WeteeMessageQueuePalletCall struct {
	IsReapPage                        bool
	AsReapPageMessageOrigin0          MessageOrigin
	AsReapPagePageIndex1              uint32
	IsExecuteOverweight               bool
	AsExecuteOverweightMessageOrigin0 MessageOrigin
	AsExecuteOverweightPage1          uint32
	AsExecuteOverweightIndex2         uint32
	AsExecuteOverweightWeightLimit3   Weight
}

func (ty WeteeMessageQueuePalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsReapPage {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReapPageMessageOrigin0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReapPagePageIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsExecuteOverweight {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExecuteOverweightMessageOrigin0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExecuteOverweightPage1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExecuteOverweightIndex2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsExecuteOverweightWeightLimit3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeMessageQueuePalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsReapPage = true
		err = decoder.Decode(&ty.AsReapPageMessageOrigin0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReapPagePageIndex1)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsExecuteOverweight = true
		err = decoder.Decode(&ty.AsExecuteOverweightMessageOrigin0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsExecuteOverweightPage1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsExecuteOverweightIndex2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsExecuteOverweightWeightLimit3)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeMessageQueuePalletCall) Variant() (uint8, error) {
	if ty.IsReapPage {
		return 0, nil
	}
	if ty.IsExecuteOverweight {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeMessageQueuePalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsReapPage {
		m := map[string]interface{}{"WeteeMessageQueuePalletCall::reap_page": map[string]interface{}{
			"AsReapPageMessageOrigin0": ty.AsReapPageMessageOrigin0,
			"AsReapPagePageIndex1":     ty.AsReapPagePageIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsExecuteOverweight {
		m := map[string]interface{}{"WeteeMessageQueuePalletCall::execute_overweight": map[string]interface{}{
			"AsExecuteOverweightIndex2":         ty.AsExecuteOverweightIndex2,
			"AsExecuteOverweightMessageOrigin0": ty.AsExecuteOverweightMessageOrigin0,
			"AsExecuteOverweightPage1":          ty.AsExecuteOverweightPage1,
			"AsExecuteOverweightWeightLimit3":   ty.AsExecuteOverweightWeightLimit3,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated FrameSupportDispatchRawOrigin with id=163
type RawOrigin struct {
	IsRoot         bool
	IsSigned       bool
	AsSignedField0 [32]byte
	IsNone         bool
}

func (ty RawOrigin) Encode(encoder scale.Encoder) (err error) {
	if ty.IsRoot {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSigned {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSignedField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNone {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *RawOrigin) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsRoot = true
		return
	case 1:
		ty.IsSigned = true
		err = decoder.Decode(&ty.AsSignedField0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsNone = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *RawOrigin) Variant() (uint8, error) {
	if ty.IsRoot {
		return 0, nil
	}
	if ty.IsSigned {
		return 1, nil
	}
	if ty.IsNone {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty RawOrigin) MarshalJSON() ([]byte, error) {
	if ty.IsRoot {
		return json.Marshal("RawOrigin::Root")
	}
	if ty.IsSigned {
		m := map[string]interface{}{"RawOrigin::Signed": ty.AsSignedField0}
		return json.Marshal(m)
	}
	if ty.IsNone {
		return json.Marshal("RawOrigin::None")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeRuntimeOriginCaller with id=162
type OriginCaller struct {
	IsSystem       bool
	AsSystemField0 *RawOrigin
}

func (ty OriginCaller) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSystem {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSystemField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OriginCaller) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSystem = true
		var tmp RawOrigin
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSystemField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OriginCaller) Variant() (uint8, error) {
	if ty.IsSystem {
		return 0, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OriginCaller) MarshalJSON() ([]byte, error) {
	if ty.IsSystem {
		m := map[string]interface{}{"OriginCaller::system": ty.AsSystemField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletUtilityPalletCall with id=160
type PalletUtilityPalletCall struct {
	IsBatch                       bool
	AsBatchCalls0                 []RuntimeCall
	IsAsDerivative                bool
	AsAsDerivativeIndex0          uint16
	AsAsDerivativeCall1           *RuntimeCall
	IsBatchAll                    bool
	AsBatchAllCalls0              []RuntimeCall
	IsDispatchAs                  bool
	AsDispatchAsAsOrigin0         *OriginCaller
	AsDispatchAsCall1             *RuntimeCall
	IsForceBatch                  bool
	AsForceBatchCalls0            []RuntimeCall
	IsWithWeight                  bool
	AsWithWeightCall0             *RuntimeCall
	AsWithWeightWeight1           Weight
	IsIfElse                      bool
	AsIfElseMain0                 *RuntimeCall
	AsIfElseFallback1             *RuntimeCall
	IsDispatchAsFallible          bool
	AsDispatchAsFallibleAsOrigin0 *OriginCaller
	AsDispatchAsFallibleCall1     *RuntimeCall
}

func (ty PalletUtilityPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsBatch {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBatchCalls0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAsDerivative {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAsDerivativeIndex0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAsDerivativeCall1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBatchAll {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBatchAllCalls0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDispatchAs {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDispatchAsAsOrigin0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDispatchAsCall1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsForceBatch {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsForceBatchCalls0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWithWeight {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithWeightCall0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWithWeightWeight1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsIfElse {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIfElseMain0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsIfElseFallback1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDispatchAsFallible {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDispatchAsFallibleAsOrigin0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDispatchAsFallibleCall1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PalletUtilityPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsBatch = true
		err = decoder.Decode(&ty.AsBatchCalls0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsAsDerivative = true
		err = decoder.Decode(&ty.AsAsDerivativeIndex0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsAsDerivativeCall1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsBatchAll = true
		err = decoder.Decode(&ty.AsBatchAllCalls0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsDispatchAs = true
		err = decoder.Decode(&ty.AsDispatchAsAsOrigin0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDispatchAsCall1)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsForceBatch = true
		err = decoder.Decode(&ty.AsForceBatchCalls0)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsWithWeight = true
		err = decoder.Decode(&ty.AsWithWeightCall0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWithWeightWeight1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsIfElse = true
		err = decoder.Decode(&ty.AsIfElseMain0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsIfElseFallback1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsDispatchAsFallible = true
		err = decoder.Decode(&ty.AsDispatchAsFallibleAsOrigin0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDispatchAsFallibleCall1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PalletUtilityPalletCall) Variant() (uint8, error) {
	if ty.IsBatch {
		return 0, nil
	}
	if ty.IsAsDerivative {
		return 1, nil
	}
	if ty.IsBatchAll {
		return 2, nil
	}
	if ty.IsDispatchAs {
		return 3, nil
	}
	if ty.IsForceBatch {
		return 4, nil
	}
	if ty.IsWithWeight {
		return 5, nil
	}
	if ty.IsIfElse {
		return 6, nil
	}
	if ty.IsDispatchAsFallible {
		return 7, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PalletUtilityPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsBatch {
		m := map[string]interface{}{"PalletUtilityPalletCall::batch": ty.AsBatchCalls0}
		return json.Marshal(m)
	}
	if ty.IsAsDerivative {
		m := map[string]interface{}{"PalletUtilityPalletCall::as_derivative": map[string]interface{}{
			"AsAsDerivativeCall1":  ty.AsAsDerivativeCall1,
			"AsAsDerivativeIndex0": ty.AsAsDerivativeIndex0,
		}}
		return json.Marshal(m)
	}
	if ty.IsBatchAll {
		m := map[string]interface{}{"PalletUtilityPalletCall::batch_all": ty.AsBatchAllCalls0}
		return json.Marshal(m)
	}
	if ty.IsDispatchAs {
		m := map[string]interface{}{"PalletUtilityPalletCall::dispatch_as": map[string]interface{}{
			"AsDispatchAsAsOrigin0": ty.AsDispatchAsAsOrigin0,
			"AsDispatchAsCall1":     ty.AsDispatchAsCall1,
		}}
		return json.Marshal(m)
	}
	if ty.IsForceBatch {
		m := map[string]interface{}{"PalletUtilityPalletCall::force_batch": ty.AsForceBatchCalls0}
		return json.Marshal(m)
	}
	if ty.IsWithWeight {
		m := map[string]interface{}{"PalletUtilityPalletCall::with_weight": map[string]interface{}{
			"AsWithWeightCall0":   ty.AsWithWeightCall0,
			"AsWithWeightWeight1": ty.AsWithWeightWeight1,
		}}
		return json.Marshal(m)
	}
	if ty.IsIfElse {
		m := map[string]interface{}{"PalletUtilityPalletCall::if_else": map[string]interface{}{
			"AsIfElseFallback1": ty.AsIfElseFallback1,
			"AsIfElseMain0":     ty.AsIfElseMain0,
		}}
		return json.Marshal(m)
	}
	if ty.IsDispatchAsFallible {
		m := map[string]interface{}{"PalletUtilityPalletCall::dispatch_as_fallible": map[string]interface{}{
			"AsDispatchAsFallibleAsOrigin0": ty.AsDispatchAsFallibleAsOrigin0,
			"AsDispatchAsFallibleCall1":     ty.AsDispatchAsFallibleCall1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=165
type OptionTByteSlice struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 []byte
}

func (ty OptionTByteSlice) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTByteSlice) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTByteSlice) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTByteSlice) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTByteSlice::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTByteSlice::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeDaoStatus with id=167
type Status struct {
	IsActive   bool
	IsInActive bool
}

func (ty Status) Encode(encoder scale.Encoder) (err error) {
	if ty.IsActive {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInActive {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Status) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsActive = true
		return
	case 1:
		ty.IsInActive = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Status) Variant() (uint8, error) {
	if ty.IsActive {
		return 0, nil
	}
	if ty.IsInActive {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Status) MarshalJSON() ([]byte, error) {
	if ty.IsActive {
		return json.Marshal("Status::Active")
	}
	if ty.IsInActive {
		return json.Marshal("Status::InActive")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=166
type OptionTStatus struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 *Status
}

func (ty OptionTStatus) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTStatus) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		var tmp Status
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSomeField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTStatus) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTStatus) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTStatus::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTStatus::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeDaoPalletCall with id=164
type WeteeDaoPalletCall struct {
	IsCreateDao                   bool
	AsCreateDaoName0              []byte
	AsCreateDaoDesc1              []byte
	AsCreateDaoPurpose2           []byte
	AsCreateDaoMetaData3          []byte
	IsInitAsset                   bool
	AsInitAssetDaoId0             uint64
	AsInitAssetSymbol1            []byte
	AsInitAssetDecimals2          byte
	AsInitAssetInitToken3         types.U128
	IsUpdateDao                   bool
	AsUpdateDaoDaoId0             uint64
	AsUpdateDaoName1              OptionTByteSlice
	AsUpdateDaoDesc2              OptionTByteSlice
	AsUpdateDaoPurpose3           OptionTByteSlice
	AsUpdateDaoMetaData4          OptionTByteSlice
	AsUpdateDaoStatus5            OptionTStatus
	IsCreateRoadmapTask           bool
	AsCreateRoadmapTaskDaoId0     uint64
	AsCreateRoadmapTaskRoadmapId1 uint32
	AsCreateRoadmapTaskName2      []byte
	AsCreateRoadmapTaskPriority3  byte
	AsCreateRoadmapTaskTags4      OptionTByteSlice
	IsUpdateRoadmapTask           bool
	AsUpdateRoadmapTaskDaoId0     uint64
	AsUpdateRoadmapTaskRoadmapId1 uint32
	AsUpdateRoadmapTaskTaskId2    uint64
	AsUpdateRoadmapTaskPriority3  byte
	AsUpdateRoadmapTaskStatus4    byte
	AsUpdateRoadmapTaskTags5      OptionTByteSlice
	IsCreateApp                   bool
	AsCreateAppName0              []byte
	AsCreateAppDesc1              []byte
	AsCreateAppIcon2              []byte
	AsCreateAppUrl3               []byte
	IsUpdateAppStatus             bool
	AsUpdateAppStatusAppId0       uint64
	AsUpdateAppStatusStatus1      Status
	IsOrgIntegrateApp             bool
	AsOrgIntegrateAppDaoId0       uint64
	AsOrgIntegrateAppAppId1       uint64
	IsUpdateOrgAppStatus          bool
	AsUpdateOrgAppStatusDaoId0    uint64
	AsUpdateOrgAppStatusAppId1    uint64
	AsUpdateOrgAppStatusStatus2   Status
}

func (ty WeteeDaoPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreateDao {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoDesc1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoPurpose2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDaoMetaData3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInitAsset {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInitAssetDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInitAssetSymbol1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInitAssetDecimals2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInitAssetInitToken3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateDao {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoDesc2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoPurpose3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoMetaData4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateDaoStatus5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateRoadmapTask {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskRoadmapId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskName2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskPriority3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateRoadmapTaskTags4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateRoadmapTask {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskRoadmapId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskTaskId2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskPriority3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskStatus4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateRoadmapTaskTags5)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateApp {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAppName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAppDesc1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAppIcon2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAppUrl3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateAppStatus {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateAppStatusAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateAppStatusStatus1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsOrgIntegrateApp {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOrgIntegrateAppDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOrgIntegrateAppAppId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateOrgAppStatus {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateOrgAppStatusDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateOrgAppStatusAppId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateOrgAppStatusStatus2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeDaoPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreateDao = true
		err = decoder.Decode(&ty.AsCreateDaoName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoDesc1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoPurpose2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDaoMetaData3)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsInitAsset = true
		err = decoder.Decode(&ty.AsInitAssetDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInitAssetSymbol1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInitAssetDecimals2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInitAssetInitToken3)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsUpdateDao = true
		err = decoder.Decode(&ty.AsUpdateDaoDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoDesc2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoPurpose3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoMetaData4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateDaoStatus5)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCreateRoadmapTask = true
		err = decoder.Decode(&ty.AsCreateRoadmapTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateRoadmapTaskRoadmapId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateRoadmapTaskName2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateRoadmapTaskPriority3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateRoadmapTaskTags4)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsUpdateRoadmapTask = true
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskRoadmapId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskTaskId2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskPriority3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskStatus4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateRoadmapTaskTags5)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsCreateApp = true
		err = decoder.Decode(&ty.AsCreateAppName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAppDesc1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAppIcon2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAppUrl3)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsUpdateAppStatus = true
		err = decoder.Decode(&ty.AsUpdateAppStatusAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateAppStatusStatus1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsOrgIntegrateApp = true
		err = decoder.Decode(&ty.AsOrgIntegrateAppDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsOrgIntegrateAppAppId1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsUpdateOrgAppStatus = true
		err = decoder.Decode(&ty.AsUpdateOrgAppStatusDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateOrgAppStatusAppId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateOrgAppStatusStatus2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeDaoPalletCall) Variant() (uint8, error) {
	if ty.IsCreateDao {
		return 1, nil
	}
	if ty.IsInitAsset {
		return 9, nil
	}
	if ty.IsUpdateDao {
		return 8, nil
	}
	if ty.IsCreateRoadmapTask {
		return 2, nil
	}
	if ty.IsUpdateRoadmapTask {
		return 3, nil
	}
	if ty.IsCreateApp {
		return 4, nil
	}
	if ty.IsUpdateAppStatus {
		return 5, nil
	}
	if ty.IsOrgIntegrateApp {
		return 6, nil
	}
	if ty.IsUpdateOrgAppStatus {
		return 7, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeDaoPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreateDao {
		m := map[string]interface{}{"WeteeDaoPalletCall::create_dao": map[string]interface{}{
			"AsCreateDaoDesc1":     ty.AsCreateDaoDesc1,
			"AsCreateDaoMetaData3": ty.AsCreateDaoMetaData3,
			"AsCreateDaoName0":     ty.AsCreateDaoName0,
			"AsCreateDaoPurpose2":  ty.AsCreateDaoPurpose2,
		}}
		return json.Marshal(m)
	}
	if ty.IsInitAsset {
		m := map[string]interface{}{"WeteeDaoPalletCall::init_asset": map[string]interface{}{
			"AsInitAssetDaoId0":     ty.AsInitAssetDaoId0,
			"AsInitAssetDecimals2":  ty.AsInitAssetDecimals2,
			"AsInitAssetInitToken3": ty.AsInitAssetInitToken3,
			"AsInitAssetSymbol1":    ty.AsInitAssetSymbol1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateDao {
		m := map[string]interface{}{"WeteeDaoPalletCall::update_dao": map[string]interface{}{
			"AsUpdateDaoDaoId0":    ty.AsUpdateDaoDaoId0,
			"AsUpdateDaoDesc2":     ty.AsUpdateDaoDesc2,
			"AsUpdateDaoMetaData4": ty.AsUpdateDaoMetaData4,
			"AsUpdateDaoName1":     ty.AsUpdateDaoName1,
			"AsUpdateDaoPurpose3":  ty.AsUpdateDaoPurpose3,
			"AsUpdateDaoStatus5":   ty.AsUpdateDaoStatus5,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateRoadmapTask {
		m := map[string]interface{}{"WeteeDaoPalletCall::create_roadmap_task": map[string]interface{}{
			"AsCreateRoadmapTaskDaoId0":     ty.AsCreateRoadmapTaskDaoId0,
			"AsCreateRoadmapTaskName2":      ty.AsCreateRoadmapTaskName2,
			"AsCreateRoadmapTaskPriority3":  ty.AsCreateRoadmapTaskPriority3,
			"AsCreateRoadmapTaskRoadmapId1": ty.AsCreateRoadmapTaskRoadmapId1,
			"AsCreateRoadmapTaskTags4":      ty.AsCreateRoadmapTaskTags4,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateRoadmapTask {
		m := map[string]interface{}{"WeteeDaoPalletCall::update_roadmap_task": map[string]interface{}{
			"AsUpdateRoadmapTaskDaoId0":     ty.AsUpdateRoadmapTaskDaoId0,
			"AsUpdateRoadmapTaskPriority3":  ty.AsUpdateRoadmapTaskPriority3,
			"AsUpdateRoadmapTaskRoadmapId1": ty.AsUpdateRoadmapTaskRoadmapId1,
			"AsUpdateRoadmapTaskStatus4":    ty.AsUpdateRoadmapTaskStatus4,
			"AsUpdateRoadmapTaskTags5":      ty.AsUpdateRoadmapTaskTags5,
			"AsUpdateRoadmapTaskTaskId2":    ty.AsUpdateRoadmapTaskTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateApp {
		m := map[string]interface{}{"WeteeDaoPalletCall::create_app": map[string]interface{}{
			"AsCreateAppDesc1": ty.AsCreateAppDesc1,
			"AsCreateAppIcon2": ty.AsCreateAppIcon2,
			"AsCreateAppName0": ty.AsCreateAppName0,
			"AsCreateAppUrl3":  ty.AsCreateAppUrl3,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateAppStatus {
		m := map[string]interface{}{"WeteeDaoPalletCall::update_app_status": map[string]interface{}{
			"AsUpdateAppStatusAppId0":  ty.AsUpdateAppStatusAppId0,
			"AsUpdateAppStatusStatus1": ty.AsUpdateAppStatusStatus1,
		}}
		return json.Marshal(m)
	}
	if ty.IsOrgIntegrateApp {
		m := map[string]interface{}{"WeteeDaoPalletCall::org_integrate_app": map[string]interface{}{
			"AsOrgIntegrateAppAppId1": ty.AsOrgIntegrateAppAppId1,
			"AsOrgIntegrateAppDaoId0": ty.AsOrgIntegrateAppDaoId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateOrgAppStatus {
		m := map[string]interface{}{"WeteeDaoPalletCall::update_org_app_status": map[string]interface{}{
			"AsUpdateOrgAppStatusAppId1":  ty.AsUpdateOrgAppStatusAppId1,
			"AsUpdateOrgAppStatusDaoId0":  ty.AsUpdateOrgAppStatusDaoId0,
			"AsUpdateOrgAppStatusStatus2": ty.AsUpdateOrgAppStatusStatus2,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeAssetsPalletCall with id=168
type WeteeAssetsPalletCall struct {
	IsCreateAsset                       bool
	AsCreateAssetMetadata0              AssetMeta
	AsCreateAssetInitAmount1            types.U128
	IsDeleteAsset                       bool
	AsDeleteAssetAssetId0               uint64
	IsBurn                              bool
	AsBurnAssetId0                      uint64
	AsBurnAmount1                       types.U128
	IsTransfer                          bool
	AsTransferDest0                     MultiAddress
	AsTransferAssetId1                  uint64
	AsTransferAmount2                   types.UCompact
	IsParachainAssetRegister            bool
	AsParachainAssetRegisterParaId0     uint32
	AsParachainAssetRegisterGeneralKey1 []byte
	AsParachainAssetRegisterMetadata2   AssetMeta
	IsSetChainId                        bool
	AsSetChainIdParaId0                 uint32
	IsDeleteParachainForAsset           bool
	AsDeleteParachainForAssetAssetId0   uint64
	AsDeleteParachainForAssetParaId1    uint32
	IsSetParachainForAsset              bool
	AsSetParachainForAssetAssetId0      uint64
	AsSetParachainForAssetParaId1       uint32
	AsSetParachainForAssetGeneralKey2   []byte
}

func (ty WeteeAssetsPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreateAsset {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetMetadata0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateAssetInitAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeleteAsset {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDeleteAssetAssetId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBurn {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBurnAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTransfer {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsParachainAssetRegister {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsParachainAssetRegisterParaId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsParachainAssetRegisterGeneralKey1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsParachainAssetRegisterMetadata2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetChainId {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetChainIdParaId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeleteParachainForAsset {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDeleteParachainForAssetAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDeleteParachainForAssetParaId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetParachainForAsset {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetParachainForAssetAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetParachainForAssetParaId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetParachainForAssetGeneralKey2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeAssetsPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreateAsset = true
		err = decoder.Decode(&ty.AsCreateAssetMetadata0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateAssetInitAmount1)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsDeleteAsset = true
		err = decoder.Decode(&ty.AsDeleteAssetAssetId0)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsBurn = true
		err = decoder.Decode(&ty.AsBurnAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsBurnAmount1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsTransfer = true
		err = decoder.Decode(&ty.AsTransferDest0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTransferAmount2)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsParachainAssetRegister = true
		err = decoder.Decode(&ty.AsParachainAssetRegisterParaId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsParachainAssetRegisterGeneralKey1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsParachainAssetRegisterMetadata2)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsSetChainId = true
		err = decoder.Decode(&ty.AsSetChainIdParaId0)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsDeleteParachainForAsset = true
		err = decoder.Decode(&ty.AsDeleteParachainForAssetAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDeleteParachainForAssetParaId1)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsSetParachainForAsset = true
		err = decoder.Decode(&ty.AsSetParachainForAssetAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetParachainForAssetParaId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetParachainForAssetGeneralKey2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeAssetsPalletCall) Variant() (uint8, error) {
	if ty.IsCreateAsset {
		return 1, nil
	}
	if ty.IsDeleteAsset {
		return 10, nil
	}
	if ty.IsBurn {
		return 5, nil
	}
	if ty.IsTransfer {
		return 6, nil
	}
	if ty.IsParachainAssetRegister {
		return 7, nil
	}
	if ty.IsSetChainId {
		return 8, nil
	}
	if ty.IsDeleteParachainForAsset {
		return 9, nil
	}
	if ty.IsSetParachainForAsset {
		return 11, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeAssetsPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreateAsset {
		m := map[string]interface{}{"WeteeAssetsPalletCall::create_asset": map[string]interface{}{
			"AsCreateAssetInitAmount1": ty.AsCreateAssetInitAmount1,
			"AsCreateAssetMetadata0":   ty.AsCreateAssetMetadata0,
		}}
		return json.Marshal(m)
	}
	if ty.IsDeleteAsset {
		m := map[string]interface{}{"WeteeAssetsPalletCall::delete_asset": ty.AsDeleteAssetAssetId0}
		return json.Marshal(m)
	}
	if ty.IsBurn {
		m := map[string]interface{}{"WeteeAssetsPalletCall::burn": map[string]interface{}{
			"AsBurnAmount1":  ty.AsBurnAmount1,
			"AsBurnAssetId0": ty.AsBurnAssetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsTransfer {
		m := map[string]interface{}{"WeteeAssetsPalletCall::transfer": map[string]interface{}{
			"AsTransferAmount2":  ty.AsTransferAmount2,
			"AsTransferAssetId1": ty.AsTransferAssetId1,
			"AsTransferDest0":    ty.AsTransferDest0,
		}}
		return json.Marshal(m)
	}
	if ty.IsParachainAssetRegister {
		m := map[string]interface{}{"WeteeAssetsPalletCall::parachain_asset_register": map[string]interface{}{
			"AsParachainAssetRegisterGeneralKey1": ty.AsParachainAssetRegisterGeneralKey1,
			"AsParachainAssetRegisterMetadata2":   ty.AsParachainAssetRegisterMetadata2,
			"AsParachainAssetRegisterParaId0":     ty.AsParachainAssetRegisterParaId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetChainId {
		m := map[string]interface{}{"WeteeAssetsPalletCall::set_chain_id": ty.AsSetChainIdParaId0}
		return json.Marshal(m)
	}
	if ty.IsDeleteParachainForAsset {
		m := map[string]interface{}{"WeteeAssetsPalletCall::delete_parachain_for_asset": map[string]interface{}{
			"AsDeleteParachainForAssetAssetId0": ty.AsDeleteParachainForAssetAssetId0,
			"AsDeleteParachainForAssetParaId1":  ty.AsDeleteParachainForAssetParaId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetParachainForAsset {
		m := map[string]interface{}{"WeteeAssetsPalletCall::set_parachain_for_asset": map[string]interface{}{
			"AsSetParachainForAssetAssetId0":    ty.AsSetParachainForAssetAssetId0,
			"AsSetParachainForAssetGeneralKey2": ty.AsSetParachainForAssetGeneralKey2,
			"AsSetParachainForAssetParaId1":     ty.AsSetParachainForAssetParaId1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeSudoPalletCall with id=170
type WeteeSudoPalletCall struct {
	IsSudo                       bool
	AsSudoDaoId0                 uint64
	AsSudoCall1                  *RuntimeCall
	IsSetSudoAccount             bool
	AsSetSudoAccountDaoId0       uint64
	AsSetSudoAccountSudoAccount1 [32]byte
	IsCloseSudo                  bool
	AsCloseSudoDaoId0            uint64
}

func (ty WeteeSudoPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSudo {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoCall1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetSudoAccount {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSudoAccountDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetSudoAccountSudoAccount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCloseSudo {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCloseSudoDaoId0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeSudoPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsSudo = true
		err = decoder.Decode(&ty.AsSudoDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSudoCall1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsSetSudoAccount = true
		err = decoder.Decode(&ty.AsSetSudoAccountDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetSudoAccountSudoAccount1)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsCloseSudo = true
		err = decoder.Decode(&ty.AsCloseSudoDaoId0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeSudoPalletCall) Variant() (uint8, error) {
	if ty.IsSudo {
		return 1, nil
	}
	if ty.IsSetSudoAccount {
		return 2, nil
	}
	if ty.IsCloseSudo {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeSudoPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSudo {
		m := map[string]interface{}{"WeteeSudoPalletCall::sudo": map[string]interface{}{
			"AsSudoCall1":  ty.AsSudoCall1,
			"AsSudoDaoId0": ty.AsSudoDaoId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetSudoAccount {
		m := map[string]interface{}{"WeteeSudoPalletCall::set_sudo_account": map[string]interface{}{
			"AsSetSudoAccountDaoId0":       ty.AsSetSudoAccountDaoId0,
			"AsSetSudoAccountSudoAccount1": ty.AsSetSudoAccountSudoAccount1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCloseSudo {
		m := map[string]interface{}{"WeteeSudoPalletCall::close_sudo": ty.AsCloseSudoDaoId0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGuildPalletCall with id=171
type WeteeGuildPalletCall struct {
	IsGuildJoin            bool
	AsGuildJoinDaoId0      uint64
	AsGuildJoinGuildId1    uint64
	AsGuildJoinWho2        [32]byte
	IsCreateGuild          bool
	AsCreateGuildDaoId0    uint64
	AsCreateGuildName1     []byte
	AsCreateGuildDesc2     []byte
	AsCreateGuildMetaData3 []byte
	AsCreateGuildCreator4  [32]byte
}

func (ty WeteeGuildPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsGuildJoin {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinGuildId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildJoinWho2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateGuild {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildDesc2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildMetaData3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGuildCreator4)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGuildPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsGuildJoin = true
		err = decoder.Decode(&ty.AsGuildJoinDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinGuildId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsGuildJoinWho2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCreateGuild = true
		err = decoder.Decode(&ty.AsCreateGuildDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateGuildName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateGuildDesc2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateGuildMetaData3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateGuildCreator4)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGuildPalletCall) Variant() (uint8, error) {
	if ty.IsGuildJoin {
		return 1, nil
	}
	if ty.IsCreateGuild {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGuildPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsGuildJoin {
		m := map[string]interface{}{"WeteeGuildPalletCall::guild_join": map[string]interface{}{
			"AsGuildJoinDaoId0":   ty.AsGuildJoinDaoId0,
			"AsGuildJoinGuildId1": ty.AsGuildJoinGuildId1,
			"AsGuildJoinWho2":     ty.AsGuildJoinWho2,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateGuild {
		m := map[string]interface{}{"WeteeGuildPalletCall::create_guild": map[string]interface{}{
			"AsCreateGuildCreator4":  ty.AsCreateGuildCreator4,
			"AsCreateGuildDaoId0":    ty.AsCreateGuildDaoId0,
			"AsCreateGuildDesc2":     ty.AsCreateGuildDesc2,
			"AsCreateGuildMetaData3": ty.AsCreateGuildMetaData3,
			"AsCreateGuildName1":     ty.AsCreateGuildName1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=173
type OptionTByte struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 byte
}

func (ty OptionTByte) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTByte) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTByte) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTByte) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTByte::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTByte::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=174
type OptionTByteArray32Slice struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 [][32]byte
}

func (ty OptionTByteArray32Slice) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTByteArray32Slice) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTByteArray32Slice) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTByteArray32Slice) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTByteArray32Slice::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTByteArray32Slice::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeProjectReviewOpinion with id=175
type ReviewOpinion struct {
	IsYES bool
	IsNO  bool
}

func (ty ReviewOpinion) Encode(encoder scale.Encoder) (err error) {
	if ty.IsYES {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNO {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *ReviewOpinion) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsYES = true
		return
	case 1:
		ty.IsNO = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *ReviewOpinion) Variant() (uint8, error) {
	if ty.IsYES {
		return 0, nil
	}
	if ty.IsNO {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty ReviewOpinion) MarshalJSON() ([]byte, error) {
	if ty.IsYES {
		return json.Marshal("ReviewOpinion::YES")
	}
	if ty.IsNO {
		return json.Marshal("ReviewOpinion::NO")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeProjectPalletCall with id=172
type WeteeProjectPalletCall struct {
	IsProjectJoinRequest             bool
	AsProjectJoinRequestDaoId0       uint64
	AsProjectJoinRequestProjectId1   uint64
	AsProjectJoinRequestWho2         [32]byte
	IsCreateProject                  bool
	AsCreateProjectDaoId0            uint64
	AsCreateProjectName1             []byte
	AsCreateProjectDescription2      []byte
	AsCreateProjectCreator3          [32]byte
	IsApplyProjectFunds              bool
	AsApplyProjectFundsDaoId0        uint64
	AsApplyProjectFundsProjectId1    uint64
	AsApplyProjectFundsAmount2       types.U128
	IsCreateTask                     bool
	AsCreateTaskDaoId0               uint64
	AsCreateTaskProjectId1           uint64
	AsCreateTaskName2                []byte
	AsCreateTaskDescription3         []byte
	AsCreateTaskPoint4               uint16
	AsCreateTaskPriority5            byte
	AsCreateTaskMaxAssignee6         OptionTByte
	AsCreateTaskSkills7              OptionTByteSlice
	AsCreateTaskAssignees8           OptionTByteArray32Slice
	AsCreateTaskReviewers9           OptionTByteArray32Slice
	AsCreateTaskAmount10             types.U128
	IsJoinTask                       bool
	AsJoinTaskDaoId0                 uint64
	AsJoinTaskProjectId1             uint64
	AsJoinTaskTaskId2                uint64
	IsLeaveTask                      bool
	AsLeaveTaskDaoId0                uint64
	AsLeaveTaskProjectId1            uint64
	AsLeaveTaskTaskId2               uint64
	IsJoinTaskReview                 bool
	AsJoinTaskReviewDaoId0           uint64
	AsJoinTaskReviewProjectId1       uint64
	AsJoinTaskReviewTaskId2          uint64
	IsLeaveTaskReview                bool
	AsLeaveTaskReviewDaoId0          uint64
	AsLeaveTaskReviewProjectId1      uint64
	AsLeaveTaskReviewTaskId2         uint64
	IsStartTask                      bool
	AsStartTaskDaoId0                uint64
	AsStartTaskProjectId1            uint64
	AsStartTaskTaskId2               uint64
	IsRequestReview                  bool
	AsRequestReviewDaoId0            uint64
	AsRequestReviewProjectId1        uint64
	AsRequestReviewTaskId2           uint64
	IsTaskDone                       bool
	AsTaskDoneDaoId0                 uint64
	AsTaskDoneProjectId1             uint64
	AsTaskDoneTaskId2                uint64
	IsMakeReview                     bool
	AsMakeReviewDaoId0               uint64
	AsMakeReviewProjectId1           uint64
	AsMakeReviewTaskId2              uint64
	AsMakeReviewOpinion3             ReviewOpinion
	AsMakeReviewMeta4                []byte
	IsCreateProxyProject             bool
	AsCreateProxyProjectName0        []byte
	AsCreateProxyProjectDescription1 []byte
	AsCreateProxyProjectDeposit2     types.UCompact
	IsProxyCall                      bool
	AsProxyCallProjectId0            uint64
	AsProxyCallCall1                 *RuntimeCall
}

func (ty WeteeProjectPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsProjectJoinRequest {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinRequestDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinRequestProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectJoinRequestWho2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateProject {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProjectDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProjectName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProjectDescription2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProjectCreator3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsApplyProjectFunds {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsApplyProjectFundsDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsApplyProjectFundsProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsApplyProjectFundsAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateTask {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskName2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskDescription3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskPoint4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskPriority5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskMaxAssignee6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskSkills7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskAssignees8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskReviewers9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTaskAmount10)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsJoinTask {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLeaveTask {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsJoinTaskReview {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskReviewDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsJoinTaskReviewTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsLeaveTaskReview {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskReviewDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsLeaveTaskReviewTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStartTask {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTaskDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTaskProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStartTaskTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRequestReview {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRequestReviewDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRequestReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRequestReviewTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTaskDone {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskDoneDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskDoneProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskDoneTaskId2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMakeReview {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewProjectId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewTaskId2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewOpinion3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMakeReviewMeta4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCreateProxyProject {
		err = encoder.PushByte(13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProxyProjectName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProxyProjectDescription1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateProxyProjectDeposit2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProxyCall {
		err = encoder.PushByte(14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProxyCallProjectId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProxyCallCall1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeProjectPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsProjectJoinRequest = true
		err = decoder.Decode(&ty.AsProjectJoinRequestDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectJoinRequestProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProjectJoinRequestWho2)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCreateProject = true
		err = decoder.Decode(&ty.AsCreateProjectDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateProjectName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateProjectDescription2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateProjectCreator3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsApplyProjectFunds = true
		err = decoder.Decode(&ty.AsApplyProjectFundsDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsApplyProjectFundsProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsApplyProjectFundsAmount2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsCreateTask = true
		err = decoder.Decode(&ty.AsCreateTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskName2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskDescription3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskPoint4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskPriority5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskMaxAssignee6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskSkills7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskAssignees8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskReviewers9)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTaskAmount10)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsJoinTask = true
		err = decoder.Decode(&ty.AsJoinTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinTaskProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinTaskTaskId2)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsLeaveTask = true
		err = decoder.Decode(&ty.AsLeaveTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLeaveTaskProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLeaveTaskTaskId2)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsJoinTaskReview = true
		err = decoder.Decode(&ty.AsJoinTaskReviewDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinTaskReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsJoinTaskReviewTaskId2)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsLeaveTaskReview = true
		err = decoder.Decode(&ty.AsLeaveTaskReviewDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLeaveTaskReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsLeaveTaskReviewTaskId2)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsStartTask = true
		err = decoder.Decode(&ty.AsStartTaskDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsStartTaskProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsStartTaskTaskId2)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsRequestReview = true
		err = decoder.Decode(&ty.AsRequestReviewDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRequestReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRequestReviewTaskId2)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsTaskDone = true
		err = decoder.Decode(&ty.AsTaskDoneDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskDoneProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTaskDoneTaskId2)
		if err != nil {
			return err
		}
		return
	case 12:
		ty.IsMakeReview = true
		err = decoder.Decode(&ty.AsMakeReviewDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMakeReviewProjectId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMakeReviewTaskId2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMakeReviewOpinion3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsMakeReviewMeta4)
		if err != nil {
			return err
		}
		return
	case 13:
		ty.IsCreateProxyProject = true
		err = decoder.Decode(&ty.AsCreateProxyProjectName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateProxyProjectDescription1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateProxyProjectDeposit2)
		if err != nil {
			return err
		}
		return
	case 14:
		ty.IsProxyCall = true
		err = decoder.Decode(&ty.AsProxyCallProjectId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsProxyCallCall1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeProjectPalletCall) Variant() (uint8, error) {
	if ty.IsProjectJoinRequest {
		return 1, nil
	}
	if ty.IsCreateProject {
		return 2, nil
	}
	if ty.IsApplyProjectFunds {
		return 3, nil
	}
	if ty.IsCreateTask {
		return 4, nil
	}
	if ty.IsJoinTask {
		return 5, nil
	}
	if ty.IsLeaveTask {
		return 6, nil
	}
	if ty.IsJoinTaskReview {
		return 7, nil
	}
	if ty.IsLeaveTaskReview {
		return 8, nil
	}
	if ty.IsStartTask {
		return 9, nil
	}
	if ty.IsRequestReview {
		return 10, nil
	}
	if ty.IsTaskDone {
		return 11, nil
	}
	if ty.IsMakeReview {
		return 12, nil
	}
	if ty.IsCreateProxyProject {
		return 13, nil
	}
	if ty.IsProxyCall {
		return 14, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeProjectPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsProjectJoinRequest {
		m := map[string]interface{}{"WeteeProjectPalletCall::project_join_request": map[string]interface{}{
			"AsProjectJoinRequestDaoId0":     ty.AsProjectJoinRequestDaoId0,
			"AsProjectJoinRequestProjectId1": ty.AsProjectJoinRequestProjectId1,
			"AsProjectJoinRequestWho2":       ty.AsProjectJoinRequestWho2,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateProject {
		m := map[string]interface{}{"WeteeProjectPalletCall::create_project": map[string]interface{}{
			"AsCreateProjectCreator3":     ty.AsCreateProjectCreator3,
			"AsCreateProjectDaoId0":       ty.AsCreateProjectDaoId0,
			"AsCreateProjectDescription2": ty.AsCreateProjectDescription2,
			"AsCreateProjectName1":        ty.AsCreateProjectName1,
		}}
		return json.Marshal(m)
	}
	if ty.IsApplyProjectFunds {
		m := map[string]interface{}{"WeteeProjectPalletCall::apply_project_funds": map[string]interface{}{
			"AsApplyProjectFundsAmount2":    ty.AsApplyProjectFundsAmount2,
			"AsApplyProjectFundsDaoId0":     ty.AsApplyProjectFundsDaoId0,
			"AsApplyProjectFundsProjectId1": ty.AsApplyProjectFundsProjectId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateTask {
		m := map[string]interface{}{"WeteeProjectPalletCall::create_task": map[string]interface{}{
			"AsCreateTaskAmount10":     ty.AsCreateTaskAmount10,
			"AsCreateTaskAssignees8":   ty.AsCreateTaskAssignees8,
			"AsCreateTaskDaoId0":       ty.AsCreateTaskDaoId0,
			"AsCreateTaskDescription3": ty.AsCreateTaskDescription3,
			"AsCreateTaskMaxAssignee6": ty.AsCreateTaskMaxAssignee6,
			"AsCreateTaskName2":        ty.AsCreateTaskName2,
			"AsCreateTaskPoint4":       ty.AsCreateTaskPoint4,
			"AsCreateTaskPriority5":    ty.AsCreateTaskPriority5,
			"AsCreateTaskProjectId1":   ty.AsCreateTaskProjectId1,
			"AsCreateTaskReviewers9":   ty.AsCreateTaskReviewers9,
			"AsCreateTaskSkills7":      ty.AsCreateTaskSkills7,
		}}
		return json.Marshal(m)
	}
	if ty.IsJoinTask {
		m := map[string]interface{}{"WeteeProjectPalletCall::join_task": map[string]interface{}{
			"AsJoinTaskDaoId0":     ty.AsJoinTaskDaoId0,
			"AsJoinTaskProjectId1": ty.AsJoinTaskProjectId1,
			"AsJoinTaskTaskId2":    ty.AsJoinTaskTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsLeaveTask {
		m := map[string]interface{}{"WeteeProjectPalletCall::leave_task": map[string]interface{}{
			"AsLeaveTaskDaoId0":     ty.AsLeaveTaskDaoId0,
			"AsLeaveTaskProjectId1": ty.AsLeaveTaskProjectId1,
			"AsLeaveTaskTaskId2":    ty.AsLeaveTaskTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsJoinTaskReview {
		m := map[string]interface{}{"WeteeProjectPalletCall::join_task_review": map[string]interface{}{
			"AsJoinTaskReviewDaoId0":     ty.AsJoinTaskReviewDaoId0,
			"AsJoinTaskReviewProjectId1": ty.AsJoinTaskReviewProjectId1,
			"AsJoinTaskReviewTaskId2":    ty.AsJoinTaskReviewTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsLeaveTaskReview {
		m := map[string]interface{}{"WeteeProjectPalletCall::leave_task_review": map[string]interface{}{
			"AsLeaveTaskReviewDaoId0":     ty.AsLeaveTaskReviewDaoId0,
			"AsLeaveTaskReviewProjectId1": ty.AsLeaveTaskReviewProjectId1,
			"AsLeaveTaskReviewTaskId2":    ty.AsLeaveTaskReviewTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsStartTask {
		m := map[string]interface{}{"WeteeProjectPalletCall::start_task": map[string]interface{}{
			"AsStartTaskDaoId0":     ty.AsStartTaskDaoId0,
			"AsStartTaskProjectId1": ty.AsStartTaskProjectId1,
			"AsStartTaskTaskId2":    ty.AsStartTaskTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsRequestReview {
		m := map[string]interface{}{"WeteeProjectPalletCall::request_review": map[string]interface{}{
			"AsRequestReviewDaoId0":     ty.AsRequestReviewDaoId0,
			"AsRequestReviewProjectId1": ty.AsRequestReviewProjectId1,
			"AsRequestReviewTaskId2":    ty.AsRequestReviewTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsTaskDone {
		m := map[string]interface{}{"WeteeProjectPalletCall::task_done": map[string]interface{}{
			"AsTaskDoneDaoId0":     ty.AsTaskDoneDaoId0,
			"AsTaskDoneProjectId1": ty.AsTaskDoneProjectId1,
			"AsTaskDoneTaskId2":    ty.AsTaskDoneTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsMakeReview {
		m := map[string]interface{}{"WeteeProjectPalletCall::make_review": map[string]interface{}{
			"AsMakeReviewDaoId0":     ty.AsMakeReviewDaoId0,
			"AsMakeReviewMeta4":      ty.AsMakeReviewMeta4,
			"AsMakeReviewOpinion3":   ty.AsMakeReviewOpinion3,
			"AsMakeReviewProjectId1": ty.AsMakeReviewProjectId1,
			"AsMakeReviewTaskId2":    ty.AsMakeReviewTaskId2,
		}}
		return json.Marshal(m)
	}
	if ty.IsCreateProxyProject {
		m := map[string]interface{}{"WeteeProjectPalletCall::create_proxy_project": map[string]interface{}{
			"AsCreateProxyProjectDeposit2":     ty.AsCreateProxyProjectDeposit2,
			"AsCreateProxyProjectDescription1": ty.AsCreateProxyProjectDescription1,
			"AsCreateProxyProjectName0":        ty.AsCreateProxyProjectName0,
		}}
		return json.Marshal(m)
	}
	if ty.IsProxyCall {
		m := map[string]interface{}{"WeteeProjectPalletCall::proxy_call": map[string]interface{}{
			"AsProxyCallCall1":      ty.AsProxyCallCall1,
			"AsProxyCallProjectId0": ty.AsProxyCallProjectId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGovMemberData with id=177
type MemberData struct {
	IsGLOBAL        bool
	IsGUILD         bool
	AsGUILDField0   uint64
	IsPROJECT       bool
	AsPROJECTField0 uint64
}

func (ty MemberData) Encode(encoder scale.Encoder) (err error) {
	if ty.IsGLOBAL {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGUILD {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGUILDField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPROJECT {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPROJECTField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *MemberData) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsGLOBAL = true
		return
	case 1:
		ty.IsGUILD = true
		err = decoder.Decode(&ty.AsGUILDField0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsPROJECT = true
		err = decoder.Decode(&ty.AsPROJECTField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *MemberData) Variant() (uint8, error) {
	if ty.IsGLOBAL {
		return 0, nil
	}
	if ty.IsGUILD {
		return 1, nil
	}
	if ty.IsPROJECT {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty MemberData) MarshalJSON() ([]byte, error) {
	if ty.IsGLOBAL {
		return json.Marshal("MemberData::GLOBAL")
	}
	if ty.IsGUILD {
		m := map[string]interface{}{"MemberData::GUILD": ty.AsGUILDField0}
		return json.Marshal(m)
	}
	if ty.IsPROJECT {
		m := map[string]interface{}{"MemberData::PROJECT": ty.AsPROJECTField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeGovOpinion with id=178
type Opinion struct {
	IsYES bool
	IsNO  bool
}

func (ty Opinion) Encode(encoder scale.Encoder) (err error) {
	if ty.IsYES {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNO {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Opinion) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsYES = true
		return
	case 1:
		ty.IsNO = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Opinion) Variant() (uint8, error) {
	if ty.IsYES {
		return 0, nil
	}
	if ty.IsNO {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Opinion) MarshalJSON() ([]byte, error) {
	if ty.IsYES {
		return json.Marshal("Opinion::YES")
	}
	if ty.IsNO {
		return json.Marshal("Opinion::NO")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_gov_Period with id={{false [180]}}
type Period struct {
	// Field 0 with TypeId=14
	Name []byte
	// Field 1 with TypeId=78
	PalletIndex uint16
	// Field 2 with TypeId=4
	PreparePeriod uint32
	// Field 3 with TypeId=4
	MaxDeciding uint32
	// Field 4 with TypeId=4
	ConfirmPeriod uint32
	// Field 5 with TypeId=4
	DecisionPeriod uint32
	// Field 6 with TypeId=4
	MinEnactmentPeriod uint32
	// Field 7 with TypeId=6
	DecisionDeposit types.U128
	// Field 8 with TypeId=2
	MinApproval byte
	// Field 9 with TypeId=2
	MinSupport byte
	// Field 10 with TypeId=6
	MaxBalance types.U128
}

// Generated WeteeGovPalletCall with id=176
type WeteeGovPalletCall struct {
	IsSubmitProposal             bool
	AsSubmitProposalDaoId0       uint64
	AsSubmitProposalMemberData1  MemberData
	AsSubmitProposalProposal2    *RuntimeCall
	AsSubmitProposalPeriodIndex3 uint32
	IsDepositProposal            bool
	AsDepositProposalDaoId0      uint64
	AsDepositProposalProposeId1  uint32
	AsDepositProposalDeposit2    types.UCompact
	IsVoteForProp                bool
	AsVoteForPropDaoId0          uint64
	AsVoteForPropPropIndex1      uint32
	AsVoteForPropPledge2         types.UCompact
	AsVoteForPropOpinion3        Opinion
	IsCancelVote                 bool
	AsCancelVoteDaoId0           uint64
	AsCancelVoteIndex1           uint32
	IsRunProposal                bool
	AsRunProposalDaoId0          uint64
	AsRunProposalIndex1          uint32
	IsUnlock                     bool
	AsUnlockDaoId0               uint64
	IsSetMaxPreProps             bool
	AsSetMaxPrePropsDaoId0       uint64
	AsSetMaxPrePropsMax1         uint32
	IsUpdateVoteModel            bool
	AsUpdateVoteModelDaoId0      uint64
	AsUpdateVoteModelModel1      byte
	IsSetPeriods                 bool
	AsSetPeriodsDaoId0           uint64
	AsSetPeriodsPeriods1         []Period
}

func (ty WeteeGovPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSubmitProposal {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSubmitProposalDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSubmitProposalMemberData1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSubmitProposalProposal2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSubmitProposalPeriodIndex3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDepositProposal {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositProposalDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositProposalProposeId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDepositProposalDeposit2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsVoteForProp {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteForPropDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteForPropPropIndex1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteForPropPledge2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVoteForPropOpinion3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCancelVote {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCancelVoteDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCancelVoteIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRunProposal {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRunProposalDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRunProposalIndex1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnlock {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnlockDaoId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetMaxPreProps {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMaxPrePropsDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetMaxPrePropsMax1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateVoteModel {
		err = encoder.PushByte(15)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateVoteModelDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateVoteModelModel1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetPeriods {
		err = encoder.PushByte(16)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetPeriodsDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetPeriodsPeriods1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGovPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsSubmitProposal = true
		err = decoder.Decode(&ty.AsSubmitProposalDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSubmitProposalMemberData1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSubmitProposalProposal2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSubmitProposalPeriodIndex3)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsDepositProposal = true
		err = decoder.Decode(&ty.AsDepositProposalDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositProposalProposeId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDepositProposalDeposit2)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsVoteForProp = true
		err = decoder.Decode(&ty.AsVoteForPropDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteForPropPropIndex1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteForPropPledge2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVoteForPropOpinion3)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsCancelVote = true
		err = decoder.Decode(&ty.AsCancelVoteDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCancelVoteIndex1)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsRunProposal = true
		err = decoder.Decode(&ty.AsRunProposalDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRunProposalIndex1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsUnlock = true
		err = decoder.Decode(&ty.AsUnlockDaoId0)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsSetMaxPreProps = true
		err = decoder.Decode(&ty.AsSetMaxPrePropsDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetMaxPrePropsMax1)
		if err != nil {
			return err
		}
		return
	case 15:
		ty.IsUpdateVoteModel = true
		err = decoder.Decode(&ty.AsUpdateVoteModelDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateVoteModelModel1)
		if err != nil {
			return err
		}
		return
	case 16:
		ty.IsSetPeriods = true
		err = decoder.Decode(&ty.AsSetPeriodsDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetPeriodsPeriods1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGovPalletCall) Variant() (uint8, error) {
	if ty.IsSubmitProposal {
		return 1, nil
	}
	if ty.IsDepositProposal {
		return 3, nil
	}
	if ty.IsVoteForProp {
		return 4, nil
	}
	if ty.IsCancelVote {
		return 5, nil
	}
	if ty.IsRunProposal {
		return 6, nil
	}
	if ty.IsUnlock {
		return 7, nil
	}
	if ty.IsSetMaxPreProps {
		return 9, nil
	}
	if ty.IsUpdateVoteModel {
		return 15, nil
	}
	if ty.IsSetPeriods {
		return 16, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGovPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSubmitProposal {
		m := map[string]interface{}{"WeteeGovPalletCall::submit_proposal": map[string]interface{}{
			"AsSubmitProposalDaoId0":       ty.AsSubmitProposalDaoId0,
			"AsSubmitProposalMemberData1":  ty.AsSubmitProposalMemberData1,
			"AsSubmitProposalPeriodIndex3": ty.AsSubmitProposalPeriodIndex3,
			"AsSubmitProposalProposal2":    ty.AsSubmitProposalProposal2,
		}}
		return json.Marshal(m)
	}
	if ty.IsDepositProposal {
		m := map[string]interface{}{"WeteeGovPalletCall::deposit_proposal": map[string]interface{}{
			"AsDepositProposalDaoId0":     ty.AsDepositProposalDaoId0,
			"AsDepositProposalDeposit2":   ty.AsDepositProposalDeposit2,
			"AsDepositProposalProposeId1": ty.AsDepositProposalProposeId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsVoteForProp {
		m := map[string]interface{}{"WeteeGovPalletCall::vote_for_prop": map[string]interface{}{
			"AsVoteForPropDaoId0":     ty.AsVoteForPropDaoId0,
			"AsVoteForPropOpinion3":   ty.AsVoteForPropOpinion3,
			"AsVoteForPropPledge2":    ty.AsVoteForPropPledge2,
			"AsVoteForPropPropIndex1": ty.AsVoteForPropPropIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsCancelVote {
		m := map[string]interface{}{"WeteeGovPalletCall::cancel_vote": map[string]interface{}{
			"AsCancelVoteDaoId0": ty.AsCancelVoteDaoId0,
			"AsCancelVoteIndex1": ty.AsCancelVoteIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRunProposal {
		m := map[string]interface{}{"WeteeGovPalletCall::run_proposal": map[string]interface{}{
			"AsRunProposalDaoId0": ty.AsRunProposalDaoId0,
			"AsRunProposalIndex1": ty.AsRunProposalIndex1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnlock {
		m := map[string]interface{}{"WeteeGovPalletCall::unlock": ty.AsUnlockDaoId0}
		return json.Marshal(m)
	}
	if ty.IsSetMaxPreProps {
		m := map[string]interface{}{"WeteeGovPalletCall::set_max_pre_props": map[string]interface{}{
			"AsSetMaxPrePropsDaoId0": ty.AsSetMaxPrePropsDaoId0,
			"AsSetMaxPrePropsMax1":   ty.AsSetMaxPrePropsMax1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateVoteModel {
		m := map[string]interface{}{"WeteeGovPalletCall::update_vote_model": map[string]interface{}{
			"AsUpdateVoteModelDaoId0": ty.AsUpdateVoteModelDaoId0,
			"AsUpdateVoteModelModel1": ty.AsUpdateVoteModelModel1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetPeriods {
		m := map[string]interface{}{"WeteeGovPalletCall::set_periods": map[string]interface{}{
			"AsSetPeriodsDaoId0":   ty.AsSetPeriodsDaoId0,
			"AsSetPeriodsPeriods1": ty.AsSetPeriodsPeriods1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeTreasuryPalletCall with id=181
type WeteeTreasuryPalletCall struct {
	IsSpend             bool
	AsSpendDaoId0       uint64
	AsSpendBeneficiary1 [32]byte
	AsSpendAmount2      types.UCompact
}

func (ty WeteeTreasuryPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSpend {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendDaoId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendBeneficiary1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSpendAmount2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTreasuryPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 2:
		ty.IsSpend = true
		err = decoder.Decode(&ty.AsSpendDaoId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendBeneficiary1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSpendAmount2)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTreasuryPalletCall) Variant() (uint8, error) {
	if ty.IsSpend {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTreasuryPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsSpend {
		m := map[string]interface{}{"WeteeTreasuryPalletCall::spend": map[string]interface{}{
			"AsSpendAmount2":      ty.AsSpendAmount2,
			"AsSpendBeneficiary1": ty.AsSpendBeneficiary1,
			"AsSpendDaoId0":       ty.AsSpendDaoId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=183
type OptionTU128 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 types.U128
}

func (ty OptionTU128) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTU128) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTU128) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTU128) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTU128::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTU128::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteePrimitivesTypesService with id=185
type Service struct {
	IsTcp              bool
	AsTcpField0        uint16
	IsUdp              bool
	AsUdpField0        uint16
	IsHttp             bool
	AsHttpField0       uint16
	IsHttps            bool
	AsHttpsField0      uint16
	IsProjectTcp       bool
	AsProjectTcpField0 uint16
	IsProjectUdp       bool
	AsProjectUdpField0 uint16
}

func (ty Service) Encode(encoder scale.Encoder) (err error) {
	if ty.IsTcp {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTcpField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUdp {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUdpField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsHttp {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsHttpField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsHttps {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsHttpsField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProjectTcp {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectTcpField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProjectUdp {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectUdpField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Service) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsTcp = true
		err = decoder.Decode(&ty.AsTcpField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsUdp = true
		err = decoder.Decode(&ty.AsUdpField0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsHttp = true
		err = decoder.Decode(&ty.AsHttpField0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsHttps = true
		err = decoder.Decode(&ty.AsHttpsField0)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsProjectTcp = true
		err = decoder.Decode(&ty.AsProjectTcpField0)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsProjectUdp = true
		err = decoder.Decode(&ty.AsProjectUdpField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Service) Variant() (uint8, error) {
	if ty.IsTcp {
		return 0, nil
	}
	if ty.IsUdp {
		return 1, nil
	}
	if ty.IsHttp {
		return 2, nil
	}
	if ty.IsHttps {
		return 3, nil
	}
	if ty.IsProjectTcp {
		return 4, nil
	}
	if ty.IsProjectUdp {
		return 5, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Service) MarshalJSON() ([]byte, error) {
	if ty.IsTcp {
		m := map[string]interface{}{"Service::Tcp": ty.AsTcpField0}
		return json.Marshal(m)
	}
	if ty.IsUdp {
		m := map[string]interface{}{"Service::Udp": ty.AsUdpField0}
		return json.Marshal(m)
	}
	if ty.IsHttp {
		m := map[string]interface{}{"Service::Http": ty.AsHttpField0}
		return json.Marshal(m)
	}
	if ty.IsHttps {
		m := map[string]interface{}{"Service::Https": ty.AsHttpsField0}
		return json.Marshal(m)
	}
	if ty.IsProjectTcp {
		m := map[string]interface{}{"Service::ProjectTcp": ty.AsProjectTcpField0}
		return json.Marshal(m)
	}
	if ty.IsProjectUdp {
		m := map[string]interface{}{"Service::ProjectUdp": ty.AsProjectUdpField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteePrimitivesTypesCommand with id=186
type Command struct {
	IsSH         bool
	AsSHField0   []byte
	IsBASH       bool
	AsBASHField0 []byte
	IsZSH        bool
	AsZSHField0  []byte
	IsNONE       bool
}

func (ty Command) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSH {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSHField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBASH {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBASHField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsZSH {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsZSHField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsNONE {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Command) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSH = true
		err = decoder.Decode(&ty.AsSHField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsBASH = true
		err = decoder.Decode(&ty.AsBASHField0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsZSH = true
		err = decoder.Decode(&ty.AsZSHField0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsNONE = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Command) Variant() (uint8, error) {
	if ty.IsSH {
		return 0, nil
	}
	if ty.IsBASH {
		return 1, nil
	}
	if ty.IsZSH {
		return 2, nil
	}
	if ty.IsNONE {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Command) MarshalJSON() ([]byte, error) {
	if ty.IsSH {
		m := map[string]interface{}{"Command::SH": ty.AsSHField0}
		return json.Marshal(m)
	}
	if ty.IsBASH {
		m := map[string]interface{}{"Command::BASH": ty.AsBASHField0}
		return json.Marshal(m)
	}
	if ty.IsZSH {
		m := map[string]interface{}{"Command::ZSH": ty.AsZSHField0}
		return json.Marshal(m)
	}
	if ty.IsNONE {
		return json.Marshal("Command::NONE")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteePrimitivesTypesEditType with id=189
type EditType struct {
	IsINSERT       bool
	IsUPDATE       bool
	AsUPDATEField0 uint16
	IsREMOVE       bool
	AsREMOVEField0 uint16
}

func (ty EditType) Encode(encoder scale.Encoder) (err error) {
	if ty.IsINSERT {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUPDATE {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUPDATEField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsREMOVE {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsREMOVEField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *EditType) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsINSERT = true
		return
	case 1:
		ty.IsUPDATE = true
		err = decoder.Decode(&ty.AsUPDATEField0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsREMOVE = true
		err = decoder.Decode(&ty.AsREMOVEField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *EditType) Variant() (uint8, error) {
	if ty.IsINSERT {
		return 0, nil
	}
	if ty.IsUPDATE {
		return 1, nil
	}
	if ty.IsREMOVE {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty EditType) MarshalJSON() ([]byte, error) {
	if ty.IsINSERT {
		return json.Marshal("EditType::INSERT")
	}
	if ty.IsUPDATE {
		m := map[string]interface{}{"EditType::UPDATE": ty.AsUPDATEField0}
		return json.Marshal(m)
	}
	if ty.IsREMOVE {
		m := map[string]interface{}{"EditType::REMOVE": ty.AsREMOVEField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteePrimitivesTypesEnvKey with id=190
type EnvKey struct {
	IsEnv        bool
	AsEnvField0  []byte
	IsFile       bool
	AsFileField0 []byte
}

func (ty EnvKey) Encode(encoder scale.Encoder) (err error) {
	if ty.IsEnv {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsEnvField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFile {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsFileField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *EnvKey) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsEnv = true
		err = decoder.Decode(&ty.AsEnvField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsFile = true
		err = decoder.Decode(&ty.AsFileField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *EnvKey) Variant() (uint8, error) {
	if ty.IsEnv {
		return 0, nil
	}
	if ty.IsFile {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty EnvKey) MarshalJSON() ([]byte, error) {
	if ty.IsEnv {
		m := map[string]interface{}{"EnvKey::Env": ty.AsEnvField0}
		return json.Marshal(m)
	}
	if ty.IsFile {
		m := map[string]interface{}{"EnvKey::File": ty.AsFileField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_primitives_types_EnvInput with id={{false [188]}}
type EnvInput struct {
	// Field 0 with TypeId=189
	Etype EditType
	// Field 1 with TypeId=78
	Index uint16
	// Field 2 with TypeId=190
	K EnvKey
	// Field 3 with TypeId=14
	V []byte
}

// Generated WeteePrimitivesTypesDiskClass with id=193
type DiskClass struct {
	IsSSD       bool
	AsSSDField0 []byte
}

func (ty DiskClass) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSSD {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSSDField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *DiskClass) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSSD = true
		err = decoder.Decode(&ty.AsSSDField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *DiskClass) Variant() (uint8, error) {
	if ty.IsSSD {
		return 0, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty DiskClass) MarshalJSON() ([]byte, error) {
	if ty.IsSSD {
		m := map[string]interface{}{"DiskClass::SSD": ty.AsSSDField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_primitives_types_Disk with id={{false [192]}}
type Disk struct {
	// Field 0 with TypeId=193
	Path DiskClass
	// Field 1 with TypeId=4
	Size uint32
}

// Generated wetee_primitives_types_Cr with id={{false [196]}}
type Cr struct {
	// Field 0 with TypeId=4
	Cpu uint32
	// Field 1 with TypeId=4
	Mem uint32
	// Field 2 with TypeId=191
	Disk []Disk
	// Field 3 with TypeId=4
	Gpu uint32
}

// Generated wetee_primitives_types_Container with id={{false [195]}}
type Container struct {
	// Field 0 with TypeId=14
	Image []byte
	// Field 1 with TypeId=186
	Command Command
	// Field 2 with TypeId=184
	Port []Service
	// Field 3 with TypeId=196
	Cr Cr
}

// Generated WeteePrimitivesTypesTEEVersion with id=197
type TEEVersion struct {
	IsSGX bool
	IsCVM bool
}

func (ty TEEVersion) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSGX {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCVM {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *TEEVersion) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSGX = true
		return
	case 1:
		ty.IsCVM = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *TEEVersion) Variant() (uint8, error) {
	if ty.IsSGX {
		return 0, nil
	}
	if ty.IsCVM {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty TEEVersion) MarshalJSON() ([]byte, error) {
	if ty.IsSGX {
		return json.Marshal("TEEVersion::SGX")
	}
	if ty.IsCVM {
		return json.Marshal("TEEVersion::CVM")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=198
type OptionTServiceSlice struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 []Service
}

func (ty OptionTServiceSlice) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTServiceSlice) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTServiceSlice) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTServiceSlice) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTServiceSlice::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTServiceSlice::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=199
type OptionTCommand struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 *Command
}

func (ty OptionTCommand) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTCommand) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		var tmp Command
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSomeField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTCommand) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTCommand) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTCommand::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTCommand::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_app_Price with id={{false [200]}}
type Price struct {
	// Field 0 with TypeId=4
	CpuPer uint32
	// Field 1 with TypeId=4
	MemoryPer uint32
	// Field 2 with TypeId=4
	DiskPer uint32
}

// Generated WeteeAppPalletCall with id=182
type WeteeAppPalletCall struct {
	IsCreate                bool
	AsCreateName0           []byte
	AsCreateTemplateId1     OptionTU128
	AsCreateImage2          []byte
	AsCreateSigner3         []byte
	AsCreateSignature4      []byte
	AsCreateMeta5           []byte
	AsCreatePort6           []Service
	AsCreateCommand7        Command
	AsCreateEnv8            []EnvInput
	AsCreateSecretEnv9      OptionTByteSlice
	AsCreateCpu10           uint32
	AsCreateMemory11        uint32
	AsCreateDisk12          []Disk
	AsCreateSideContainer13 []Container
	AsCreateLevel14         byte
	AsCreateTeeVersion15    TEEVersion
	IsUpdate                bool
	AsUpdateAppId0          uint64
	AsUpdateNewName1        OptionTByteSlice
	AsUpdateNewImage2       OptionTByteSlice
	AsUpdateNewSigner3      OptionTByteSlice
	AsUpdateNewSignature4   OptionTByteSlice
	AsUpdateNewPort5        OptionTServiceSlice
	AsUpdateNewCommand6     OptionTCommand
	AsUpdateNewEnv7         []EnvInput
	AsUpdateSecretEnv8      OptionTByteSlice
	AsUpdateWithRestart9    bool
	IsRestart               bool
	AsRestartAppId0         uint64
	IsUpdatePrice           bool
	AsUpdatePriceLevel0     byte
	AsUpdatePricePrice1     Price
}

func (ty WeteeAppPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreate {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTemplateId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateImage2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSigner3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSignature4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateMeta5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatePort6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateCommand7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateEnv8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSecretEnv9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateCpu10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateMemory11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDisk12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSideContainer13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateLevel14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTeeVersion15)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdate {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewImage2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewSigner3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewSignature4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewPort5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewCommand6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewEnv7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateSecretEnv8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateWithRestart9)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRestart {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRestartAppId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdatePrice {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdatePriceLevel0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdatePricePrice1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeAppPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreate = true
		err = decoder.Decode(&ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTemplateId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateImage2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSigner3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSignature4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateMeta5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatePort6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateCommand7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateEnv8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSecretEnv9)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateCpu10)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateMemory11)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDisk12)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSideContainer13)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateLevel14)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTeeVersion15)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsUpdate = true
		err = decoder.Decode(&ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewImage2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewSigner3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewSignature4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewPort5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewCommand6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewEnv7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateSecretEnv8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateWithRestart9)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsRestart = true
		err = decoder.Decode(&ty.AsRestartAppId0)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsUpdatePrice = true
		err = decoder.Decode(&ty.AsUpdatePriceLevel0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdatePricePrice1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeAppPalletCall) Variant() (uint8, error) {
	if ty.IsCreate {
		return 1, nil
	}
	if ty.IsUpdate {
		return 2, nil
	}
	if ty.IsRestart {
		return 6, nil
	}
	if ty.IsUpdatePrice {
		return 7, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeAppPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreate {
		m := map[string]interface{}{"WeteeAppPalletCall::create": map[string]interface{}{
			"AsCreateCommand7":        ty.AsCreateCommand7,
			"AsCreateCpu10":           ty.AsCreateCpu10,
			"AsCreateDisk12":          ty.AsCreateDisk12,
			"AsCreateEnv8":            ty.AsCreateEnv8,
			"AsCreateImage2":          ty.AsCreateImage2,
			"AsCreateLevel14":         ty.AsCreateLevel14,
			"AsCreateMemory11":        ty.AsCreateMemory11,
			"AsCreateMeta5":           ty.AsCreateMeta5,
			"AsCreateName0":           ty.AsCreateName0,
			"AsCreatePort6":           ty.AsCreatePort6,
			"AsCreateSecretEnv9":      ty.AsCreateSecretEnv9,
			"AsCreateSideContainer13": ty.AsCreateSideContainer13,
			"AsCreateSignature4":      ty.AsCreateSignature4,
			"AsCreateSigner3":         ty.AsCreateSigner3,
			"AsCreateTeeVersion15":    ty.AsCreateTeeVersion15,
			"AsCreateTemplateId1":     ty.AsCreateTemplateId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdate {
		m := map[string]interface{}{"WeteeAppPalletCall::update": map[string]interface{}{
			"AsUpdateAppId0":        ty.AsUpdateAppId0,
			"AsUpdateNewCommand6":   ty.AsUpdateNewCommand6,
			"AsUpdateNewEnv7":       ty.AsUpdateNewEnv7,
			"AsUpdateNewImage2":     ty.AsUpdateNewImage2,
			"AsUpdateNewName1":      ty.AsUpdateNewName1,
			"AsUpdateNewPort5":      ty.AsUpdateNewPort5,
			"AsUpdateNewSignature4": ty.AsUpdateNewSignature4,
			"AsUpdateNewSigner3":    ty.AsUpdateNewSigner3,
			"AsUpdateSecretEnv8":    ty.AsUpdateSecretEnv8,
			"AsUpdateWithRestart9":  ty.AsUpdateWithRestart9,
		}}
		return json.Marshal(m)
	}
	if ty.IsRestart {
		m := map[string]interface{}{"WeteeAppPalletCall::restart": ty.AsRestartAppId0}
		return json.Marshal(m)
	}
	if ty.IsUpdatePrice {
		m := map[string]interface{}{"WeteeAppPalletCall::update_price": map[string]interface{}{
			"AsUpdatePriceLevel0": ty.AsUpdatePriceLevel0,
			"AsUpdatePricePrice1": ty.AsUpdatePricePrice1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_task_Price with id={{false [202]}}
type Price1 struct {
	// Field 0 with TypeId=4
	CpuPerBlock uint32
	// Field 1 with TypeId=4
	MemoryPerBlock uint32
	// Field 2 with TypeId=4
	DiskPerBlock uint32
}

// Generated WeteeTaskPalletCall with id=201
type WeteeTaskPalletCall struct {
	IsCreate              bool
	AsCreateName0         []byte
	AsCreateTemplateId1   OptionTU128
	AsCreateImage2        []byte
	AsCreateSigner3       []byte
	AsCreateSignature4    []byte
	AsCreateMeta5         []byte
	AsCreatePort6         []Service
	AsCreateCommand7      Command
	AsCreateEnv8          []EnvInput
	AsCreateSecretEnv9    OptionTByteSlice
	AsCreateCpu10         uint32
	AsCreateMemory11      uint32
	AsCreateDisk12        []Disk
	AsCreateLevel13       byte
	AsCreateTeeVersion14  TEEVersion
	IsRerun               bool
	AsRerunId0            uint64
	IsUpdate              bool
	AsUpdateAppId0        uint64
	AsUpdateNewName1      OptionTByteSlice
	AsUpdateNewImage2     OptionTByteSlice
	AsUpdateNewSigner3    OptionTByteSlice
	AsUpdateNewSignature4 OptionTByteSlice
	AsUpdateNewPort5      OptionTServiceSlice
	AsUpdateNewCommand6   OptionTCommand
	AsUpdateNewEnv7       []EnvInput
	AsUpdateSecretEnv8    OptionTByteSlice
	AsUpdateWithRestart9  bool
	IsUpdatePrice         bool
	AsUpdatePriceLevel0   byte
	AsUpdatePricePrice1   Price1
}

func (ty WeteeTaskPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreate {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTemplateId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateImage2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSigner3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSignature4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateMeta5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatePort6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateCommand7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateEnv8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSecretEnv9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateCpu10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateMemory11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDisk12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateLevel13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTeeVersion14)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRerun {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRerunId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdate {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewImage2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewSigner3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewSignature4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewPort5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewCommand6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewEnv7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateSecretEnv8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateWithRestart9)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdatePrice {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdatePriceLevel0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdatePricePrice1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTaskPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreate = true
		err = decoder.Decode(&ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTemplateId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateImage2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSigner3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSignature4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateMeta5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatePort6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateCommand7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateEnv8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSecretEnv9)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateCpu10)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateMemory11)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDisk12)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateLevel13)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTeeVersion14)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsRerun = true
		err = decoder.Decode(&ty.AsRerunId0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsUpdate = true
		err = decoder.Decode(&ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewImage2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewSigner3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewSignature4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewPort5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewCommand6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewEnv7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateSecretEnv8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateWithRestart9)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsUpdatePrice = true
		err = decoder.Decode(&ty.AsUpdatePriceLevel0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdatePricePrice1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTaskPalletCall) Variant() (uint8, error) {
	if ty.IsCreate {
		return 1, nil
	}
	if ty.IsRerun {
		return 2, nil
	}
	if ty.IsUpdate {
		return 3, nil
	}
	if ty.IsUpdatePrice {
		return 4, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTaskPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreate {
		m := map[string]interface{}{"WeteeTaskPalletCall::create": map[string]interface{}{
			"AsCreateCommand7":     ty.AsCreateCommand7,
			"AsCreateCpu10":        ty.AsCreateCpu10,
			"AsCreateDisk12":       ty.AsCreateDisk12,
			"AsCreateEnv8":         ty.AsCreateEnv8,
			"AsCreateImage2":       ty.AsCreateImage2,
			"AsCreateLevel13":      ty.AsCreateLevel13,
			"AsCreateMemory11":     ty.AsCreateMemory11,
			"AsCreateMeta5":        ty.AsCreateMeta5,
			"AsCreateName0":        ty.AsCreateName0,
			"AsCreatePort6":        ty.AsCreatePort6,
			"AsCreateSecretEnv9":   ty.AsCreateSecretEnv9,
			"AsCreateSignature4":   ty.AsCreateSignature4,
			"AsCreateSigner3":      ty.AsCreateSigner3,
			"AsCreateTeeVersion14": ty.AsCreateTeeVersion14,
			"AsCreateTemplateId1":  ty.AsCreateTemplateId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRerun {
		m := map[string]interface{}{"WeteeTaskPalletCall::rerun": ty.AsRerunId0}
		return json.Marshal(m)
	}
	if ty.IsUpdate {
		m := map[string]interface{}{"WeteeTaskPalletCall::update": map[string]interface{}{
			"AsUpdateAppId0":        ty.AsUpdateAppId0,
			"AsUpdateNewCommand6":   ty.AsUpdateNewCommand6,
			"AsUpdateNewEnv7":       ty.AsUpdateNewEnv7,
			"AsUpdateNewImage2":     ty.AsUpdateNewImage2,
			"AsUpdateNewName1":      ty.AsUpdateNewName1,
			"AsUpdateNewPort5":      ty.AsUpdateNewPort5,
			"AsUpdateNewSignature4": ty.AsUpdateNewSignature4,
			"AsUpdateNewSigner3":    ty.AsUpdateNewSigner3,
			"AsUpdateSecretEnv8":    ty.AsUpdateSecretEnv8,
			"AsUpdateWithRestart9":  ty.AsUpdateWithRestart9,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdatePrice {
		m := map[string]interface{}{"WeteeTaskPalletCall::update_price": map[string]interface{}{
			"AsUpdatePriceLevel0": ty.AsUpdatePriceLevel0,
			"AsUpdatePricePrice1": ty.AsUpdatePricePrice1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_gpu_Price with id={{false [204]}}
type Price2 struct {
	// Field 0 with TypeId=4
	CpuPer uint32
	// Field 1 with TypeId=4
	MemoryPer uint32
	// Field 2 with TypeId=4
	DiskPer uint32
}

// Generated WeteeGpuPalletCall with id=203
type WeteeGpuPalletCall struct {
	IsCreate                bool
	AsCreateName0           []byte
	AsCreateTemplateId1     OptionTU128
	AsCreateImage2          []byte
	AsCreateSigner3         []byte
	AsCreateSignature4      []byte
	AsCreateMeta5           []byte
	AsCreatePort6           []Service
	AsCreateCommand7        Command
	AsCreateEnv8            []EnvInput
	AsCreateSecretEnv9      OptionTByteSlice
	AsCreateCpu10           uint32
	AsCreateMemory11        uint32
	AsCreateDisk12          []Disk
	AsCreateGpu13           uint32
	AsCreateSideContainer14 []Container
	AsCreateLevel15         byte
	AsCreateTeeVersion16    TEEVersion
	IsUpdate                bool
	AsUpdateAppId0          uint64
	AsUpdateNewName1        OptionTByteSlice
	AsUpdateNewImage2       OptionTByteSlice
	AsUpdateNewSigner3      OptionTByteSlice
	AsUpdateNewSignature4   OptionTByteSlice
	AsUpdateNewPort5        OptionTServiceSlice
	AsUpdateNewCommand6     OptionTCommand
	AsUpdateNewEnv7         []EnvInput
	AsUpdateSecretEnv8      OptionTByteSlice
	AsUpdateWithRestart9    bool
	IsRestart               bool
	AsRestartAppId0         uint64
	IsUpdatePrice           bool
	AsUpdatePriceLevel0     byte
	AsUpdatePricePrice1     Price2
}

func (ty WeteeGpuPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreate {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTemplateId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateImage2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSigner3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSignature4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateMeta5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreatePort6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateCommand7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateEnv8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSecretEnv9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateCpu10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateMemory11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateDisk12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateGpu13)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateSideContainer14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateLevel15)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateTeeVersion16)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdate {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewImage2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewSigner3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewSignature4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewPort5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewCommand6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNewEnv7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateSecretEnv8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateWithRestart9)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRestart {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRestartAppId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdatePrice {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdatePriceLevel0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdatePricePrice1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeGpuPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreate = true
		err = decoder.Decode(&ty.AsCreateName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTemplateId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateImage2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSigner3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSignature4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateMeta5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreatePort6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateCommand7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateEnv8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSecretEnv9)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateCpu10)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateMemory11)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateDisk12)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateGpu13)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateSideContainer14)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateLevel15)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateTeeVersion16)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsUpdate = true
		err = decoder.Decode(&ty.AsUpdateAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewImage2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewSigner3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewSignature4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewPort5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewCommand6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNewEnv7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateSecretEnv8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateWithRestart9)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsRestart = true
		err = decoder.Decode(&ty.AsRestartAppId0)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsUpdatePrice = true
		err = decoder.Decode(&ty.AsUpdatePriceLevel0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdatePricePrice1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeGpuPalletCall) Variant() (uint8, error) {
	if ty.IsCreate {
		return 1, nil
	}
	if ty.IsUpdate {
		return 2, nil
	}
	if ty.IsRestart {
		return 6, nil
	}
	if ty.IsUpdatePrice {
		return 7, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeGpuPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreate {
		m := map[string]interface{}{"WeteeGpuPalletCall::create": map[string]interface{}{
			"AsCreateCommand7":        ty.AsCreateCommand7,
			"AsCreateCpu10":           ty.AsCreateCpu10,
			"AsCreateDisk12":          ty.AsCreateDisk12,
			"AsCreateEnv8":            ty.AsCreateEnv8,
			"AsCreateGpu13":           ty.AsCreateGpu13,
			"AsCreateImage2":          ty.AsCreateImage2,
			"AsCreateLevel15":         ty.AsCreateLevel15,
			"AsCreateMemory11":        ty.AsCreateMemory11,
			"AsCreateMeta5":           ty.AsCreateMeta5,
			"AsCreateName0":           ty.AsCreateName0,
			"AsCreatePort6":           ty.AsCreatePort6,
			"AsCreateSecretEnv9":      ty.AsCreateSecretEnv9,
			"AsCreateSideContainer14": ty.AsCreateSideContainer14,
			"AsCreateSignature4":      ty.AsCreateSignature4,
			"AsCreateSigner3":         ty.AsCreateSigner3,
			"AsCreateTeeVersion16":    ty.AsCreateTeeVersion16,
			"AsCreateTemplateId1":     ty.AsCreateTemplateId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdate {
		m := map[string]interface{}{"WeteeGpuPalletCall::update": map[string]interface{}{
			"AsUpdateAppId0":        ty.AsUpdateAppId0,
			"AsUpdateNewCommand6":   ty.AsUpdateNewCommand6,
			"AsUpdateNewEnv7":       ty.AsUpdateNewEnv7,
			"AsUpdateNewImage2":     ty.AsUpdateNewImage2,
			"AsUpdateNewName1":      ty.AsUpdateNewName1,
			"AsUpdateNewPort5":      ty.AsUpdateNewPort5,
			"AsUpdateNewSignature4": ty.AsUpdateNewSignature4,
			"AsUpdateNewSigner3":    ty.AsUpdateNewSigner3,
			"AsUpdateSecretEnv8":    ty.AsUpdateSecretEnv8,
			"AsUpdateWithRestart9":  ty.AsUpdateWithRestart9,
		}}
		return json.Marshal(m)
	}
	if ty.IsRestart {
		m := map[string]interface{}{"WeteeGpuPalletCall::restart": ty.AsRestartAppId0}
		return json.Marshal(m)
	}
	if ty.IsUpdatePrice {
		m := map[string]interface{}{"WeteeGpuPalletCall::update_price": map[string]interface{}{
			"AsUpdatePriceLevel0": ty.AsUpdatePriceLevel0,
			"AsUpdatePricePrice1": ty.AsUpdatePricePrice1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=117
type OptionTUint32 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 uint32
}

func (ty OptionTUint32) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTUint32) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTUint32) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTUint32) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTUint32::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTUint32::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_primitives_types_Ip with id={{false [207]}}
type Ip struct {
	// Field 0 with TypeId=117
	Ipv4 OptionTUint32
	// Field 1 with TypeId=183
	Ipv6 OptionTU128
	// Field 2 with TypeId=165
	Domain OptionTByteSlice
}

// Generated wetee_primitives_types_ComCr with id={{false [210]}}
type ComCr struct {
	// Field 0 with TypeId=4
	Cpu uint32
	// Field 1 with TypeId=4
	Mem uint32
	// Field 2 with TypeId=4
	CvmCpu uint32
	// Field 3 with TypeId=4
	CvmMem uint32
	// Field 4 with TypeId=4
	Disk uint32
	// Field 5 with TypeId=4
	Gpu uint32
}

// Generated wetee_worker_types_ProofOfWork with id={{false [209]}}
type ProofOfWork struct {
	// Field 0 with TypeId=14
	LogHash []byte
	// Field 1 with TypeId=210
	Cr ComCr
	// Field 2 with TypeId=14
	CrHash []byte
}

// Generated Option with id=208
type OptionTProofOfWork struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 ProofOfWork
}

func (ty OptionTProofOfWork) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTProofOfWork) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTProofOfWork) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTProofOfWork) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTProofOfWork::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTProofOfWork::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeWorkerPalletCall with id=205
type WeteeWorkerPalletCall struct {
	IsClusterRegister            bool
	AsClusterRegisterName0       []byte
	AsClusterRegisterIp1         []Ip
	AsClusterRegisterPort2       uint32
	AsClusterRegisterLevel3      byte
	IsClusterMortgage            bool
	AsClusterMortgageId0         uint64
	AsClusterMortgageCpu1        uint32
	AsClusterMortgageMem2        uint32
	AsClusterMortgageCvmCpu3     uint32
	AsClusterMortgageCvmMem4     uint32
	AsClusterMortgageDisk5       uint32
	AsClusterMortgageGpu6        uint32
	AsClusterMortgageAssetId7    uint64
	AsClusterMortgageDeposit8    types.UCompact
	IsClusterUnmortgage          bool
	AsClusterUnmortgageId0       uint64
	AsClusterUnmortgageBlockNum1 uint32
	IsWorkProofUpload            bool
	AsWorkProofUploadWorkId0     WorkId
	AsWorkProofUploadProof1      OptionTProofOfWork
	AsWorkProofUploadReport2     OptionTByteSlice
	IsClusterWithdrawal          bool
	AsClusterWithdrawalWorkId0   WorkId
	AsClusterWithdrawalAmount1   types.U128
	IsClusterStop                bool
	AsClusterStopId0             uint64
	IsClusterReport              bool
	AsClusterReportClusterId0    uint64
	AsClusterReportWorkId1       WorkId
	AsClusterReportReason2       []byte
	IsReportClose                bool
	AsReportCloseClusterId0      uint64
	AsReportCloseWorkId1         WorkId
	IsWorkStop                   bool
	AsWorkStopWorkId0            WorkId
	IsInitMint                   bool
	IsSetStage                   bool
	AsSetStageStage0             uint32
	IsUploadCode                 bool
	AsUploadCodeSignature0       []byte
	AsUploadCodeSigner1          []byte
}

func (ty WeteeWorkerPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsClusterRegister {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterRegisterName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterRegisterIp1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterRegisterPort2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterRegisterLevel3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterMortgage {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageCpu1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageMem2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageCvmCpu3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageCvmMem4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageDisk5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageGpu6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageAssetId7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterMortgageDeposit8)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterUnmortgage {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterUnmortgageId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterUnmortgageBlockNum1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkProofUpload {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkProofUploadWorkId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkProofUploadProof1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkProofUploadReport2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterWithdrawal {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterWithdrawalWorkId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterWithdrawalAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterStop {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterStopId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsClusterReport {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterReportClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterReportWorkId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsClusterReportReason2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReportClose {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportCloseClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReportCloseWorkId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkStop {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkStopWorkId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInitMint {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetStage {
		err = encoder.PushByte(12)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetStageStage0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUploadCode {
		err = encoder.PushByte(14)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadCodeSignature0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadCodeSigner1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeWorkerPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsClusterRegister = true
		err = decoder.Decode(&ty.AsClusterRegisterName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterRegisterIp1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterRegisterPort2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterRegisterLevel3)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsClusterMortgage = true
		err = decoder.Decode(&ty.AsClusterMortgageId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageCpu1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageMem2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageCvmCpu3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageCvmMem4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageDisk5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageGpu6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageAssetId7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterMortgageDeposit8)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsClusterUnmortgage = true
		err = decoder.Decode(&ty.AsClusterUnmortgageId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterUnmortgageBlockNum1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsWorkProofUpload = true
		err = decoder.Decode(&ty.AsWorkProofUploadWorkId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkProofUploadProof1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkProofUploadReport2)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsClusterWithdrawal = true
		err = decoder.Decode(&ty.AsClusterWithdrawalWorkId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterWithdrawalAmount1)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsClusterStop = true
		err = decoder.Decode(&ty.AsClusterStopId0)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsClusterReport = true
		err = decoder.Decode(&ty.AsClusterReportClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterReportWorkId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsClusterReportReason2)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsReportClose = true
		err = decoder.Decode(&ty.AsReportCloseClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReportCloseWorkId1)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsWorkStop = true
		err = decoder.Decode(&ty.AsWorkStopWorkId0)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsInitMint = true
		return
	case 12:
		ty.IsSetStage = true
		err = decoder.Decode(&ty.AsSetStageStage0)
		if err != nil {
			return err
		}
		return
	case 14:
		ty.IsUploadCode = true
		err = decoder.Decode(&ty.AsUploadCodeSignature0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUploadCodeSigner1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeWorkerPalletCall) Variant() (uint8, error) {
	if ty.IsClusterRegister {
		return 1, nil
	}
	if ty.IsClusterMortgage {
		return 2, nil
	}
	if ty.IsClusterUnmortgage {
		return 3, nil
	}
	if ty.IsWorkProofUpload {
		return 5, nil
	}
	if ty.IsClusterWithdrawal {
		return 6, nil
	}
	if ty.IsClusterStop {
		return 7, nil
	}
	if ty.IsClusterReport {
		return 8, nil
	}
	if ty.IsReportClose {
		return 9, nil
	}
	if ty.IsWorkStop {
		return 10, nil
	}
	if ty.IsInitMint {
		return 11, nil
	}
	if ty.IsSetStage {
		return 12, nil
	}
	if ty.IsUploadCode {
		return 14, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeWorkerPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsClusterRegister {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_register": map[string]interface{}{
			"AsClusterRegisterIp1":    ty.AsClusterRegisterIp1,
			"AsClusterRegisterLevel3": ty.AsClusterRegisterLevel3,
			"AsClusterRegisterName0":  ty.AsClusterRegisterName0,
			"AsClusterRegisterPort2":  ty.AsClusterRegisterPort2,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterMortgage {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_mortgage": map[string]interface{}{
			"AsClusterMortgageAssetId7": ty.AsClusterMortgageAssetId7,
			"AsClusterMortgageCpu1":     ty.AsClusterMortgageCpu1,
			"AsClusterMortgageCvmCpu3":  ty.AsClusterMortgageCvmCpu3,
			"AsClusterMortgageCvmMem4":  ty.AsClusterMortgageCvmMem4,
			"AsClusterMortgageDeposit8": ty.AsClusterMortgageDeposit8,
			"AsClusterMortgageDisk5":    ty.AsClusterMortgageDisk5,
			"AsClusterMortgageGpu6":     ty.AsClusterMortgageGpu6,
			"AsClusterMortgageId0":      ty.AsClusterMortgageId0,
			"AsClusterMortgageMem2":     ty.AsClusterMortgageMem2,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterUnmortgage {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_unmortgage": map[string]interface{}{
			"AsClusterUnmortgageBlockNum1": ty.AsClusterUnmortgageBlockNum1,
			"AsClusterUnmortgageId0":       ty.AsClusterUnmortgageId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkProofUpload {
		m := map[string]interface{}{"WeteeWorkerPalletCall::work_proof_upload": map[string]interface{}{
			"AsWorkProofUploadProof1":  ty.AsWorkProofUploadProof1,
			"AsWorkProofUploadReport2": ty.AsWorkProofUploadReport2,
			"AsWorkProofUploadWorkId0": ty.AsWorkProofUploadWorkId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterWithdrawal {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_withdrawal": map[string]interface{}{
			"AsClusterWithdrawalAmount1": ty.AsClusterWithdrawalAmount1,
			"AsClusterWithdrawalWorkId0": ty.AsClusterWithdrawalWorkId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsClusterStop {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_stop": ty.AsClusterStopId0}
		return json.Marshal(m)
	}
	if ty.IsClusterReport {
		m := map[string]interface{}{"WeteeWorkerPalletCall::cluster_report": map[string]interface{}{
			"AsClusterReportClusterId0": ty.AsClusterReportClusterId0,
			"AsClusterReportReason2":    ty.AsClusterReportReason2,
			"AsClusterReportWorkId1":    ty.AsClusterReportWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsReportClose {
		m := map[string]interface{}{"WeteeWorkerPalletCall::report_close": map[string]interface{}{
			"AsReportCloseClusterId0": ty.AsReportCloseClusterId0,
			"AsReportCloseWorkId1":    ty.AsReportCloseWorkId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkStop {
		m := map[string]interface{}{"WeteeWorkerPalletCall::work_stop": ty.AsWorkStopWorkId0}
		return json.Marshal(m)
	}
	if ty.IsInitMint {
		return json.Marshal("WeteeWorkerPalletCall::init_mint")
	}
	if ty.IsSetStage {
		m := map[string]interface{}{"WeteeWorkerPalletCall::set_stage": ty.AsSetStageStage0}
		return json.Marshal(m)
	}
	if ty.IsUploadCode {
		m := map[string]interface{}{"WeteeWorkerPalletCall::upload_code": map[string]interface{}{
			"AsUploadCodeSignature0": ty.AsUploadCodeSignature0,
			"AsUploadCodeSigner1":    ty.AsUploadCodeSigner1,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_primitives_types_P2PAddr with id={{false [212]}}
type P2PAddr struct {
	// Field 0 with TypeId=207
	Ip Ip
	// Field 1 with TypeId=78
	Port uint16
	// Field 2 with TypeId=0
	Id [32]byte
}

// Generated WeteeDsecretPalletCall with id=211
type WeteeDsecretPalletCall struct {
	IsRegisterNode              bool
	AsRegisterNodeSender0       [32]byte
	IsUploadCode                bool
	AsUploadCodeSignature0      []byte
	AsUploadCodeSigner1         []byte
	IsUploadClusterProof        bool
	AsUploadClusterProofCid0    uint64
	AsUploadClusterProofReport1 []byte
	AsUploadClusterProofPubs2   [][32]byte
	AsUploadClusterProofSigs3   []MultiSignature
	IsWorkLaunch                bool
	AsWorkLaunchWork0           WorkId
	AsWorkLaunchReport1         OptionTByteSlice
	AsWorkLaunchDeployKey2      [32]byte
	IsSetNodePubServer          bool
	AsSetNodePubServerId0       uint64
	AsSetNodePubServerServer1   P2PAddr
	IsSetBootPeers              bool
	AsSetBootPeersBoots0        []P2PAddr
}

func (ty WeteeDsecretPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsRegisterNode {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterNodeSender0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUploadCode {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadCodeSignature0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadCodeSigner1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUploadClusterProof {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadClusterProofCid0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadClusterProofReport1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadClusterProofPubs2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUploadClusterProofSigs3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorkLaunch {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkLaunchWork0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkLaunchReport1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkLaunchDeployKey2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetNodePubServer {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetNodePubServerId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetNodePubServerServer1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetBootPeers {
		err = encoder.PushByte(11)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetBootPeersBoots0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeDsecretPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsRegisterNode = true
		err = decoder.Decode(&ty.AsRegisterNodeSender0)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsUploadCode = true
		err = decoder.Decode(&ty.AsUploadCodeSignature0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUploadCodeSigner1)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsUploadClusterProof = true
		err = decoder.Decode(&ty.AsUploadClusterProofCid0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUploadClusterProofReport1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUploadClusterProofPubs2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUploadClusterProofSigs3)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsWorkLaunch = true
		err = decoder.Decode(&ty.AsWorkLaunchWork0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkLaunchReport1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsWorkLaunchDeployKey2)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsSetNodePubServer = true
		err = decoder.Decode(&ty.AsSetNodePubServerId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetNodePubServerServer1)
		if err != nil {
			return err
		}
		return
	case 11:
		ty.IsSetBootPeers = true
		err = decoder.Decode(&ty.AsSetBootPeersBoots0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeDsecretPalletCall) Variant() (uint8, error) {
	if ty.IsRegisterNode {
		return 1, nil
	}
	if ty.IsUploadCode {
		return 2, nil
	}
	if ty.IsUploadClusterProof {
		return 3, nil
	}
	if ty.IsWorkLaunch {
		return 4, nil
	}
	if ty.IsSetNodePubServer {
		return 5, nil
	}
	if ty.IsSetBootPeers {
		return 11, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeDsecretPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsRegisterNode {
		m := map[string]interface{}{"WeteeDsecretPalletCall::register_node": ty.AsRegisterNodeSender0}
		return json.Marshal(m)
	}
	if ty.IsUploadCode {
		m := map[string]interface{}{"WeteeDsecretPalletCall::upload_code": map[string]interface{}{
			"AsUploadCodeSignature0": ty.AsUploadCodeSignature0,
			"AsUploadCodeSigner1":    ty.AsUploadCodeSigner1,
		}}
		return json.Marshal(m)
	}
	if ty.IsUploadClusterProof {
		m := map[string]interface{}{"WeteeDsecretPalletCall::upload_cluster_proof": map[string]interface{}{
			"AsUploadClusterProofCid0":    ty.AsUploadClusterProofCid0,
			"AsUploadClusterProofPubs2":   ty.AsUploadClusterProofPubs2,
			"AsUploadClusterProofReport1": ty.AsUploadClusterProofReport1,
			"AsUploadClusterProofSigs3":   ty.AsUploadClusterProofSigs3,
		}}
		return json.Marshal(m)
	}
	if ty.IsWorkLaunch {
		m := map[string]interface{}{"WeteeDsecretPalletCall::work_launch": map[string]interface{}{
			"AsWorkLaunchDeployKey2": ty.AsWorkLaunchDeployKey2,
			"AsWorkLaunchReport1":    ty.AsWorkLaunchReport1,
			"AsWorkLaunchWork0":      ty.AsWorkLaunchWork0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetNodePubServer {
		m := map[string]interface{}{"WeteeDsecretPalletCall::set_node_pub_server": map[string]interface{}{
			"AsSetNodePubServerId0":     ty.AsSetNodePubServerId0,
			"AsSetNodePubServerServer1": ty.AsSetNodePubServerServer1,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetBootPeers {
		m := map[string]interface{}{"WeteeDsecretPalletCall::set_boot_peers": ty.AsSetBootPeersBoots0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_primitives_types_Api with id={{false [217]}}
type Api struct {
	// Field 0 with TypeId=14
	Url []byte
	// Field 1 with TypeId=2
	Method byte
}

// Generated wetee_primitives_types_ApiMeta with id={{false [215]}}
type ApiMeta struct {
	// Field 0 with TypeId=78
	Port uint16
	// Field 1 with TypeId=216
	Apis []Api
}

// Generated WeteeTeeBridgePalletCall with id=214
type WeteeTeeBridgePalletCall struct {
	IsInkCallback           bool
	AsInkCallbackClusterId0 uint64
	AsInkCallbackCallId1    types.U128
	AsInkCallbackArgs2      []InkArg
	AsInkCallbackValue3     types.U128
	AsInkCallbackError4     OptionTByteSlice
	IsCallInk               bool
	AsCallInkWorkId0        WorkId
	AsCallInkContract1      [20]byte
	AsCallInkMethod2        [4]byte
	AsCallInkArgs3          []InkArg
	AsCallInkValue4         types.U128
	IsSetTeeApi             bool
	AsSetTeeApiWorkId0      WorkId
	AsSetTeeApiMeta1        ApiMeta
	IsDeleteCall            bool
	AsDeleteCallClusterId0  uint64
	AsDeleteCallCallId1     types.U128
}

func (ty WeteeTeeBridgePalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsInkCallback {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInkCallbackClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInkCallbackCallId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInkCallbackArgs2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInkCallbackValue3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsInkCallbackError4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCallInk {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallInkWorkId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallInkContract1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallInkMethod2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallInkArgs3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCallInkValue4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetTeeApi {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetTeeApiWorkId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetTeeApiMeta1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeleteCall {
		err = encoder.PushByte(9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDeleteCallClusterId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDeleteCallCallId1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeTeeBridgePalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsInkCallback = true
		err = decoder.Decode(&ty.AsInkCallbackClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInkCallbackCallId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInkCallbackArgs2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInkCallbackValue3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsInkCallbackError4)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsCallInk = true
		err = decoder.Decode(&ty.AsCallInkWorkId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCallInkContract1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCallInkMethod2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCallInkArgs3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCallInkValue4)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsSetTeeApi = true
		err = decoder.Decode(&ty.AsSetTeeApiWorkId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetTeeApiMeta1)
		if err != nil {
			return err
		}
		return
	case 9:
		ty.IsDeleteCall = true
		err = decoder.Decode(&ty.AsDeleteCallClusterId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsDeleteCallCallId1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeTeeBridgePalletCall) Variant() (uint8, error) {
	if ty.IsInkCallback {
		return 1, nil
	}
	if ty.IsCallInk {
		return 2, nil
	}
	if ty.IsSetTeeApi {
		return 8, nil
	}
	if ty.IsDeleteCall {
		return 9, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeTeeBridgePalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsInkCallback {
		m := map[string]interface{}{"WeteeTeeBridgePalletCall::ink_callback": map[string]interface{}{
			"AsInkCallbackArgs2":      ty.AsInkCallbackArgs2,
			"AsInkCallbackCallId1":    ty.AsInkCallbackCallId1,
			"AsInkCallbackClusterId0": ty.AsInkCallbackClusterId0,
			"AsInkCallbackError4":     ty.AsInkCallbackError4,
			"AsInkCallbackValue3":     ty.AsInkCallbackValue3,
		}}
		return json.Marshal(m)
	}
	if ty.IsCallInk {
		m := map[string]interface{}{"WeteeTeeBridgePalletCall::call_ink": map[string]interface{}{
			"AsCallInkArgs3":     ty.AsCallInkArgs3,
			"AsCallInkContract1": ty.AsCallInkContract1,
			"AsCallInkMethod2":   ty.AsCallInkMethod2,
			"AsCallInkValue4":    ty.AsCallInkValue4,
			"AsCallInkWorkId0":   ty.AsCallInkWorkId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetTeeApi {
		m := map[string]interface{}{"WeteeTeeBridgePalletCall::set_tee_api": map[string]interface{}{
			"AsSetTeeApiMeta1":   ty.AsSetTeeApiMeta1,
			"AsSetTeeApiWorkId0": ty.AsSetTeeApiWorkId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsDeleteCall {
		m := map[string]interface{}{"WeteeTeeBridgePalletCall::delete_call": map[string]interface{}{
			"AsDeleteCallCallId1":    ty.AsDeleteCallCallId1,
			"AsDeleteCallClusterId0": ty.AsDeleteCallClusterId0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeMatrixStatus with id=220
type Status1 struct {
	IsActive   bool
	IsInActive bool
}

func (ty Status1) Encode(encoder scale.Encoder) (err error) {
	if ty.IsActive {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInActive {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Status1) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsActive = true
		return
	case 1:
		ty.IsInActive = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Status1) Variant() (uint8, error) {
	if ty.IsActive {
		return 0, nil
	}
	if ty.IsInActive {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Status1) MarshalJSON() ([]byte, error) {
	if ty.IsActive {
		return json.Marshal("Status1::Active")
	}
	if ty.IsInActive {
		return json.Marshal("Status1::InActive")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated Option with id=219
type OptionTStatus1 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 *Status1
}

func (ty OptionTStatus1) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTStatus1) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		var tmp Status1
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSomeField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTStatus1) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTStatus1) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTStatus1::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTStatus1::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeMatrixPalletCall with id=218
type WeteeMatrixPalletCall struct {
	IsCreateNode          bool
	AsCreateNodeName0     []byte
	AsCreateNodeDesc1     []byte
	AsCreateNodePurpose2  []byte
	AsCreateNodeMetaData3 []byte
	AsCreateNodeImApi4    []byte
	AsCreateNodeBg5       []byte
	AsCreateNodeLogo6     []byte
	AsCreateNodeImg7      []byte
	AsCreateNodeHomeUrl8  []byte
	IsUpdateNode          bool
	AsUpdateNodeNodeId0   types.U128
	AsUpdateNodeName1     OptionTByteSlice
	AsUpdateNodeDesc2     OptionTByteSlice
	AsUpdateNodePurpose3  OptionTByteSlice
	AsUpdateNodeMetaData4 OptionTByteSlice
	AsUpdateNodeImApi5    OptionTByteSlice
	AsUpdateNodeBg6       OptionTByteSlice
	AsUpdateNodeLogo7     OptionTByteSlice
	AsUpdateNodeImg8      OptionTByteSlice
	AsUpdateNodeHomeUrl9  OptionTByteSlice
	AsUpdateNodeStatus10  OptionTStatus1
}

func (ty WeteeMatrixPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCreateNode {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateNodeName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateNodeDesc1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateNodePurpose2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateNodeMetaData3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateNodeImApi4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateNodeBg5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateNodeLogo6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateNodeImg7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsCreateNodeHomeUrl8)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUpdateNode {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeNodeId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeName1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeDesc2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodePurpose3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeMetaData4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeImApi5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeBg6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeLogo7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeImg8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeHomeUrl9)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUpdateNodeStatus10)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeMatrixPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsCreateNode = true
		err = decoder.Decode(&ty.AsCreateNodeName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateNodeDesc1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateNodePurpose2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateNodeMetaData3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateNodeImApi4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateNodeBg5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateNodeLogo6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateNodeImg7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsCreateNodeHomeUrl8)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsUpdateNode = true
		err = decoder.Decode(&ty.AsUpdateNodeNodeId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodeName1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodeDesc2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodePurpose3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodeMetaData4)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodeImApi5)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodeBg6)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodeLogo7)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodeImg8)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodeHomeUrl9)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsUpdateNodeStatus10)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeMatrixPalletCall) Variant() (uint8, error) {
	if ty.IsCreateNode {
		return 1, nil
	}
	if ty.IsUpdateNode {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeMatrixPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsCreateNode {
		m := map[string]interface{}{"WeteeMatrixPalletCall::create_node": map[string]interface{}{
			"AsCreateNodeBg5":       ty.AsCreateNodeBg5,
			"AsCreateNodeDesc1":     ty.AsCreateNodeDesc1,
			"AsCreateNodeHomeUrl8":  ty.AsCreateNodeHomeUrl8,
			"AsCreateNodeImApi4":    ty.AsCreateNodeImApi4,
			"AsCreateNodeImg7":      ty.AsCreateNodeImg7,
			"AsCreateNodeLogo6":     ty.AsCreateNodeLogo6,
			"AsCreateNodeMetaData3": ty.AsCreateNodeMetaData3,
			"AsCreateNodeName0":     ty.AsCreateNodeName0,
			"AsCreateNodePurpose2":  ty.AsCreateNodePurpose2,
		}}
		return json.Marshal(m)
	}
	if ty.IsUpdateNode {
		m := map[string]interface{}{"WeteeMatrixPalletCall::update_node": map[string]interface{}{
			"AsUpdateNodeBg6":       ty.AsUpdateNodeBg6,
			"AsUpdateNodeDesc2":     ty.AsUpdateNodeDesc2,
			"AsUpdateNodeHomeUrl9":  ty.AsUpdateNodeHomeUrl9,
			"AsUpdateNodeImApi5":    ty.AsUpdateNodeImApi5,
			"AsUpdateNodeImg8":      ty.AsUpdateNodeImg8,
			"AsUpdateNodeLogo7":     ty.AsUpdateNodeLogo7,
			"AsUpdateNodeMetaData4": ty.AsUpdateNodeMetaData4,
			"AsUpdateNodeName1":     ty.AsUpdateNodeName1,
			"AsUpdateNodeNodeId0":   ty.AsUpdateNodeNodeId0,
			"AsUpdateNodePurpose3":  ty.AsUpdateNodePurpose3,
			"AsUpdateNodeStatus10":  ty.AsUpdateNodeStatus10,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeFairlanchPalletCall with id=221
type WeteeFairlanchPalletCall struct {
	IsVStaking                  bool
	AsVStakingVassetId0         uint64
	AsVStakingVamount1          types.U128
	IsVUnstaking                bool
	AsVUnstakingVassetId0       uint64
	AsVUnstakingAmount1         types.U128
	IsSetEconomics              bool
	AsSetEconomicsAssetId0      uint64
	AsSetEconomicsRewardRate1   byte
	AsSetEconomicsQuota2        types.U128
	IsRegisterVtoken            bool
	AsRegisterVtokenVassetId0   uint64
	AsRegisterVtokenAssetId1    uint64
	AsRegisterVtokenVassetPool2 types.U128
	AsRegisterVtokenAssetPool3  types.U128
	IsSetVtokenRate             bool
	AsSetVtokenRateVassetId0    uint64
	AsSetVtokenRateAssetId1     uint64
	AsSetVtokenRateVassetPool2  types.U128
	AsSetVtokenRateAssetPool3   types.U128
	IsDeleteEconomics           bool
	AsDeleteEconomicsAssetId0   uint64
	IsSetEpoch                  bool
}

func (ty WeteeFairlanchPalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsVStaking {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVStakingVassetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVStakingVamount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsVUnstaking {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVUnstakingVassetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsVUnstakingAmount1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetEconomics {
		err = encoder.PushByte(5)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetEconomicsAssetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetEconomicsRewardRate1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetEconomicsQuota2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRegisterVtoken {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterVtokenVassetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterVtokenAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterVtokenVassetPool2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterVtokenAssetPool3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetVtokenRate {
		err = encoder.PushByte(7)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetVtokenRateVassetId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetVtokenRateAssetId1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetVtokenRateVassetPool2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSetVtokenRateAssetPool3)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDeleteEconomics {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDeleteEconomicsAssetId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSetEpoch {
		err = encoder.PushByte(10)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeFairlanchPalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 3:
		ty.IsVStaking = true
		err = decoder.Decode(&ty.AsVStakingVassetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVStakingVamount1)
		if err != nil {
			return err
		}
		return
	case 4:
		ty.IsVUnstaking = true
		err = decoder.Decode(&ty.AsVUnstakingVassetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsVUnstakingAmount1)
		if err != nil {
			return err
		}
		return
	case 5:
		ty.IsSetEconomics = true
		err = decoder.Decode(&ty.AsSetEconomicsAssetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetEconomicsRewardRate1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetEconomicsQuota2)
		if err != nil {
			return err
		}
		return
	case 6:
		ty.IsRegisterVtoken = true
		err = decoder.Decode(&ty.AsRegisterVtokenVassetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRegisterVtokenAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRegisterVtokenVassetPool2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRegisterVtokenAssetPool3)
		if err != nil {
			return err
		}
		return
	case 7:
		ty.IsSetVtokenRate = true
		err = decoder.Decode(&ty.AsSetVtokenRateVassetId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetVtokenRateAssetId1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetVtokenRateVassetPool2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsSetVtokenRateAssetPool3)
		if err != nil {
			return err
		}
		return
	case 8:
		ty.IsDeleteEconomics = true
		err = decoder.Decode(&ty.AsDeleteEconomicsAssetId0)
		if err != nil {
			return err
		}
		return
	case 10:
		ty.IsSetEpoch = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeFairlanchPalletCall) Variant() (uint8, error) {
	if ty.IsVStaking {
		return 3, nil
	}
	if ty.IsVUnstaking {
		return 4, nil
	}
	if ty.IsSetEconomics {
		return 5, nil
	}
	if ty.IsRegisterVtoken {
		return 6, nil
	}
	if ty.IsSetVtokenRate {
		return 7, nil
	}
	if ty.IsDeleteEconomics {
		return 8, nil
	}
	if ty.IsSetEpoch {
		return 10, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeFairlanchPalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsVStaking {
		m := map[string]interface{}{"WeteeFairlanchPalletCall::v_staking": map[string]interface{}{
			"AsVStakingVamount1":  ty.AsVStakingVamount1,
			"AsVStakingVassetId0": ty.AsVStakingVassetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsVUnstaking {
		m := map[string]interface{}{"WeteeFairlanchPalletCall::v_unstaking": map[string]interface{}{
			"AsVUnstakingAmount1":   ty.AsVUnstakingAmount1,
			"AsVUnstakingVassetId0": ty.AsVUnstakingVassetId0,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetEconomics {
		m := map[string]interface{}{"WeteeFairlanchPalletCall::set_economics": map[string]interface{}{
			"AsSetEconomicsAssetId0":    ty.AsSetEconomicsAssetId0,
			"AsSetEconomicsQuota2":      ty.AsSetEconomicsQuota2,
			"AsSetEconomicsRewardRate1": ty.AsSetEconomicsRewardRate1,
		}}
		return json.Marshal(m)
	}
	if ty.IsRegisterVtoken {
		m := map[string]interface{}{"WeteeFairlanchPalletCall::register_vtoken": map[string]interface{}{
			"AsRegisterVtokenAssetId1":    ty.AsRegisterVtokenAssetId1,
			"AsRegisterVtokenAssetPool3":  ty.AsRegisterVtokenAssetPool3,
			"AsRegisterVtokenVassetId0":   ty.AsRegisterVtokenVassetId0,
			"AsRegisterVtokenVassetPool2": ty.AsRegisterVtokenVassetPool2,
		}}
		return json.Marshal(m)
	}
	if ty.IsSetVtokenRate {
		m := map[string]interface{}{"WeteeFairlanchPalletCall::set_vtoken_rate": map[string]interface{}{
			"AsSetVtokenRateAssetId1":    ty.AsSetVtokenRateAssetId1,
			"AsSetVtokenRateAssetPool3":  ty.AsSetVtokenRateAssetPool3,
			"AsSetVtokenRateVassetId0":   ty.AsSetVtokenRateVassetId0,
			"AsSetVtokenRateVassetPool2": ty.AsSetVtokenRateVassetPool2,
		}}
		return json.Marshal(m)
	}
	if ty.IsDeleteEconomics {
		m := map[string]interface{}{"WeteeFairlanchPalletCall::delete_economics": ty.AsDeleteEconomicsAssetId0}
		return json.Marshal(m)
	}
	if ty.IsSetEpoch {
		return json.Marshal("WeteeFairlanchPalletCall::set_epoch")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeStoreTypesAppType with id=223
type AppType struct {
	IsService bool
	IsTask    bool
	IsAi      bool
}

func (ty AppType) Encode(encoder scale.Encoder) (err error) {
	if ty.IsService {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTask {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAi {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *AppType) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsService = true
		return
	case 1:
		ty.IsTask = true
		return
	case 2:
		ty.IsAi = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *AppType) Variant() (uint8, error) {
	if ty.IsService {
		return 0, nil
	}
	if ty.IsTask {
		return 1, nil
	}
	if ty.IsAi {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty AppType) MarshalJSON() ([]byte, error) {
	if ty.IsService {
		return json.Marshal("AppType::Service")
	}
	if ty.IsTask {
		return json.Marshal("AppType::Task")
	}
	if ty.IsAi {
		return json.Marshal("AppType::Ai")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_store_types_Env with id={{false [227]}}
type Env struct {
	// Field 0 with TypeId=14
	K []byte
	// Field 1 with TypeId=14
	V []byte
}

// Generated wetee_store_types_Image with id={{false [225]}}
type Image struct {
	// Field 0 with TypeId=14
	I []byte
	// Field 1 with TypeId=184
	P []Service
	// Field 2 with TypeId=226
	E []Env
	// Field 3 with TypeId=186
	C Command
	// Field 4 with TypeId=4
	Cpu uint32
	// Field 5 with TypeId=4
	Memory uint32
	// Field 6 with TypeId=191
	Disk []Disk
	// Field 7 with TypeId=4
	Gpu uint32
}

// Generated WeteeStorePalletCall with id=222
type WeteeStorePalletCall struct {
	IsRegisterApp           bool
	AsRegisterAppName0      []byte
	AsRegisterAppMeta1      []byte
	AsRegisterAppTy2        AppType
	AsRegisterAppImages3    []Image
	AsRegisterAppRun4       TEEVersion
	IsUnregisterApp         bool
	AsUnregisterAppAppId0   types.U128
	IsAddAppVersion         bool
	AsAddAppVersionAppId0   types.U128
	AsAddAppVersionVersion1 uint16
	AsAddAppVersionImages2  []Image
	IsReviewApp             bool
	AsReviewAppAppId0       types.U128
	AsReviewAppTokenId1     uint64
	IsInitMint              bool
}

func (ty WeteeStorePalletCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsRegisterApp {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterAppName0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterAppMeta1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterAppTy2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterAppImages3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRegisterAppRun4)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUnregisterApp {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUnregisterAppAppId0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAddAppVersion {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAddAppVersionAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAddAppVersionVersion1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAddAppVersionImages2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsReviewApp {
		err = encoder.PushByte(50)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReviewAppAppId0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReviewAppTokenId1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInitMint {
		err = encoder.PushByte(51)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *WeteeStorePalletCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 1:
		ty.IsRegisterApp = true
		err = decoder.Decode(&ty.AsRegisterAppName0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRegisterAppMeta1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRegisterAppTy2)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRegisterAppImages3)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsRegisterAppRun4)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsUnregisterApp = true
		err = decoder.Decode(&ty.AsUnregisterAppAppId0)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsAddAppVersion = true
		err = decoder.Decode(&ty.AsAddAppVersionAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsAddAppVersionVersion1)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsAddAppVersionImages2)
		if err != nil {
			return err
		}
		return
	case 50:
		ty.IsReviewApp = true
		err = decoder.Decode(&ty.AsReviewAppAppId0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsReviewAppTokenId1)
		if err != nil {
			return err
		}
		return
	case 51:
		ty.IsInitMint = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *WeteeStorePalletCall) Variant() (uint8, error) {
	if ty.IsRegisterApp {
		return 1, nil
	}
	if ty.IsUnregisterApp {
		return 2, nil
	}
	if ty.IsAddAppVersion {
		return 3, nil
	}
	if ty.IsReviewApp {
		return 50, nil
	}
	if ty.IsInitMint {
		return 51, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty WeteeStorePalletCall) MarshalJSON() ([]byte, error) {
	if ty.IsRegisterApp {
		m := map[string]interface{}{"WeteeStorePalletCall::register_app": map[string]interface{}{
			"AsRegisterAppImages3": ty.AsRegisterAppImages3,
			"AsRegisterAppMeta1":   ty.AsRegisterAppMeta1,
			"AsRegisterAppName0":   ty.AsRegisterAppName0,
			"AsRegisterAppRun4":    ty.AsRegisterAppRun4,
			"AsRegisterAppTy2":     ty.AsRegisterAppTy2,
		}}
		return json.Marshal(m)
	}
	if ty.IsUnregisterApp {
		m := map[string]interface{}{"WeteeStorePalletCall::unregister_app": ty.AsUnregisterAppAppId0}
		return json.Marshal(m)
	}
	if ty.IsAddAppVersion {
		m := map[string]interface{}{"WeteeStorePalletCall::add_app_version": map[string]interface{}{
			"AsAddAppVersionAppId0":   ty.AsAddAppVersionAppId0,
			"AsAddAppVersionImages2":  ty.AsAddAppVersionImages2,
			"AsAddAppVersionVersion1": ty.AsAddAppVersionVersion1,
		}}
		return json.Marshal(m)
	}
	if ty.IsReviewApp {
		m := map[string]interface{}{"WeteeStorePalletCall::review_app": map[string]interface{}{
			"AsReviewAppAppId0":   ty.AsReviewAppAppId0,
			"AsReviewAppTokenId1": ty.AsReviewAppTokenId1,
		}}
		return json.Marshal(m)
	}
	if ty.IsInitMint {
		return json.Marshal("WeteeStorePalletCall::init_mint")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeRuntimeRuntimeCall with id=155
type RuntimeCall struct {
	IsSystem               bool
	AsSystemField0         *FrameSystemPalletCall
	IsTimestamp            bool
	AsTimestampField0      *PalletTimestampPalletCall
	IsGrandpa              bool
	AsGrandpaField0        *PalletGrandpaPalletCall
	IsBalances             bool
	AsBalancesField0       *PalletBalancesPalletCall
	IsSudo                 bool
	AsSudoField0           *PalletSudoPalletCall
	IsRevive               bool
	AsReviveField0         *PalletRevivePalletCall
	IsTokens               bool
	AsTokensField0         *OrmlTokensModuleCall
	IsWeMessageQueue       bool
	AsWeMessageQueueField0 *WeteeMessageQueuePalletCall
	IsUtility              bool
	AsUtilityField0        *PalletUtilityPalletCall
	IsDao                  bool
	AsDaoField0            *WeteeDaoPalletCall
	IsAsset                bool
	AsAssetField0          *WeteeAssetsPalletCall
	IsWeSudo               bool
	AsWeSudoField0         *WeteeSudoPalletCall
	IsGuild                bool
	AsGuildField0          *WeteeGuildPalletCall
	IsProject              bool
	AsProjectField0        *WeteeProjectPalletCall
	IsGov                  bool
	AsGovField0            *WeteeGovPalletCall
	IsTreasury             bool
	AsTreasuryField0       *WeteeTreasuryPalletCall
	IsApp                  bool
	AsAppField0            *WeteeAppPalletCall
	IsTask                 bool
	AsTaskField0           *WeteeTaskPalletCall
	IsGpu                  bool
	AsGpuField0            *WeteeGpuPalletCall
	IsWorker               bool
	AsWorkerField0         *WeteeWorkerPalletCall
	IsDSecret              bool
	AsDSecretField0        *WeteeDsecretPalletCall
	IsBridge               bool
	AsBridgeField0         *WeteeTeeBridgePalletCall
	IsMatrix               bool
	AsMatrixField0         *WeteeMatrixPalletCall
	IsFairlanch            bool
	AsFairlanchField0      *WeteeFairlanchPalletCall
	IsStore                bool
	AsStoreField0          *WeteeStorePalletCall
}

func (ty RuntimeCall) Encode(encoder scale.Encoder) (err error) {
	if ty.IsSystem {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSystemField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTimestamp {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTimestampField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGrandpa {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGrandpaField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBalances {
		err = encoder.PushByte(4)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBalancesField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSudo {
		err = encoder.PushByte(6)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSudoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRevive {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReviveField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTokens {
		err = encoder.PushByte(101)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTokensField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeMessageQueue {
		err = encoder.PushByte(103)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeMessageQueueField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsUtility {
		err = encoder.PushByte(104)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsUtilityField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDao {
		err = encoder.PushByte(105)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDaoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAsset {
		err = encoder.PushByte(106)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAssetField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWeSudo {
		err = encoder.PushByte(107)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWeSudoField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGuild {
		err = encoder.PushByte(108)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGuildField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsProject {
		err = encoder.PushByte(109)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsProjectField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGov {
		err = encoder.PushByte(110)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGovField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTreasury {
		err = encoder.PushByte(111)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTreasuryField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsApp {
		err = encoder.PushByte(112)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsAppField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTask {
		err = encoder.PushByte(113)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTaskField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsGpu {
		err = encoder.PushByte(114)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsGpuField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsWorker {
		err = encoder.PushByte(115)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsWorkerField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDSecret {
		err = encoder.PushByte(117)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsDSecretField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsBridge {
		err = encoder.PushByte(118)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsBridgeField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMatrix {
		err = encoder.PushByte(119)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsMatrixField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsFairlanch {
		err = encoder.PushByte(120)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsFairlanchField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStore {
		err = encoder.PushByte(124)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStoreField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *RuntimeCall) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsSystem = true
		var tmp FrameSystemPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSystemField0 = &tmp
		return
	case 1:
		ty.IsTimestamp = true
		var tmp PalletTimestampPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTimestampField0 = &tmp
		return
	case 3:
		ty.IsGrandpa = true
		var tmp PalletGrandpaPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGrandpaField0 = &tmp
		return
	case 4:
		ty.IsBalances = true
		var tmp PalletBalancesPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsBalancesField0 = &tmp
		return
	case 6:
		ty.IsSudo = true
		var tmp PalletSudoPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsSudoField0 = &tmp
		return
	case 8:
		ty.IsRevive = true
		var tmp PalletRevivePalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsReviveField0 = &tmp
		return
	case 101:
		ty.IsTokens = true
		var tmp OrmlTokensModuleCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTokensField0 = &tmp
		return
	case 103:
		ty.IsWeMessageQueue = true
		var tmp WeteeMessageQueuePalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeMessageQueueField0 = &tmp
		return
	case 104:
		ty.IsUtility = true
		var tmp PalletUtilityPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsUtilityField0 = &tmp
		return
	case 105:
		ty.IsDao = true
		var tmp WeteeDaoPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsDaoField0 = &tmp
		return
	case 106:
		ty.IsAsset = true
		var tmp WeteeAssetsPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsAssetField0 = &tmp
		return
	case 107:
		ty.IsWeSudo = true
		var tmp WeteeSudoPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWeSudoField0 = &tmp
		return
	case 108:
		ty.IsGuild = true
		var tmp WeteeGuildPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGuildField0 = &tmp
		return
	case 109:
		ty.IsProject = true
		var tmp WeteeProjectPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsProjectField0 = &tmp
		return
	case 110:
		ty.IsGov = true
		var tmp WeteeGovPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGovField0 = &tmp
		return
	case 111:
		ty.IsTreasury = true
		var tmp WeteeTreasuryPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTreasuryField0 = &tmp
		return
	case 112:
		ty.IsApp = true
		var tmp WeteeAppPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsAppField0 = &tmp
		return
	case 113:
		ty.IsTask = true
		var tmp WeteeTaskPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsTaskField0 = &tmp
		return
	case 114:
		ty.IsGpu = true
		var tmp WeteeGpuPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsGpuField0 = &tmp
		return
	case 115:
		ty.IsWorker = true
		var tmp WeteeWorkerPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsWorkerField0 = &tmp
		return
	case 117:
		ty.IsDSecret = true
		var tmp WeteeDsecretPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsDSecretField0 = &tmp
		return
	case 118:
		ty.IsBridge = true
		var tmp WeteeTeeBridgePalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsBridgeField0 = &tmp
		return
	case 119:
		ty.IsMatrix = true
		var tmp WeteeMatrixPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsMatrixField0 = &tmp
		return
	case 120:
		ty.IsFairlanch = true
		var tmp WeteeFairlanchPalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsFairlanchField0 = &tmp
		return
	case 124:
		ty.IsStore = true
		var tmp WeteeStorePalletCall
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsStoreField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *RuntimeCall) Variant() (uint8, error) {
	if ty.IsSystem {
		return 0, nil
	}
	if ty.IsTimestamp {
		return 1, nil
	}
	if ty.IsGrandpa {
		return 3, nil
	}
	if ty.IsBalances {
		return 4, nil
	}
	if ty.IsSudo {
		return 6, nil
	}
	if ty.IsRevive {
		return 8, nil
	}
	if ty.IsTokens {
		return 101, nil
	}
	if ty.IsWeMessageQueue {
		return 103, nil
	}
	if ty.IsUtility {
		return 104, nil
	}
	if ty.IsDao {
		return 105, nil
	}
	if ty.IsAsset {
		return 106, nil
	}
	if ty.IsWeSudo {
		return 107, nil
	}
	if ty.IsGuild {
		return 108, nil
	}
	if ty.IsProject {
		return 109, nil
	}
	if ty.IsGov {
		return 110, nil
	}
	if ty.IsTreasury {
		return 111, nil
	}
	if ty.IsApp {
		return 112, nil
	}
	if ty.IsTask {
		return 113, nil
	}
	if ty.IsGpu {
		return 114, nil
	}
	if ty.IsWorker {
		return 115, nil
	}
	if ty.IsDSecret {
		return 117, nil
	}
	if ty.IsBridge {
		return 118, nil
	}
	if ty.IsMatrix {
		return 119, nil
	}
	if ty.IsFairlanch {
		return 120, nil
	}
	if ty.IsStore {
		return 124, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty RuntimeCall) MarshalJSON() ([]byte, error) {
	if ty.IsSystem {
		m := map[string]interface{}{"RuntimeCall::System": ty.AsSystemField0}
		return json.Marshal(m)
	}
	if ty.IsTimestamp {
		m := map[string]interface{}{"RuntimeCall::Timestamp": ty.AsTimestampField0}
		return json.Marshal(m)
	}
	if ty.IsGrandpa {
		m := map[string]interface{}{"RuntimeCall::Grandpa": ty.AsGrandpaField0}
		return json.Marshal(m)
	}
	if ty.IsBalances {
		m := map[string]interface{}{"RuntimeCall::Balances": ty.AsBalancesField0}
		return json.Marshal(m)
	}
	if ty.IsSudo {
		m := map[string]interface{}{"RuntimeCall::Sudo": ty.AsSudoField0}
		return json.Marshal(m)
	}
	if ty.IsRevive {
		m := map[string]interface{}{"RuntimeCall::Revive": ty.AsReviveField0}
		return json.Marshal(m)
	}
	if ty.IsTokens {
		m := map[string]interface{}{"RuntimeCall::Tokens": ty.AsTokensField0}
		return json.Marshal(m)
	}
	if ty.IsWeMessageQueue {
		m := map[string]interface{}{"RuntimeCall::WeMessageQueue": ty.AsWeMessageQueueField0}
		return json.Marshal(m)
	}
	if ty.IsUtility {
		m := map[string]interface{}{"RuntimeCall::Utility": ty.AsUtilityField0}
		return json.Marshal(m)
	}
	if ty.IsDao {
		m := map[string]interface{}{"RuntimeCall::Dao": ty.AsDaoField0}
		return json.Marshal(m)
	}
	if ty.IsAsset {
		m := map[string]interface{}{"RuntimeCall::Asset": ty.AsAssetField0}
		return json.Marshal(m)
	}
	if ty.IsWeSudo {
		m := map[string]interface{}{"RuntimeCall::WeSudo": ty.AsWeSudoField0}
		return json.Marshal(m)
	}
	if ty.IsGuild {
		m := map[string]interface{}{"RuntimeCall::Guild": ty.AsGuildField0}
		return json.Marshal(m)
	}
	if ty.IsProject {
		m := map[string]interface{}{"RuntimeCall::Project": ty.AsProjectField0}
		return json.Marshal(m)
	}
	if ty.IsGov {
		m := map[string]interface{}{"RuntimeCall::Gov": ty.AsGovField0}
		return json.Marshal(m)
	}
	if ty.IsTreasury {
		m := map[string]interface{}{"RuntimeCall::Treasury": ty.AsTreasuryField0}
		return json.Marshal(m)
	}
	if ty.IsApp {
		m := map[string]interface{}{"RuntimeCall::App": ty.AsAppField0}
		return json.Marshal(m)
	}
	if ty.IsTask {
		m := map[string]interface{}{"RuntimeCall::Task": ty.AsTaskField0}
		return json.Marshal(m)
	}
	if ty.IsGpu {
		m := map[string]interface{}{"RuntimeCall::Gpu": ty.AsGpuField0}
		return json.Marshal(m)
	}
	if ty.IsWorker {
		m := map[string]interface{}{"RuntimeCall::Worker": ty.AsWorkerField0}
		return json.Marshal(m)
	}
	if ty.IsDSecret {
		m := map[string]interface{}{"RuntimeCall::DSecret": ty.AsDSecretField0}
		return json.Marshal(m)
	}
	if ty.IsBridge {
		m := map[string]interface{}{"RuntimeCall::Bridge": ty.AsBridgeField0}
		return json.Marshal(m)
	}
	if ty.IsMatrix {
		m := map[string]interface{}{"RuntimeCall::Matrix": ty.AsMatrixField0}
		return json.Marshal(m)
	}
	if ty.IsFairlanch {
		m := map[string]interface{}{"RuntimeCall::Fairlanch": ty.AsFairlanchField0}
		return json.Marshal(m)
	}
	if ty.IsStore {
		m := map[string]interface{}{"RuntimeCall::Store": ty.AsStoreField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated PalletGrandpaStoredState with id=114
type StoredState struct {
	IsLive                      bool
	IsPendingPause              bool
	AsPendingPauseScheduledAt0  uint32
	AsPendingPauseDelay1        uint32
	IsPaused                    bool
	IsPendingResume             bool
	AsPendingResumeScheduledAt0 uint32
	AsPendingResumeDelay1       uint32
}

func (ty StoredState) Encode(encoder scale.Encoder) (err error) {
	if ty.IsLive {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPendingPause {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPendingPauseScheduledAt0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPendingPauseDelay1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPaused {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPendingResume {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPendingResumeScheduledAt0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsPendingResumeDelay1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *StoredState) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsLive = true
		return
	case 1:
		ty.IsPendingPause = true
		err = decoder.Decode(&ty.AsPendingPauseScheduledAt0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPendingPauseDelay1)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsPaused = true
		return
	case 3:
		ty.IsPendingResume = true
		err = decoder.Decode(&ty.AsPendingResumeScheduledAt0)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsPendingResumeDelay1)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *StoredState) Variant() (uint8, error) {
	if ty.IsLive {
		return 0, nil
	}
	if ty.IsPendingPause {
		return 1, nil
	}
	if ty.IsPaused {
		return 2, nil
	}
	if ty.IsPendingResume {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty StoredState) MarshalJSON() ([]byte, error) {
	if ty.IsLive {
		return json.Marshal("StoredState::Live")
	}
	if ty.IsPendingPause {
		m := map[string]interface{}{"StoredState::PendingPause": map[string]interface{}{
			"AsPendingPauseDelay1":       ty.AsPendingPauseDelay1,
			"AsPendingPauseScheduledAt0": ty.AsPendingPauseScheduledAt0,
		}}
		return json.Marshal(m)
	}
	if ty.IsPaused {
		return json.Marshal("StoredState::Paused")
	}
	if ty.IsPendingResume {
		m := map[string]interface{}{"StoredState::PendingResume": map[string]interface{}{
			"AsPendingResumeDelay1":       ty.AsPendingResumeDelay1,
			"AsPendingResumeScheduledAt0": ty.AsPendingResumeScheduledAt0,
		}}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated pallet_grandpa_StoredPendingChange with id={{false [115]}}
type StoredPendingChange struct {
	// Field 0 with TypeId=4
	ScheduledAt uint32
	// Field 1 with TypeId=4
	Delay uint32
	// Field 2 with TypeId=116
	NextAuthorities []TupleOfByteArray32Uint64
	// Field 3 with TypeId=117
	Forced OptionTUint32
}

// Generated PalletBalancesTypesReasons with id=132
type Reasons struct {
	IsFee  bool
	IsMisc bool
	IsAll  bool
}

func (ty Reasons) Encode(encoder scale.Encoder) (err error) {
	if ty.IsFee {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsMisc {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAll {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Reasons) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsFee = true
		return
	case 1:
		ty.IsMisc = true
		return
	case 2:
		ty.IsAll = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Reasons) Variant() (uint8, error) {
	if ty.IsFee {
		return 0, nil
	}
	if ty.IsMisc {
		return 1, nil
	}
	if ty.IsAll {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Reasons) MarshalJSON() ([]byte, error) {
	if ty.IsFee {
		return json.Marshal("Reasons::Fee")
	}
	if ty.IsMisc {
		return json.Marshal("Reasons::Misc")
	}
	if ty.IsAll {
		return json.Marshal("Reasons::All")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated pallet_balances_types_BalanceLock with id={{false [131]}}
type BalanceLock struct {
	// Field 0 with TypeId=48
	Id [8]byte
	// Field 1 with TypeId=6
	Amount types.U128
	// Field 2 with TypeId=132
	Reasons Reasons
}

// Generated pallet_balances_types_ReserveData with id={{false [135]}}
type ReserveData struct {
	// Field 0 with TypeId=48
	Id [8]byte
	// Field 1 with TypeId=6
	Amount types.U128
}

// Generated PalletRevivePalletHoldReason with id=140
type HoldReason struct {
	IsCodeUploadDepositReserve bool
	IsStorageDepositReserve    bool
	IsAddressMapping           bool
}

func (ty HoldReason) Encode(encoder scale.Encoder) (err error) {
	if ty.IsCodeUploadDepositReserve {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStorageDepositReserve {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsAddressMapping {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *HoldReason) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsCodeUploadDepositReserve = true
		return
	case 1:
		ty.IsStorageDepositReserve = true
		return
	case 2:
		ty.IsAddressMapping = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *HoldReason) Variant() (uint8, error) {
	if ty.IsCodeUploadDepositReserve {
		return 0, nil
	}
	if ty.IsStorageDepositReserve {
		return 1, nil
	}
	if ty.IsAddressMapping {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty HoldReason) MarshalJSON() ([]byte, error) {
	if ty.IsCodeUploadDepositReserve {
		return json.Marshal("HoldReason::CodeUploadDepositReserve")
	}
	if ty.IsStorageDepositReserve {
		return json.Marshal("HoldReason::StorageDepositReserve")
	}
	if ty.IsAddressMapping {
		return json.Marshal("HoldReason::AddressMapping")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeRuntimeRuntimeHoldReason with id=139
type RuntimeHoldReason struct {
	IsRevive       bool
	AsReviveField0 *HoldReason
}

func (ty RuntimeHoldReason) Encode(encoder scale.Encoder) (err error) {
	if ty.IsRevive {
		err = encoder.PushByte(8)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsReviveField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *RuntimeHoldReason) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 8:
		ty.IsRevive = true
		var tmp HoldReason
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsReviveField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *RuntimeHoldReason) Variant() (uint8, error) {
	if ty.IsRevive {
		return 8, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty RuntimeHoldReason) MarshalJSON() ([]byte, error) {
	if ty.IsRevive {
		m := map[string]interface{}{"RuntimeHoldReason::Revive": ty.AsReviveField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated frame_support_traits_tokens_misc_IdAmount with id={{false [138]}}
type IdAmount struct {
	// Field 0 with TypeId=139
	Id RuntimeHoldReason
	// Field 1 with TypeId=6
	Amount types.U128
}

// Generated frame_support_traits_tokens_misc_IdAmount with id={{false [143]}}
type IdAmountIdStruct struct {
	// Field 0 with TypeId=144
	Id struct{}
	// Field 1 with TypeId=6
	Amount types.U128
}

// Generated PalletTransactionPaymentReleases with id=153
type Releases struct {
	IsV1Ancient bool
	IsV2        bool
}

func (ty Releases) Encode(encoder scale.Encoder) (err error) {
	if ty.IsV1Ancient {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsV2 {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Releases) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsV1Ancient = true
		return
	case 1:
		ty.IsV2 = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Releases) Variant() (uint8, error) {
	if ty.IsV1Ancient {
		return 0, nil
	}
	if ty.IsV2 {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Releases) MarshalJSON() ([]byte, error) {
	if ty.IsV1Ancient {
		return json.Marshal("Releases::V1Ancient")
	}
	if ty.IsV2 {
		return json.Marshal("Releases::V2")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated pallet_revive_wasm_CodeInfo with id={{false [230]}}
type CodeInfo struct {
	// Field 0 with TypeId=0
	Owner [32]byte
	// Field 1 with TypeId=149
	Deposit types.UCompact
	// Field 2 with TypeId=11
	Refcount types.UCompact
	// Field 3 with TypeId=4
	CodeLen uint32
	// Field 4 with TypeId=4
	BehaviourVersion uint32
}

// Generated pallet_revive_storage_ContractInfo with id={{false [231]}}
type ContractInfo struct {
	// Field 0 with TypeId=232
	TrieId []byte
	// Field 1 with TypeId=13
	CodeHash [32]byte
	// Field 2 with TypeId=4
	StorageBytes uint32
	// Field 3 with TypeId=4
	StorageItems uint32
	// Field 4 with TypeId=6
	StorageByteDeposit types.U128
	// Field 5 with TypeId=6
	StorageItemDeposit types.U128
	// Field 6 with TypeId=6
	StorageBaseDeposit types.U128
	// Field 7 with TypeId=4
	ImmutableDataLen uint32
}

// Generated pallet_revive_storage_DeletionQueueManager with id={{false [234]}}
type DeletionQueueManager struct {
	// Field 0 with TypeId=4
	InsertCounter uint32
	// Field 1 with TypeId=4
	DeleteCounter uint32
}

// Tuple type generated from metadata id 237
type TupleOfByteArray32Uint641 struct {
	Elem0 [32]byte
	Elem1 uint64
}

// Generated orml_tokens_BalanceLock with id={{false [239]}}
type BalanceLock1 struct {
	// Field 0 with TypeId=48
	Id [8]byte
	// Field 1 with TypeId=6
	Amount types.U128
}

// Generated orml_tokens_AccountData with id={{false [241]}}
type AccountData1 struct {
	// Field 0 with TypeId=6
	Free types.U128
	// Field 1 with TypeId=6
	Reserved types.U128
	// Field 2 with TypeId=6
	Frozen types.U128
}

// Generated orml_tokens_ReserveData with id={{false [243]}}
type ReserveDataReserveIdentifierByteArray8 struct {
	// Field 0 with TypeId=48
	Id [8]byte
	// Field 1 with TypeId=6
	Amount types.U128
}

// Generated wetee_message_queue_Neighbours with id={{false [249]}}
type Neighbours struct {
	// Field 0 with TypeId=50
	Prev MessageOrigin
	// Field 1 with TypeId=50
	Next MessageOrigin
}

// Generated Option with id=248
type OptionTNeighbours struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 Neighbours
}

func (ty OptionTNeighbours) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTNeighbours) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTNeighbours) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTNeighbours) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTNeighbours::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTNeighbours::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_message_queue_BookState with id={{false [247]}}
type BookState struct {
	// Field 0 with TypeId=4
	Begin uint32
	// Field 1 with TypeId=4
	End uint32
	// Field 2 with TypeId=4
	Count uint32
	// Field 3 with TypeId=248
	ReadyNeighbours OptionTNeighbours
	// Field 4 with TypeId=12
	MessageCount uint64
	// Field 5 with TypeId=12
	Size uint64
}

// Tuple type generated from metadata id 250
type TupleOfMessageOriginUint32 struct {
	Elem0 MessageOrigin
	Elem1 uint32
}

// Generated wetee_message_queue_Page with id={{false [251]}}
type Page struct {
	// Field 0 with TypeId=4
	Remaining uint32
	// Field 1 with TypeId=4
	RemainingSize uint32
	// Field 2 with TypeId=4
	FirstIndex uint32
	// Field 3 with TypeId=4
	First uint32
	// Field 4 with TypeId=4
	Last uint32
	// Field 5 with TypeId=252
	Heap []byte
}

// Generated wetee_dao_OrgInfo with id={{false [255]}}
type OrgInfo struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=4
	StartBlock uint32
	// Field 3 with TypeId=0
	DaoAccountId [32]byte
	// Field 4 with TypeId=14
	Name []byte
	// Field 5 with TypeId=14
	Desc []byte
	// Field 6 with TypeId=14
	Purpose []byte
	// Field 7 with TypeId=14
	MetaData []byte
	// Field 8 with TypeId=167
	Status Status
}

// Generated wetee_dao_GuildInfo with id={{false [257]}}
type GuildInfo struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=4
	StartBlock uint32
	// Field 3 with TypeId=0
	DaoAccountId [32]byte
	// Field 4 with TypeId=14
	Name []byte
	// Field 5 with TypeId=14
	Desc []byte
	// Field 6 with TypeId=14
	MetaData []byte
	// Field 7 with TypeId=167
	Status Status
}

// Tuple type generated from metadata id 259
type TupleOfUint64Uint32 struct {
	Elem0 uint64
	Elem1 uint32
}

// Generated wetee_dao_QuarterTask with id={{false [261]}}
type QuarterTask struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=14
	Name []byte
	// Field 2 with TypeId=2
	Priority byte
	// Field 3 with TypeId=0
	Creator [32]byte
	// Field 4 with TypeId=14
	Tags []byte
	// Field 5 with TypeId=2
	Status byte
}

// Tuple type generated from metadata id 264
type TupleOfUint64Uint64 struct {
	Elem0 uint64
	Elem1 uint64
}

// Generated wetee_dao_App with id={{false [265]}}
type App struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=14
	Url []byte
	// Field 2 with TypeId=14
	Name []byte
	// Field 3 with TypeId=14
	Desc []byte
	// Field 4 with TypeId=14
	Icon []byte
	// Field 5 with TypeId=0
	Creator [32]byte
	// Field 6 with TypeId=167
	Status Status
}

// Generated wetee_dao_OrgApp with id={{false [267]}}
type OrgApp struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=12
	AppId uint64
	// Field 2 with TypeId=4
	StartBlock uint32
	// Field 3 with TypeId=14
	Name []byte
	// Field 4 with TypeId=14
	Desc []byte
	// Field 5 with TypeId=14
	Icon []byte
	// Field 6 with TypeId=14
	Url []byte
	// Field 7 with TypeId=167
	Status Status
}

// Tuple type generated from metadata id 269
type TupleOfUint64ByteArray32 struct {
	Elem0 uint64
	Elem1 [32]byte
}

// Generated wetee_assets_AssetInfo with id={{false [272]}}
type AssetInfo struct {
	// Field 0 with TypeId=0
	Owner [32]byte
	// Field 1 with TypeId=56
	Metadata AssetMeta
}

// Tuple type generated from metadata id 273
type TupleOfUint32ByteSlice struct {
	Elem0 uint32
	Elem1 []byte
}

// Generated wetee_sudo_SudoTask with id={{false [276]}}
type SudoTask struct {
	// Field 0 with TypeId=4
	Id uint32
	// Field 1 with TypeId=155
	Proposal RuntimeCall
	// Field 2 with TypeId=4
	Time uint32
}

// Generated WeteeProjectStatus with id=282
type Status2 struct {
	IsActive   bool
	IsInActive bool
}

func (ty Status2) Encode(encoder scale.Encoder) (err error) {
	if ty.IsActive {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInActive {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Status2) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsActive = true
		return
	case 1:
		ty.IsInActive = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Status2) Variant() (uint8, error) {
	if ty.IsActive {
		return 0, nil
	}
	if ty.IsInActive {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Status2) MarshalJSON() ([]byte, error) {
	if ty.IsActive {
		return json.Marshal("Status2::Active")
	}
	if ty.IsInActive {
		return json.Marshal("Status2::InActive")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_project_ProjectInfo with id={{false [281]}}
type ProjectInfo struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=14
	Name []byte
	// Field 2 with TypeId=14
	Description []byte
	// Field 3 with TypeId=0
	DaoAccountId [32]byte
	// Field 4 with TypeId=0
	Creator [32]byte
	// Field 5 with TypeId=282
	Status Status2
}

// Tuple type generated from metadata id 287
type TupleOfUint64U128 struct {
	Elem0 uint64
	Elem1 types.U128
}

// Generated WeteeProjectTaskStatus with id=288
type TaskStatus struct {
	IsToDo       bool
	IsInProgress bool
	IsInReview   bool
	IsDone       bool
}

func (ty TaskStatus) Encode(encoder scale.Encoder) (err error) {
	if ty.IsToDo {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInProgress {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsInReview {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsDone {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *TaskStatus) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsToDo = true
		return
	case 1:
		ty.IsInProgress = true
		return
	case 2:
		ty.IsInReview = true
		return
	case 3:
		ty.IsDone = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *TaskStatus) Variant() (uint8, error) {
	if ty.IsToDo {
		return 0, nil
	}
	if ty.IsInProgress {
		return 1, nil
	}
	if ty.IsInReview {
		return 2, nil
	}
	if ty.IsDone {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty TaskStatus) MarshalJSON() ([]byte, error) {
	if ty.IsToDo {
		return json.Marshal("TaskStatus::ToDo")
	}
	if ty.IsInProgress {
		return json.Marshal("TaskStatus::InProgress")
	}
	if ty.IsInReview {
		return json.Marshal("TaskStatus::InReview")
	}
	if ty.IsDone {
		return json.Marshal("TaskStatus::Done")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_project_TaskInfo with id={{false [285]}}
type TaskInfo struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=14
	Name []byte
	// Field 2 with TypeId=14
	Description []byte
	// Field 3 with TypeId=78
	Point uint16
	// Field 4 with TypeId=2
	Priority byte
	// Field 5 with TypeId=12
	ProjectId uint64
	// Field 6 with TypeId=0
	Creator [32]byte
	// Field 7 with TypeId=286
	Rewards []TupleOfUint64U128
	// Field 8 with TypeId=2
	MaxAssignee byte
	// Field 9 with TypeId=69
	Assignees [][32]byte
	// Field 10 with TypeId=69
	Reviewers [][32]byte
	// Field 11 with TypeId=14
	Skills []byte
	// Field 12 with TypeId=288
	Status TaskStatus
}

// Generated wetee_project_ReviewRecord with id={{false [292]}}
type ReviewRecord struct {
	// Field 0 with TypeId=0
	Who [32]byte
	// Field 1 with TypeId=14
	Meta []byte
	// Field 2 with TypeId=175
	Option ReviewOpinion
}

// Generated wetee_project_Tally with id={{false [293]}}
type Tally struct {
	// Field 0 with TypeId=4
	Yes uint32
	// Field 1 with TypeId=4
	No uint32
}

// Generated wetee_project_ReviewStatus with id={{false [290]}}
type ReviewStatus struct {
	// Field 0 with TypeId=291
	Records []ReviewRecord
	// Field 1 with TypeId=293
	Tally Tally
}

// Generated wetee_gov_PreProp with id={{false [297]}}
type PreProp struct {
	// Field 0 with TypeId=4
	Id uint32
	// Field 1 with TypeId=13
	Hash [32]byte
	// Field 2 with TypeId=155
	Call RuntimeCall
	// Field 3 with TypeId=177
	MemberData MemberData
	// Field 4 with TypeId=0
	Creater [32]byte
	// Field 5 with TypeId=4
	PeriodIndex uint32
	// Field 6 with TypeId=4
	Start uint32
}

// Tuple type generated from metadata id 298
type TupleOfByteArray32SliceU128 struct {
	Elem0 [][32]byte
	Elem1 types.U128
}

// Generated wetee_gov_Tally with id={{false [300]}}
type Tally1 struct {
	// Field 0 with TypeId=6
	Yes types.U128
	// Field 1 with TypeId=6
	No types.U128
}

// Generated WeteeGovPropStatus with id=301
type PropStatus struct {
	IsOngoing  bool
	IsApproved bool
	IsRejected bool
}

func (ty PropStatus) Encode(encoder scale.Encoder) (err error) {
	if ty.IsOngoing {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsApproved {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsRejected {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *PropStatus) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsOngoing = true
		return
	case 1:
		ty.IsApproved = true
		return
	case 2:
		ty.IsRejected = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *PropStatus) Variant() (uint8, error) {
	if ty.IsOngoing {
		return 0, nil
	}
	if ty.IsApproved {
		return 1, nil
	}
	if ty.IsRejected {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty PropStatus) MarshalJSON() ([]byte, error) {
	if ty.IsOngoing {
		return json.Marshal("PropStatus::Ongoing")
	}
	if ty.IsApproved {
		return json.Marshal("PropStatus::Approved")
	}
	if ty.IsRejected {
		return json.Marshal("PropStatus::Rejected")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_gov_Prop with id={{false [299]}}
type Prop struct {
	// Field 0 with TypeId=4
	Id uint32
	// Field 1 with TypeId=155
	Proposal RuntimeCall
	// Field 2 with TypeId=4
	Start uint32
	// Field 3 with TypeId=4
	PeriodIndex uint32
	// Field 4 with TypeId=300
	Tally Tally1
	// Field 5 with TypeId=177
	MemberData MemberData
	// Field 6 with TypeId=301
	Status PropStatus
}

// Tuple type generated from metadata id 303
type TupleOfU128Uint32 struct {
	Elem0 types.U128
	Elem1 uint32
}

// Generated wetee_gov_VoteInfo with id={{false [305]}}
type VoteInfo struct {
	// Field 0 with TypeId=12
	DaoId uint64
	// Field 1 with TypeId=6
	Pledge types.U128
	// Field 2 with TypeId=178
	Opinion Opinion
	// Field 3 with TypeId=6
	VoteWeight types.U128
	// Field 4 with TypeId=4
	UnlockBlock uint32
	// Field 5 with TypeId=4
	PropIndex uint32
}

// Generated wetee_app_TeeApp with id={{false [308]}}
type TeeApp struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=0
	ContractId [32]byte
	// Field 3 with TypeId=4
	StartBlock uint32
	// Field 4 with TypeId=14
	Name []byte
	// Field 5 with TypeId=183
	TemplateId OptionTU128
	// Field 6 with TypeId=14
	Image []byte
	// Field 7 with TypeId=14
	Meta []byte
	// Field 8 with TypeId=186
	Command Command
	// Field 9 with TypeId=184
	Port []Service
	// Field 10 with TypeId=196
	Cr Cr
	// Field 11 with TypeId=194
	SideContainer []Container
	// Field 12 with TypeId=2
	Level byte
	// Field 13 with TypeId=197
	TeeVersion TEEVersion
	// Field 14 with TypeId=2
	Status byte
}

// Tuple type generated from metadata id 309
type TupleOfUint64Uint16 struct {
	Elem0 uint64
	Elem1 uint16
}

// Generated wetee_primitives_types_Env with id={{false [310]}}
type Env1 struct {
	// Field 0 with TypeId=78
	Index uint16
	// Field 1 with TypeId=190
	K EnvKey
	// Field 2 with TypeId=14
	V []byte
}

// Generated wetee_task_TeeTask with id={{false [312]}}
type TeeTask struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=0
	ContractId [32]byte
	// Field 3 with TypeId=4
	StartBlock uint32
	// Field 4 with TypeId=14
	Name []byte
	// Field 5 with TypeId=183
	TemplateId OptionTU128
	// Field 6 with TypeId=14
	Image []byte
	// Field 7 with TypeId=14
	Meta []byte
	// Field 8 with TypeId=186
	Command Command
	// Field 9 with TypeId=184
	Port []Service
	// Field 10 with TypeId=2
	Status byte
	// Field 11 with TypeId=196
	Cr Cr
	// Field 12 with TypeId=2
	Level byte
	// Field 13 with TypeId=197
	TeeVersion TEEVersion
}

// Generated wetee_gpu_GpuApp with id={{false [314]}}
type GpuApp struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=0
	ContractId [32]byte
	// Field 3 with TypeId=4
	StartBlock uint32
	// Field 4 with TypeId=14
	Name []byte
	// Field 5 with TypeId=183
	TemplateId OptionTU128
	// Field 6 with TypeId=14
	Image []byte
	// Field 7 with TypeId=14
	Meta []byte
	// Field 8 with TypeId=186
	Command Command
	// Field 9 with TypeId=184
	Port []Service
	// Field 10 with TypeId=2
	Status byte
	// Field 11 with TypeId=196
	Cr Cr
	// Field 12 with TypeId=2
	Level byte
	// Field 13 with TypeId=197
	TeeVersion TEEVersion
	// Field 14 with TypeId=194
	SideContainer []Container
}

// Generated wetee_worker_types_K8sCluster with id={{false [316]}}
type K8sCluster struct {
	// Field 0 with TypeId=12
	Id uint64
	// Field 1 with TypeId=0
	Account [32]byte
	// Field 2 with TypeId=4
	StartBlock uint32
	// Field 3 with TypeId=117
	StopBlock OptionTUint32
	// Field 4 with TypeId=117
	TerminalBlock OptionTUint32
	// Field 5 with TypeId=14
	Name []byte
	// Field 6 with TypeId=206
	Ip []Ip
	// Field 7 with TypeId=4
	Port uint32
	// Field 8 with TypeId=2
	Status byte
}

// Tuple type generated from metadata id 317
type TupleOfComCrComCr struct {
	Elem0 ComCr
	Elem1 ComCr
}

// Tuple type generated from metadata id 318
type TupleOfByteByte struct {
	Elem0 byte
	Elem1 byte
}

// Generated wetee_worker_types_DepositPrice with id={{false [319]}}
type DepositPrice struct {
	// Field 0 with TypeId=4
	CpuPer uint32
	// Field 1 with TypeId=4
	CvmCpuPer uint32
	// Field 2 with TypeId=4
	MemoryPer uint32
	// Field 3 with TypeId=4
	CvmMemoryPer uint32
	// Field 4 with TypeId=4
	DiskPer uint32
	// Field 5 with TypeId=4
	GpuPer uint32
}

// Generated wetee_worker_types_AssetDeposit with id={{false [320]}}
type AssetDeposit struct {
	// Field 0 with TypeId=12
	AssetId uint64
	// Field 1 with TypeId=6
	Deposit types.U128
	// Field 2 with TypeId=6
	Usd types.U128
	// Field 3 with TypeId=4
	Cpu uint32
	// Field 4 with TypeId=4
	CvmCpu uint32
	// Field 5 with TypeId=4
	Mem uint32
	// Field 6 with TypeId=4
	CvmMem uint32
	// Field 7 with TypeId=4
	Disk uint32
	// Field 8 with TypeId=4
	Gpu uint32
}

// Tuple type generated from metadata id 321
type TupleOfUint64WorkId struct {
	Elem0 uint64
	Elem1 WorkId
}

// Generated wetee_worker_types_ClusterContractState with id={{false [322]}}
type ClusterContractState struct {
	// Field 0 with TypeId=4
	StartNumber uint32
	// Field 1 with TypeId=0
	User [32]byte
	// Field 2 with TypeId=63
	WorkId WorkId
}

// Tuple type generated from metadata id 323
type TupleOfWorkIdUint64 struct {
	Elem0 WorkId
	Elem1 uint64
}

// Generated wetee_worker_types_ContractState with id={{false [324]}}
type ContractState struct {
	// Field 0 with TypeId=4
	BlockNumber uint32
	// Field 1 with TypeId=6
	Minted types.U128
	// Field 2 with TypeId=6
	Withdrawal types.U128
}

// Tuple type generated from metadata id 325
type TupleOfWorkIdUint32 struct {
	Elem0 WorkId
	Elem1 uint32
}

// Generated Option with id=330
type OptionTUint64 struct {
	IsNone       bool
	IsSome       bool
	AsSomeField0 uint64
}

func (ty OptionTUint64) Encode(encoder scale.Encoder) (err error) {
	if ty.IsNone {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsSome {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsSomeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *OptionTUint64) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsNone = true
		return
	case 1:
		ty.IsSome = true
		err = decoder.Decode(&ty.AsSomeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *OptionTUint64) Variant() (uint8, error) {
	if ty.IsNone {
		return 0, nil
	}
	if ty.IsSome {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty OptionTUint64) MarshalJSON() ([]byte, error) {
	if ty.IsNone {
		return json.Marshal("OptionTUint64::None")
	}
	if ty.IsSome {
		m := map[string]interface{}{"OptionTUint64::Some": ty.AsSomeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated WeteeTeeBridgeTEECallType with id=331
type TEECallType struct {
	IsInk    bool
	IsEvm    bool
	IsPallet bool
}

func (ty TEECallType) Encode(encoder scale.Encoder) (err error) {
	if ty.IsInk {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsEvm {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsPallet {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *TEECallType) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsInk = true
		return
	case 1:
		ty.IsEvm = true
		return
	case 2:
		ty.IsPallet = true
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *TEECallType) Variant() (uint8, error) {
	if ty.IsInk {
		return 0, nil
	}
	if ty.IsEvm {
		return 1, nil
	}
	if ty.IsPallet {
		return 2, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty TEECallType) MarshalJSON() ([]byte, error) {
	if ty.IsInk {
		return json.Marshal("TEECallType::Ink")
	}
	if ty.IsEvm {
		return json.Marshal("TEECallType::Evm")
	}
	if ty.IsPallet {
		return json.Marshal("TEECallType::Pallet")
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_tee_bridge_TEECall with id={{false [329]}}
type TEECall struct {
	// Field 0 with TypeId=6
	Id types.U128
	// Field 1 with TypeId=330
	ChainId OptionTUint64
	// Field 2 with TypeId=44
	OrgContract [20]byte
	// Field 3 with TypeId=44
	OrgCaller [20]byte
	// Field 4 with TypeId=331
	CallType TEECallType
	// Field 5 with TypeId=63
	WorkId WorkId
	// Field 6 with TypeId=78
	Method uint16
	// Field 7 with TypeId=14
	Args []byte
	// Field 8 with TypeId=18
	CallbackMethod [4]byte
}

// Generated PalletRevivePrimitivesStorageDeposit with id=335
type StorageDeposit struct {
	IsRefund       bool
	AsRefundField0 types.U128
	IsCharge       bool
	AsChargeField0 types.U128
}

func (ty StorageDeposit) Encode(encoder scale.Encoder) (err error) {
	if ty.IsRefund {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsRefundField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsCharge {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsChargeField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *StorageDeposit) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsRefund = true
		err = decoder.Decode(&ty.AsRefundField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsCharge = true
		err = decoder.Decode(&ty.AsChargeField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *StorageDeposit) Variant() (uint8, error) {
	if ty.IsRefund {
		return 0, nil
	}
	if ty.IsCharge {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty StorageDeposit) MarshalJSON() ([]byte, error) {
	if ty.IsRefund {
		m := map[string]interface{}{"StorageDeposit::Refund": ty.AsRefundField0}
		return json.Marshal(m)
	}
	if ty.IsCharge {
		m := map[string]interface{}{"StorageDeposit::Charge": ty.AsChargeField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated pallet_revive_primitives_ExecReturnValue with id={{false [333]}}
type ExecReturnValue struct {
	// Field 0 with TypeId=334
	Flags uint32
	// Field 1 with TypeId=14
	Data []byte
}

// Generated Result with id=336
type ResultTExecReturnValue struct {
	IsOk        bool
	AsOkField0  ExecReturnValue
	IsErr       bool
	AsErrField0 *DispatchError
}

func (ty ResultTExecReturnValue) Encode(encoder scale.Encoder) (err error) {
	if ty.IsOk {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsOkField0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsErr {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsErrField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *ResultTExecReturnValue) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsOk = true
		err = decoder.Decode(&ty.AsOkField0)
		if err != nil {
			return err
		}
		return
	case 1:
		ty.IsErr = true
		var tmp DispatchError
		err = decoder.Decode(&tmp)
		if err != nil {
			return err
		}
		ty.AsErrField0 = &tmp
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *ResultTExecReturnValue) Variant() (uint8, error) {
	if ty.IsOk {
		return 0, nil
	}
	if ty.IsErr {
		return 1, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty ResultTExecReturnValue) MarshalJSON() ([]byte, error) {
	if ty.IsOk {
		m := map[string]interface{}{"ResultTExecReturnValue::Ok": ty.AsOkField0}
		return json.Marshal(m)
	}
	if ty.IsErr {
		m := map[string]interface{}{"ResultTExecReturnValue::Err": ty.AsErrField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated pallet_revive_primitives_ContractResult with id={{false [332]}}
type ContractResult struct {
	// Field 0 with TypeId=10
	GasConsumed Weight
	// Field 1 with TypeId=10
	GasRequired Weight
	// Field 2 with TypeId=335
	StorageDeposit StorageDeposit
	// Field 3 with TypeId=336
	Result ResultTExecReturnValue
}

// Generated WeteeTeeBridgeTest with id=337
type Test struct {
	IsBaseT      bool
	IsTupleT     bool
	AsTupleTU80  byte
	AsTupleTU161 uint16
	IsStructT    bool
	AsStructTF10 int32
	AsStructTF21 int32
	IsStrT       bool
	AsStrTField0 []byte
}

func (ty Test) Encode(encoder scale.Encoder) (err error) {
	if ty.IsBaseT {
		err = encoder.PushByte(0)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsTupleT {
		err = encoder.PushByte(1)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTupleTU80)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsTupleTU161)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStructT {
		err = encoder.PushByte(2)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStructTF10)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStructTF21)
		if err != nil {
			return err
		}
		return nil
	}
	if ty.IsStrT {
		err = encoder.PushByte(3)
		if err != nil {
			return err
		}
		err = encoder.Encode(ty.AsStrTField0)
		if err != nil {
			return err
		}
		return nil
	}
	return fmt.Errorf("Unrecognized variant")
}
func (ty *Test) Decode(decoder scale.Decoder) (err error) {
	variant, err := decoder.ReadOneByte()
	if err != nil {
		return err
	}
	switch variant {
	case 0:
		ty.IsBaseT = true
		return
	case 1:
		ty.IsTupleT = true
		err = decoder.Decode(&ty.AsTupleTU80)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsTupleTU161)
		if err != nil {
			return err
		}
		return
	case 2:
		ty.IsStructT = true
		err = decoder.Decode(&ty.AsStructTF10)
		if err != nil {
			return err
		}
		err = decoder.Decode(&ty.AsStructTF21)
		if err != nil {
			return err
		}
		return
	case 3:
		ty.IsStrT = true
		err = decoder.Decode(&ty.AsStrTField0)
		if err != nil {
			return err
		}
		return
	default:
		return fmt.Errorf("Unrecognized variant")
	}
}
func (ty *Test) Variant() (uint8, error) {
	if ty.IsBaseT {
		return 0, nil
	}
	if ty.IsTupleT {
		return 1, nil
	}
	if ty.IsStructT {
		return 2, nil
	}
	if ty.IsStrT {
		return 3, nil
	}
	return 0, fmt.Errorf("No variant detected")
}
func (ty Test) MarshalJSON() ([]byte, error) {
	if ty.IsBaseT {
		return json.Marshal("Test::BaseT")
	}
	if ty.IsTupleT {
		m := map[string]interface{}{"Test::TupleT": map[string]interface{}{
			"AsTupleTU161": ty.AsTupleTU161,
			"AsTupleTU80":  ty.AsTupleTU80,
		}}
		return json.Marshal(m)
	}
	if ty.IsStructT {
		m := map[string]interface{}{"Test::StructT": map[string]interface{}{
			"AsStructTF10": ty.AsStructTF10,
			"AsStructTF21": ty.AsStructTF21,
		}}
		return json.Marshal(m)
	}
	if ty.IsStrT {
		m := map[string]interface{}{"Test::StrT": ty.AsStrTField0}
		return json.Marshal(m)
	}
	return nil, fmt.Errorf("No variant detected")
}

// Generated wetee_matrix_NodeInfo with id={{false [339]}}
type NodeInfo struct {
	// Field 0 with TypeId=6
	Id types.U128
	// Field 1 with TypeId=0
	Creator [32]byte
	// Field 2 with TypeId=4
	StartBlock uint32
	// Field 3 with TypeId=0
	AccountId [32]byte
	// Field 4 with TypeId=14
	Name []byte
	// Field 5 with TypeId=14
	Desc []byte
	// Field 6 with TypeId=14
	Purpose []byte
	// Field 7 with TypeId=14
	MetaData []byte
	// Field 8 with TypeId=14
	ImApi []byte
	// Field 9 with TypeId=14
	Bg []byte
	// Field 10 with TypeId=14
	Logo []byte
	// Field 11 with TypeId=14
	Img []byte
	// Field 12 with TypeId=14
	HomeUrl []byte
	// Field 13 with TypeId=220
	Status Status1
}

// Tuple type generated from metadata id 341
type Tuple341 struct {
	Elem0 types.U128
	Elem1 types.U128
	Elem2 types.U128
}

// Tuple type generated from metadata id 342
type TupleOfU128Uint64 struct {
	Elem0 types.U128
	Elem1 uint64
}

// Tuple type generated from metadata id 343
type TupleOfUint32ByteArray32 struct {
	Elem0 uint32
	Elem1 [32]byte
}

// Tuple type generated from metadata id 345
type TupleOfU128U128 struct {
	Elem0 types.U128
	Elem1 types.U128
}

// Tuple type generated from metadata id 344
type TupleOfUint64TupleOfU128U128 struct {
	Elem0 uint64
	Elem1 TupleOfU128U128
}

// Tuple type generated from metadata id 347
type TupleOfByteArray32U128 struct {
	Elem0 [32]byte
	Elem1 types.U128
}

// Generated wetee_store_types_AppTemplate with id={{false [348]}}
type AppTemplate struct {
	// Field 0 with TypeId=6
	Id types.U128
	// Field 1 with TypeId=0
	Account [32]byte
	// Field 2 with TypeId=4
	StartBlock uint32
	// Field 3 with TypeId=117
	TerminalBlock OptionTUint32
	// Field 4 with TypeId=14
	Name []byte
	// Field 5 with TypeId=14
	Meta []byte
	// Field 6 with TypeId=223
	Ty AppType
	// Field 7 with TypeId=197
	Run TEEVersion
	// Field 8 with TypeId=2
	Status byte
}

// Tuple type generated from metadata id 349
type TupleOfU128Uint16 struct {
	Elem0 types.U128
	Elem1 uint16
}

// Tuple type generated from metadata id 350
type TupleOfImageSliceUint32 struct {
	Elem0 []Image
	Elem1 uint32
}

func (c *RuntimeCall) AsCall() (ret types.Call, err error) {
	var cb []byte
	cb, err = codec.Encode(c)
	if err != nil {
		return
	}
	ret = types.Call{
		CallIndex: types.CallIndex{
			SectionIndex: cb[0],
			MethodIndex:  cb[1],
		},
		Args: cb[2:],
	}
	return
}
