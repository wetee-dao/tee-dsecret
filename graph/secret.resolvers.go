package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"context"
	"encoding/json"
	"fmt"

	types "wetee.app/dsecret/type"
)

// UploadSecret is the resolver for the upload_secret field.
func (r *mutationResolver) UploadSecret(ctx context.Context, secret types.Env) (*types.SecretEnvWithHash, error) {
	scrt, err := json.Marshal(secret)
	if err != nil {
		return nil, err
	}
	dkgIns.SetSecret(ctx, scrt)
	return &types.SecretEnvWithHash{
		Hash: "hash",
		Secret: &types.SecretEnv{
			Envs: []*types.LenValue{
				{
					Key: "key",
					Len: 1,
				},
			},
			Files: []*types.LenValue{
				{
					Key: "key",
					Len: 1,
				},
			},
		},
	}, nil
}

// Secret is the resolver for the secret field.
func (r *queryResolver) Secret(ctx context.Context, hash string) (*types.SecretEnvWithHash, error) {
	panic(fmt.Errorf("not implemented: Secret - secret"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
